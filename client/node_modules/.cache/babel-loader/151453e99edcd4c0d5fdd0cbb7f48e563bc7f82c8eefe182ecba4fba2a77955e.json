{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\woori\\\\Desktop\\\\Memo-Jung\\\\coursing\\\\client\\\\src\\\\pages\\\\Main.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchPosts } from \"../redux/actions/postActions\";\nimport PostList from \"../component/postList\";\nimport '../css/Main.css';\nimport \"../css/mylist.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Main = () => {\n  _s();\n  const dispatch = useDispatch();\n  const posts = useSelector(state => state.posts.posts);\n  const [loading, setLoading] = useState(true);\n  //console.log(posts);\n\n  useEffect(() => {\n    const fetchPostList = () => {\n      dispatch(fetchPosts());\n      setLoading(false);\n    };\n    fetchPostList();\n  }, [dispatch]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post_main_wrap\",\n      children: posts.map(post => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"main_wrap\",\n          children: /*#__PURE__*/_jsxDEV(PostList, {\n            post: post\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 29\n          }, this)\n        }, post.post_id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n_s(Main, \"Hcrph+jQGIIz8+7vWW1zlk6pUXk=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = Main;\nexport default Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["React","useEffect","useState","useDispatch","useSelector","fetchPosts","PostList","jsxDEV","_jsxDEV","Main","_s","dispatch","posts","state","loading","setLoading","fetchPostList","children","fileName","_jsxFileName","lineNumber","columnNumber","Fragment","className","map","post","post_id","_c","$RefreshReg$"],"sources":["C:/Users/woori/Desktop/Memo-Jung/coursing/client/src/pages/Main.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { fetchPosts } from \"../redux/actions/postActions\";\r\nimport PostList from \"../component/postList\";\r\nimport '../css/Main.css';\r\nimport \"../css/mylist.css\";\r\n\r\nconst Main = () => {\r\n    const dispatch = useDispatch();\r\n    const posts = useSelector(state => state.posts.posts);\r\n    const [loading, setLoading] = useState(true);\r\n    //console.log(posts);\r\n\r\n    useEffect(() => {\r\n        const fetchPostList = () => {\r\n            dispatch(fetchPosts());\r\n            setLoading(false);\r\n        }\r\n        fetchPostList();\r\n    }, [dispatch]);\r\n\r\n    if (loading) {\r\n        return <div>Loading...</div>;\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"post_main_wrap\">\r\n                {posts.map(post => {\r\n                    return (\r\n                        <div key={post.post_id} className=\"main_wrap\">\r\n                            <PostList post={post} />\r\n                        </div>\r\n                    )\r\n                })}\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Main;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,UAAU,QAAQ,8BAA8B;AACzD,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAO,iBAAiB;AACxB,OAAO,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3B,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACf,MAAMC,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAC9B,MAAMS,KAAK,GAAGR,WAAW,CAACS,KAAK,IAAIA,KAAK,CAACD,KAAK,CAACA,KAAK,CAAC;EACrD,MAAM,CAACE,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAC5C;;EAEAD,SAAS,CAAC,MAAM;IACZ,MAAMe,aAAa,GAAGA,CAAA,KAAM;MACxBL,QAAQ,CAACN,UAAU,CAAC,CAAC,CAAC;MACtBU,UAAU,CAAC,KAAK,CAAC;IACrB,CAAC;IACDC,aAAa,CAAC,CAAC;EACnB,CAAC,EAAE,CAACL,QAAQ,CAAC,CAAC;EAEd,IAAIG,OAAO,EAAE;IACT,oBAAON,OAAA;MAAAS,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAChC;EAEA,oBACIb,OAAA,CAACR,KAAK,CAACsB,QAAQ;IAAAL,QAAA,eACXT,OAAA;MAAKe,SAAS,EAAC,gBAAgB;MAAAN,QAAA,EAC1BL,KAAK,CAACY,GAAG,CAACC,IAAI,IAAI;QACf,oBACIjB,OAAA;UAAwBe,SAAS,EAAC,WAAW;UAAAN,QAAA,eACzCT,OAAA,CAACF,QAAQ;YAACmB,IAAI,EAAEA;UAAK;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC,GADlBI,IAAI,CAACC,OAAO;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEjB,CAAC;MAEd,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACM,CAAC;AAEzB,CAAC;AAAAX,EAAA,CA/BKD,IAAI;EAAA,QACWN,WAAW,EACdC,WAAW;AAAA;AAAAuB,EAAA,GAFvBlB,IAAI;AAiCV,eAAeA,IAAI;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}