{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\woori\\\\Desktop\\\\Memo-Jung\\\\coursing\\\\client\\\\src\\\\pages\\\\ChatRoom.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { AuthContext } from \"../context/AuthContext\";\nimport axios from \"axios\";\nimport \"../css/ChatRoom.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchUsers } from \"../redux/actions/userActions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatRoom = () => {\n  _s();\n  const navigate = useNavigate();\n  const {\n    user_id\n  } = useParams();\n  const {\n    loading,\n    userInfo\n  } = useContext(AuthContext);\n  const [chatLog, setChatLog] = useState([]);\n  const [message, setMessage] = useState('');\n  const [roomExist, setRoomExist] = useState(false);\n  const dispatch = useDispatch();\n  const users = useSelector(state => state.users.users);\n  const target_info = users.find(user => user.user_id === Number(user_id));\n  useEffect(() => {\n    dispatch(fetchUsers());\n  }, [dispatch]);\n  useEffect(() => {});\n  useEffect(() => {\n    const findRoom = async () => {\n      try {\n        const response = await axios.get('http://localhost:8000/api/chat_room', {\n          params: {\n            room_name\n          }\n        });\n        console.log(response.data);\n        if (response.data.exists) {\n          setRoomExist(true);\n          setChatLog(response.data.chatLogs); // 채팅 로그 불러오기\n        } else {\n          setRoomExist(false);\n        }\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    if (loading) {\n      findRoom();\n    }\n  }, [loading, room_name]);\n  const handleSendMessage = async () => {\n    if (!roomExist) {\n      try {\n        await axios.post('http://localhost:8000/api/newRoom', {\n          room_name: room_name,\n          user_id: userInfo[0].user_id,\n          target_user_id: user_id\n        });\n        setRoomExist(true);\n      } catch (err) {\n        console.error(err);\n      }\n    }\n    if (message.trim() === '') return;\n    try {\n      await axios.post('http://localhost:8000/api/chat_room/message', {\n        room_name: room_name,\n        send_user_id: userInfo[0].user_id,\n        message: message\n      });\n      setMessage('');\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter') {\n      handleSendMessage();\n    }\n  };\n  console.log(chatLog);\n  console.log(roomExist);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat_room_wrap\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat_room_top\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat_room_close\",\n          onClick: () => navigate(-1),\n          children: \"\\u21E6\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"target_user\",\n          children: target_info ? target_info.name : \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat_room_middle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat_room_bottom\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"textbox\",\n          type: \"text\",\n          placeholder: \"\\uBA54\\uC2DC\\uC9C0\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694.\",\n          value: message,\n          onChange: e => setMessage(e.target.value),\n          onKeyDown: handleKeyPress\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"send_message\",\n          type: \"subbit\",\n          children: \"\\uC804\\uC1A1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 9\n  }, this);\n};\n_s(ChatRoom, \"w+H+eOHb8Mwnb36VZXkkNt8bCE0=\", false, function () {\n  return [useNavigate, useParams, useDispatch, useSelector];\n});\n_c = ChatRoom;\nexport default ChatRoom;\nvar _c;\n$RefreshReg$(_c, \"ChatRoom\");","map":{"version":3,"names":["React","useContext","useEffect","useState","useNavigate","useParams","AuthContext","axios","useDispatch","useSelector","fetchUsers","jsxDEV","_jsxDEV","ChatRoom","_s","navigate","user_id","loading","userInfo","chatLog","setChatLog","message","setMessage","roomExist","setRoomExist","dispatch","users","state","target_info","find","user","Number","findRoom","response","get","params","room_name","console","log","data","exists","chatLogs","err","handleSendMessage","post","target_user_id","error","trim","send_user_id","handleKeyPress","e","key","Fragment","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","name","type","placeholder","value","onChange","target","onKeyDown","_c","$RefreshReg$"],"sources":["C:/Users/woori/Desktop/Memo-Jung/coursing/client/src/pages/ChatRoom.js"],"sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { AuthContext } from \"../context/AuthContext\";\r\nimport axios from \"axios\";\r\n\r\nimport \"../css/ChatRoom.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { fetchUsers } from \"../redux/actions/userActions\";\r\n\r\nconst ChatRoom = () => {\r\n    const navigate = useNavigate();\r\n    const { user_id } = useParams();\r\n    const { loading, userInfo } = useContext(AuthContext);\r\n    const [chatLog, setChatLog] = useState([]);\r\n    const [message, setMessage] = useState('');\r\n    const [roomExist, setRoomExist] = useState(false);\r\n    const dispatch = useDispatch();\r\n    const users = useSelector(state => state.users.users);\r\n    const target_info = users.find(user => user.user_id === Number(user_id));\r\n    \r\n    useEffect(() => {\r\n        dispatch(fetchUsers());\r\n    }, [dispatch]);\r\n\r\n    useEffect(() => {\r\n        \r\n    })\r\n\r\n    useEffect(() => {\r\n        const findRoom = async () => {\r\n            try {\r\n                const response = await axios.get('http://localhost:8000/api/chat_room', {\r\n                    params: {room_name}\r\n                });\r\n                console.log(response.data);\r\n\r\n                if (response.data.exists) {\r\n                    setRoomExist(true);\r\n                    setChatLog(response.data.chatLogs);  // 채팅 로그 불러오기\r\n                } else {\r\n                    setRoomExist(false);\r\n                }\r\n            } catch (err) {\r\n                console.log(err);\r\n            }\r\n        };\r\n\r\n        if(loading) {\r\n            findRoom();\r\n        }\r\n    }, [loading, room_name]);\r\n\r\n\r\n    const handleSendMessage = async () => {\r\n        if(!roomExist) {\r\n            try {\r\n                await axios.post('http://localhost:8000/api/newRoom', {\r\n                    room_name: room_name,\r\n                    user_id: userInfo[0].user_id,\r\n                    target_user_id: user_id\r\n                });\r\n                setRoomExist(true);\r\n            } catch (err) {\r\n                console.error(err);\r\n            }\r\n        }\r\n\r\n        if (message.trim() === '') return;\r\n\r\n        try {\r\n            await axios.post('http://localhost:8000/api/chat_room/message', {\r\n                room_name: room_name,\r\n                send_user_id: userInfo[0].user_id,\r\n                message: message\r\n            });\r\n\r\n            setMessage('');\r\n        } catch (err) {\r\n            console.error(err);\r\n        }\r\n    };\r\n\r\n    const handleKeyPress = (e) => {\r\n        if (e.key === 'Enter') {\r\n            handleSendMessage();\r\n        }\r\n    };\r\n\r\n    console.log(chatLog);\r\nconsole.log(roomExist);\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"chat_room_wrap\">\r\n                <div className=\"chat_room_top\">\r\n                    <div className=\"chat_room_close\" onClick={() => navigate(-1)}>⇦</div>\r\n                    <div className=\"target_user\">{target_info ? target_info.name : \"Loading...\"}</div>\r\n                </div>\r\n                <div className=\"chat_room_middle\">\r\n                    \r\n                </div>\r\n                <div className=\"chat_room_bottom\">\r\n                    <input \r\n                        className=\"textbox\" type=\"text\" \r\n                        placeholder=\"메시지를 입력해주세요.\" \r\n                        value={message}\r\n                        onChange={(e) => setMessage(e.target.value)}\r\n                        onKeyDown={handleKeyPress}\r\n                    />\r\n                    <button className=\"send_message\" type=\"subbit\">전송</button>\r\n                </div>\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default ChatRoom;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}