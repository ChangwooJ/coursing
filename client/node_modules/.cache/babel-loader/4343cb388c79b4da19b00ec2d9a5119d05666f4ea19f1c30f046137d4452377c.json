{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\woori\\\\Desktop\\\\Memo-Jung\\\\coursing\\\\client\\\\src\\\\component\\\\list_map.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport \"../css/list_map.css\";\nimport DetailLoc from \"./detailLoc\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  kakao\n} = window;\nconst ListMap = ({\n  positions\n}) => {\n  _s();\n  const mapContainerRef = useRef(null);\n  const [map, setMap] = useState(null);\n  const [selPosition, setSelPosition] = useState(null);\n  const [button, setButton] = useState(\">\");\n  const [temp, setTemp] = useState(null);\n  useEffect(() => {\n    if (positions.length > 0) {\n      initializeMap(positions);\n    }\n  }, [positions]);\n  useEffect(() => {\n    if (selPosition === null) {\n      setButton(\">\");\n    } else setButton(\"<\");\n  });\n  const initializeMap = positions => {\n    if (mapContainerRef.current && positions.length > 0) {\n      const container = mapContainerRef.current;\n      const options = {\n        center: positions[0].latlng,\n        level: 4\n      };\n      const newMap = new kakao.maps.Map(container, options);\n      positions.forEach(position => {\n        const marker = new kakao.maps.Marker({\n          position: position.latlng,\n          clickable: true\n        });\n        marker.setMap(newMap);\n      });\n      setMap(newMap);\n    }\n  };\n  const viewPlan = index => {\n    map.panTo(positions[index].latlng);\n    //panTo에 option을 줄 수 있음. 화면 이동시 해당 요소로의 확대(level의 변경)가 필요해보임\n    setSelPosition(positions[index]);\n  };\n  const transition = () => {\n    if (selPosition !== null) {\n      setTemp(selPosition);\n      setSelPosition(null);\n    } else {\n      setSelPosition(temp);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map\",\n      ref: mapContainerRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list_wrap\",\n      children: [positions.length > 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: positions[0].title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 43\n      }, this), positions.map((position, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => viewPlan(index),\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: position.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: position.memo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 25\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }, this)\n      //building_name이 없는 경우의 문제\n      )]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), selPosition && /*#__PURE__*/_jsxDEV(DetailLoc, {\n      position: selPosition\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 29\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bt_Wrap\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"close_bt\",\n        onClick: () => transition(),\n        children: button\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n};\n_s(ListMap, \"/lU2nKKrOag7fR2LSjZlBW648Fk=\");\n_c = ListMap;\nexport default ListMap;\nvar _c;\n$RefreshReg$(_c, \"ListMap\");","map":{"version":3,"names":["React","useEffect","useRef","useState","DetailLoc","jsxDEV","_jsxDEV","kakao","window","ListMap","positions","_s","mapContainerRef","map","setMap","selPosition","setSelPosition","button","setButton","temp","setTemp","length","initializeMap","current","container","options","center","latlng","level","newMap","maps","Map","forEach","position","marker","Marker","clickable","viewPlan","index","panTo","transition","Fragment","children","className","ref","fileName","_jsxFileName","lineNumber","columnNumber","title","onClick","name","memo","_c","$RefreshReg$"],"sources":["C:/Users/woori/Desktop/Memo-Jung/coursing/client/src/component/list_map.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport \"../css/list_map.css\";\r\nimport DetailLoc from \"./detailLoc\";\r\n\r\nconst { kakao } = window;\r\n\r\nconst ListMap = ({ positions }) => {\r\n    const mapContainerRef = useRef(null);\r\n    const [map, setMap] = useState(null);\r\n    const [selPosition, setSelPosition] = useState(null);\r\n    const [button, setButton] = useState(\">\");\r\n    const [temp, setTemp] = useState(null);\r\n\r\n    useEffect(() => {\r\n        if (positions.length > 0) {\r\n            initializeMap(positions);\r\n        }\r\n    }, [positions]);\r\n\r\n    useEffect(()=>{\r\n        if(selPosition === null){\r\n            setButton(\">\");\r\n        } else setButton(\"<\");\r\n    })\r\n\r\n    const initializeMap = (positions) => {\r\n        if (mapContainerRef.current && positions.length > 0) {\r\n            const container = mapContainerRef.current;\r\n            const options = {\r\n                center: positions[0].latlng,\r\n                level: 4\r\n            };\r\n            const newMap = new kakao.maps.Map(container, options);\r\n\r\n            positions.forEach((position) => {\r\n                const marker = new kakao.maps.Marker({\r\n                    position: position.latlng,\r\n                    clickable: true\r\n                });\r\n                marker.setMap(newMap);\r\n            });\r\n\r\n            setMap(newMap);\r\n        }\r\n    };\r\n\r\n    const viewPlan = ( index ) => {\r\n        map.panTo(positions[index].latlng);\r\n        //panTo에 option을 줄 수 있음. 화면 이동시 해당 요소로의 확대(level의 변경)가 필요해보임\r\n        setSelPosition(positions[index]);\r\n    }\r\n\r\n    const transition = () => {\r\n        if(selPosition !== null){\r\n            setTemp(selPosition);\r\n            setSelPosition(null);\r\n        } else {\r\n            setSelPosition(temp);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"map\" ref={mapContainerRef}></div>\r\n            <div className=\"list_wrap\">\r\n                {positions.length > 0 && (<p>{positions[0].title}</p>)}\r\n                {positions.map((position, index) => (\r\n                    <button key={index} onClick={() => viewPlan(index)}>\r\n                        <p>{position.name}</p>\r\n                        <p>{position.memo}</p>\r\n                    </button>\r\n                    //building_name이 없는 경우의 문제\r\n                ))}\r\n            </div>\r\n            {selPosition && <DetailLoc position={selPosition} />}\r\n            <div className=\"bt_Wrap\">\r\n                <button className=\"close_bt\" onClick={()=>transition()}>{button}</button>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default ListMap;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}