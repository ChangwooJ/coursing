{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\woori\\\\Desktop\\\\Memo-Jung\\\\coursing\\\\client\\\\src\\\\component\\\\list_map.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useMemo, useRef, useState } from \"react\";\nimport axios from \"axios\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchLists } from \"../redux/actions/listActions\";\nimport List from \"./list\";\nimport \"../css/list_map.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  kakao\n} = window;\nconst ListMap = ({\n  positions\n}) => {\n  _s();\n  const mapContainerRef = useRef(null);\n  useEffect(() => {\n    if (POST.length > 0) {\n      fetchLocations(lists);\n    }\n  }, [lists]);\n  if (filteredLocations.length > 0) {\n    initializeMap(filteredLocations);\n  }\n  const initializeMap = positions => {\n    if (mapContainerRef.current && positions.length > 0) {\n      const container = mapContainerRef.current;\n      const options = {\n        center: positions[0].latlng,\n        level: 6\n      };\n      const map = new kakao.maps.Map(container, options);\n      positions.forEach(position => {\n        const marker = new kakao.maps.Marker({\n          position: position.latlng,\n          clickable: true\n        });\n        marker.setMap(map);\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map\",\n      ref: mapContainerRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), positions.length > 0 && /*#__PURE__*/_jsxDEV(List, {\n      positions: positions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 38\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n_s(ListMap, \"JDsoK+vCj+KIdyRFXV6E+3zLK1c=\");\n_c = ListMap;\nexport default ListMap;\n\n//useEffect와 객체간의 관계, 얕은 비교, 참조값, 무한루프를 위한 useMemo사용\nvar _c;\n$RefreshReg$(_c, \"ListMap\");","map":{"version":3,"names":["React","useEffect","useMemo","useRef","useState","axios","useDispatch","useSelector","fetchLists","List","jsxDEV","_jsxDEV","kakao","window","ListMap","positions","_s","mapContainerRef","POST","length","fetchLocations","lists","filteredLocations","initializeMap","current","container","options","center","latlng","level","map","maps","Map","forEach","position","marker","Marker","clickable","setMap","Fragment","children","className","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/woori/Desktop/Memo-Jung/coursing/client/src/component/list_map.js"],"sourcesContent":["import React, { useEffect, useMemo, useRef, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { fetchLists } from \"../redux/actions/listActions\";\r\nimport List from \"./list\";\r\nimport \"../css/list_map.css\";\r\n\r\nconst { kakao } = window;\r\n\r\nconst ListMap = ({ positions }) => {\r\n    const mapContainerRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        if (POST.length > 0) {\r\n            fetchLocations(lists);\r\n        }\r\n    }, [lists]);\r\n\r\n    if (filteredLocations.length > 0) {\r\n        initializeMap(filteredLocations);\r\n    }\r\n\r\n    const initializeMap = (positions) => {\r\n        if (mapContainerRef.current && positions.length > 0) {\r\n            const container = mapContainerRef.current;\r\n            const options = {\r\n                center: positions[0].latlng,\r\n                level: 6\r\n            };\r\n            const map = new kakao.maps.Map(container, options);\r\n\r\n            positions.forEach((position) => {\r\n                const marker = new kakao.maps.Marker({\r\n                    position: position.latlng,\r\n                    clickable: true\r\n                });\r\n                marker.setMap(map);\r\n            });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"map\" ref={mapContainerRef}></div>\r\n            {positions.length > 0 && <List positions={positions} />}\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default ListMap;\r\n\r\n//useEffect와 객체간의 관계, 얕은 비교, 참조값, 무한루프를 위한 useMemo사용"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,OAAO,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AACnE,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,UAAU,QAAQ,8BAA8B;AACzD,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAO,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7B,MAAM;EAAEC;AAAM,CAAC,GAAGC,MAAM;AAExB,MAAMC,OAAO,GAAGA,CAAC;EAAEC;AAAU,CAAC,KAAK;EAAAC,EAAA;EAC/B,MAAMC,eAAe,GAAGd,MAAM,CAAC,IAAI,CAAC;EAEpCF,SAAS,CAAC,MAAM;IACZ,IAAIiB,IAAI,CAACC,MAAM,GAAG,CAAC,EAAE;MACjBC,cAAc,CAACC,KAAK,CAAC;IACzB;EACJ,CAAC,EAAE,CAACA,KAAK,CAAC,CAAC;EAEX,IAAIC,iBAAiB,CAACH,MAAM,GAAG,CAAC,EAAE;IAC9BI,aAAa,CAACD,iBAAiB,CAAC;EACpC;EAEA,MAAMC,aAAa,GAAIR,SAAS,IAAK;IACjC,IAAIE,eAAe,CAACO,OAAO,IAAIT,SAAS,CAACI,MAAM,GAAG,CAAC,EAAE;MACjD,MAAMM,SAAS,GAAGR,eAAe,CAACO,OAAO;MACzC,MAAME,OAAO,GAAG;QACZC,MAAM,EAAEZ,SAAS,CAAC,CAAC,CAAC,CAACa,MAAM;QAC3BC,KAAK,EAAE;MACX,CAAC;MACD,MAAMC,GAAG,GAAG,IAAIlB,KAAK,CAACmB,IAAI,CAACC,GAAG,CAACP,SAAS,EAAEC,OAAO,CAAC;MAElDX,SAAS,CAACkB,OAAO,CAAEC,QAAQ,IAAK;QAC5B,MAAMC,MAAM,GAAG,IAAIvB,KAAK,CAACmB,IAAI,CAACK,MAAM,CAAC;UACjCF,QAAQ,EAAEA,QAAQ,CAACN,MAAM;UACzBS,SAAS,EAAE;QACf,CAAC,CAAC;QACFF,MAAM,CAACG,MAAM,CAACR,GAAG,CAAC;MACtB,CAAC,CAAC;IACN;EACJ,CAAC;EAED,oBACInB,OAAA,CAACX,KAAK,CAACuC,QAAQ;IAAAC,QAAA,gBACX7B,OAAA;MAAK8B,SAAS,EAAC,KAAK;MAACC,GAAG,EAAEzB;IAAgB;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,EAChD/B,SAAS,CAACI,MAAM,GAAG,CAAC,iBAAIR,OAAA,CAACF,IAAI;MAACM,SAAS,EAAEA;IAAU;MAAA4B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3C,CAAC;AAEzB,CAAC;AAAC9B,EAAA,CAtCIF,OAAO;AAAAiC,EAAA,GAAPjC,OAAO;AAwCb,eAAeA,OAAO;;AAEtB;AAAA,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}