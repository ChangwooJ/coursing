{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\woori\\\\Desktop\\\\Memo-Jung\\\\coursing\\\\client\\\\src\\\\pages\\\\ChatRoom.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { AuthContext } from \"../context/AuthContext\";\nimport axios from \"axios\";\nimport \"../css/ChatRoom.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatRoom = () => {\n  _s();\n  const navigate = useNavigate();\n  const {\n    user_id\n  } = useParams();\n  const {\n    loading,\n    userInfo\n  } = useContext(AuthContext);\n  const [chatLog, setChatLog] = useState([]);\n  const sort_id = [user_id, userInfo.user_id].sort();\n  const roomId = sort_id.join('_');\n  const [roomExist, setRoomExist] = useState(false);\n  const dispatch = useDispatch();\n  const users = useSelector(state => state.users.users);\n  useEffect(() => {\n    const findRoom = async () => {\n      try {\n        const response = await axios.get('http://localhost:8000/api/chat_room', {\n          params: {\n            roomId\n          }\n        });\n        if (response.data.exists) {\n          setRoomExist(true);\n          setChatLog(response.data.chatLogs); // 채팅 로그 불러오기\n        } else {\n          setRoomExist(false);\n        }\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    if (loading) {\n      findRoom();\n    }\n  }, [loading, roomId]);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat_room_wrap\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat_room_top\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat_room_close\",\n          onClick: () => navigate(-1),\n          children: \"\\u21E6\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"target_user\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n_s(ChatRoom, \"p3q+2soTx9eRZYRVK4M2H31PmwM=\", false, function () {\n  return [useNavigate, useParams, useDispatch, useSelector];\n});\n_c = ChatRoom;\nexport default ChatRoom;\nvar _c;\n$RefreshReg$(_c, \"ChatRoom\");","map":{"version":3,"names":["React","useContext","useEffect","useState","useNavigate","useParams","AuthContext","axios","useDispatch","useSelector","jsxDEV","_jsxDEV","ChatRoom","_s","navigate","user_id","loading","userInfo","chatLog","setChatLog","sort_id","sort","roomId","join","roomExist","setRoomExist","dispatch","users","state","findRoom","response","get","params","data","exists","chatLogs","err","console","log","Fragment","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/woori/Desktop/Memo-Jung/coursing/client/src/pages/ChatRoom.js"],"sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { AuthContext } from \"../context/AuthContext\";\r\nimport axios from \"axios\";\r\n\r\nimport \"../css/ChatRoom.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nconst ChatRoom = () => {\r\n    const navigate = useNavigate();\r\n    const { user_id } = useParams();\r\n    const { loading, userInfo } = useContext(AuthContext);\r\n    const [chatLog, setChatLog] = useState([]);\r\n    const sort_id = [user_id, userInfo.user_id].sort();\r\n    const roomId = sort_id.join('_');\r\n    const [roomExist, setRoomExist] = useState(false);\r\n    const dispatch = useDispatch();\r\n    const users = useSelector(state => state.users.users);\r\n    \r\n    useEffect(() => {\r\n        const findRoom = async () => {\r\n            try {\r\n                const response = await axios.get('http://localhost:8000/api/chat_room', {\r\n                    params: {roomId}\r\n                });\r\n\r\n                if (response.data.exists) {\r\n                    setRoomExist(true);\r\n                    setChatLog(response.data.chatLogs);  // 채팅 로그 불러오기\r\n                } else {\r\n                    setRoomExist(false);\r\n                }\r\n            } catch (err) {\r\n                console.log(err);\r\n            }\r\n        };\r\n\r\n        if(loading) {\r\n            findRoom();\r\n        }\r\n    }, [loading, roomId]);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"chat_room_wrap\">\r\n                <div className=\"chat_room_top\">\r\n                    <div className=\"chat_room_close\" onClick={() => navigate(-1)}>⇦</div>\r\n                    <div className=\"target_user\"></div>\r\n                </div>\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default ChatRoom;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}