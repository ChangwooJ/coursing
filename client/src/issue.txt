1. building_name 공백 시 문제 수정해야함. -> 검색으로 넘어오는 네임은 존재
2. close 버튼이 눌렸을때 detailLoc의 transform: translateX(0);을 작동시킬 방법 모색해야함 ->  다른 방식
3. 현재 임시로 사용하고 있는 user_id나 list_id 등에 대한 구분이 필요함. 이를 위해서는 회원가입이나 로그인 등과 같은 부분이 들어가야함. v
4. 주소 등을 활용한 검색 창 필요 (v)
5. 여기까지 하면 가장 기본이 되는 구조완성.
6. css작업
7. css작업 이후에 이 웹의 특색이 될 부분들 추가 -> 일부 완료, 일부는 2차 프로젝트


- passport를 이용한 로그인 구현완료.
- 로그인 상태 구분을 통한 접근 제한 처리.
- 로그인 상태와 유저에 대한 정보 관리 필요.


- 배너 카테고리 연결하기. v
- 로그인 관련 수정. v
- 스와이프 네이게이션 처리.

8/14---------------------------------------
- 카테고리 연결완료.
-------------------------------------------
- 로그인 배너 제작. v
- swiper 네비게이션 수정.
- 일정 배너 css 수정(정리/색상) v

8/19---------------------------------------
- 배너 임시 제작완료.
-------------------------------------------
- 로그인 배너 데이터 가져오기 마무리. v
- 내 일정 관리페이지 수정. v

8/26---------------------------------------
- 로그인 배너 제작완료.
-------------------------------------------
- 내 일정 상세페이지 수정. v

8/27---------------------------------------
- 사이드 배너 구현 완료. (building_name이 없는 경우에 대한 처리 필요.)
-------------------------------------------
- 드롭다운 디자인 수정. v
- 마이페이지 제작.
- 내 일정 상세 페이지 수정. v

8/28---------------------------------------
- 사이드 배너 랜더링 통일.
- 드롭다운 수정 완료.
- 일정 클릭시 해당 위치로의 지도 이동.
- 내 일정 상세 페이지 임시 완료.
- 마이페이지 제작 시작.
-------------------------------------------
- 포스트 - 유저 관계 db로드. v

8/29---------------------------------------
- 유저 - 카테고리 관계 db (다대다 테이블 이용) 설정.
- 마이페이지/기본 인포.
- 마이페이지 개인포스트 목록 데이터 업로드.
-------------------------------------------
- 마이페이지 css작업. v
- 추가될 마이페이지 정보/기능 아이디어 필요.

9/2----------------------------------------
- 마이페이지 css 작업.
- 메인 포스트 페이지 css 작업.
-------------------------------------------
- 포스트 배너 마저 작업. v
- 포스트 배너와 마이 배너의 틀은 유사한데, 기능에 따라 추가되고 제외되는 부분이 있어서 컴포넌트화 하는게 맞는지 모르겠다. v
- 포스트 상세페이지. 

9/3----------------------------------------
- 포스트 배너 작업 완료.
- 포스트 배너와 스와이퍼의 연동 기능.(navigation의 모듈 임포트/onSwiper를 통한 인스턴스 상태 생성/slideTo를 통한 페이지 이동)
-------------------------------------------
- 마이페이지-> 유저페이지 자체 컴포넌트화 v
- 다른 사용자 프로필 페이지 v
- 포스트 상세 페이지 

9/4----------------------------------------
- 유저페이지 컴포넌트화 완료.
- 마이페이지와 유저페이지 구분
- 포스트 상세 페이지 프레임
-------------------------------------------
- 포스트 상세 페이지 구현.

9/5----------------------------------------
- 포스트 상세 페이지.
- 지도 위에 이미지 올리기
-------------------------------------------
- 한 지도에 전부 올리고 배너 등을 통해 위치 이동 식 표현.
- 텍스트는 이미지 오른편에 제공/불투명도 설정.

9/6----------------------------------------
- Maps컴포넌트에서 useFetchMaps 커스텀 훅으로 변경.
- 맵의 옵션과 마커 설정만 관리.
- 맵 인스턴스 생성은 각각의 컴포넌트에서.
- 맵 생성 무한루프 이슈 - content의 참조값 변화
    -> useSelector를 사용하는 방식은 filter등을 사용할때 새로운 배열에 객체를 담기 때문에 참조값에 계속되는 변화가 발생함.
    -> 또한, 이 값을 다른 곳에서 사용할 경우에도 참조값에 차이가 발생.
    -> 이로 인한 커스텀 훅의 무한루프 이슈.
    -> useMemo 혹은 deep comparison을 통한 해결
-------------------------------------------
- 맵에 맞게 이미지 배치
- 커스텀 훅의 형식에 맞게 각 컴포넌트 수정.
- 개별로 맵 사용하던 컴포넌트 수정.
- 상세 페이지 마무리.(텍스트 등)

9/9----------------------------------------
- 상세 페이지 구조 변경.
- 스크롤 배너 제작.
- 이미지 배치 및 텍스트 배치.
- 오버레이 수정.
-------------------------------------------
- 개별 맵 컴포넌트 수정.
- Create 부분 작업.

9/10---------------------------------------
- useRef에 대한 정리 필요. (useRef : 책갈피 역할)
- 다수의 맵을 필요로 하는 경우 useRef를 통해 개별 DOM요소 지정.
-------------------------------------------
- 메인 페이지의 수정필요.
    -> 포스트 하나를 다루는 컴포넌트로 이루어진 페이지
    -> main.js : post마다 처리
    -> postlist.js : content마다 처리 - post.js와 유사하게
- 커스텀 훅의 응용(?) 의도와 다른 데이터 제공시에 문제
- 프레임에 맞게 컴포넌트 재제작.

9/11---------------------------------------
- 내 일정 페이지 커스텀 훅 적용
- 포스트마다 뿐만 아니라 스와이퍼 내에서도 컨텐츠 마다 맵을 제공해야함.
    -> 커스텀 훅은 1개의 맵을 대상으로 하기에
    -> postMap.js라는 맵 생성 전용 컴포넌트를 제작.
- 이외의 맵 관련 제작 및 수정하면서 생긴 자잘한 이슈들 처리
-------------------------------------------
- 얼추 Read관련 부분은 완성된 듯함.
- 시작은 회원가입 페이지 제작.
- 여유되면 일정 추가 기능 제작.

9/12---------------------------------------
- 로그인 세션 없을때 임시 처리.
- 회원가입 페이지 완료.
- 메일 인증 시스템 구축.
-------------------------------------------
- 일정 추가 등 여러 추가 기능.

9/13---------------------------------------
- 일정 추가 팝업 구성.
- 기존 일정 고려 및 새로운 일정에 대한 정보 입력.
-------------------------------------------
- 글 생성 페이지.

9/16---------------------------------------
- 일정 추가 팝업 제작중.
- 일정 별 색상, 추가할 일정 정보와 추가 기입 항목
- 일정표와 시간 기입란 동기화
-------------------------------------------
- 기존 일정과 새 일정 간의 시간 충돌 에러.
- 완료된 정보 DB 저장 코드 필요.

9/18---------------------------------------
- 일정 추가 시의 충돌 에러 해결.
- DB 저장 코드 추가.
-------------------------------------------
- 게시글 생성 페이지(글쓰기 버튼은 마이페이지에?)

9/19---------------------------------------
- 게시글 생성 방식
    -> 두가지 루트를 제공함.
        - 기존 플랜 활용 방식
        - 새로운 플랜 제작 방식
    -> 각 루트에 대한 글생성 컴포넌트는 동일
    -> 일정을 기준으로 한 글 생성 방식.
    -> 하나의 일정 마다 위치 정보와 사진, 글 등이 포함되어야 함.
- 루트 제공과 글생성 컴포넌트의 기초 작업
-------------------------------------------
- 새로운 플랜 제작 방식을 먼저 제작.

9/23---------------------------------------
- 게시글 생성 방식 제공.
- 사진 먼저 입력 후 컨텐츠 작성 가능.
- img -> 서버 측 저장 후 경로 제공방식.
- 전송할 img formData에 나머지 컨텐츠 데이터도 담을 계획.
-------------------------------------------
- 기존 맵생성 방식을 채택하기 위해선, 첫 장소가 제공되기 이전에는 맵 표시 x.
- 이미지를 입력받으면, 컨텐츠에 대한 작성이 바로 표시됨. (우측 추가 DOM요소)
- 전부 입력받으면, 상단에 일정 배너를 만들어 표시 / 추가 작성 여부 표시

9/24---------------------------------------
- 이미지 -> 위치/맵표시 -> 컨텐츠
- 데이터 상위 코드로 전송.
-------------------------------------------
- 전체적인 일정을 보여줄 메인 화면.

9/26---------------------------------------
- 포스트 미리보기 같은 형식
    -> 맵 컴포넌트 위에 플랜 배너를 깔고 생성된 컨텐츠 데이터들을 미리보기 형식으로 제공.
- 추후에 문서화 할 때 맵 생성 방식에 대한 정리가 필요할 듯 함.
- 컴포넌트 폴더 정리
-------------------------------------------
- 상단 배너 내용 랜더안됨.
- 카테고리 DB연결.
- 컨텐츠 추가 버튼.
- 포스트 업로드 기능.

9/27---------------------------------------
- 배너 처리 및 추가 버튼 구현.
- 옵셔널 체이닐 ("?") 을 이용한 Cannot read properties of undefined 에러 처리.
- 카테고리 DB 연결.
-------------------------------------------
- 컨텐츠 제거 버튼/컨텐츠 추가 버튼 기능
- 백엔드단.

9/30---------------------------------------
- 컨텐츠 추가/삭제 기능

10/03--------------------------------------
- 이전에 선택에 대한 처리를 한적이 있는데, 재선택시 해제하는 방식은 .includes()로 처리가능.
- 추후에 promise에 대한 정리 필요
- 업로드 팝업 제작.
- 포스트 타이틀, 작성자, 날짜 / 포스트 카테고리 DB저장.
-------------------------------------------
- onUploadPost() 에서 먼저 이미지 파일 서버로 전송하고 저장.
- 저장한 경로를 제공받아 나머지 정보와 함께 post_content내용 DB저장.
- 기존/새 일정 구분

10/04--------------------------------------
- 요청 데이터 사이즈에 제한이 있다. -> body-parser 옵션 설정 필요.
- 이미지와 같은 큰파일은 multer를 이용해 처리.
- 백엔드단에서 데이터 처리 완료.
-------------------------------------------
- 기존/새 일정 구분
- 삭제 기능

10/07--------------------------------------
- 기존 일정 데이터 불러오기
- 기존 일정 형식에 맞게 수정 (다음에는 데이터는 전부 동일한 이름 및 형식을 갖추는게 좋을듯함. ERD작성...)
-------------------------------------------
- 컨텐츠와 이미지는 맵생성 컴포넌트 측에서 다루니 데이터가 없을때 표시하지 않고 추가하는 버튼 제공.
    -> 다음에는 데이터를 어느 위치에서 다룰것인지를 명확히 할 필요가 있어보임.
    -> 한가지 형식의 데이터가 분리되어 다른 컴포넌트에 삽입되어 표시되니 관리가 어려워짐.

10/12--------------------------------------
- 맵컴포넌트 측에서 버튼 제공.
- previewPost 컴포넌트 측에서 수정 가능.
- 기존의 플랜을 수정하지 않고 제거하고 새 플랜을 추가하는 기존의 방식을 재활용.
- 주소 참고해서 중복 방지 및 시간 상 겹침 방지 로직.
- 작성하지 않은 컨텐츠가 없도록 처리.
- 여러개의 데이터를 등록할때는 첫번째 데이터의 도착 직후 로직이 끝나는 경우가 있기 때문에, await Promise.all(uploadPromises); 처럼 병렬처리해야한다.
-------------------------------------------
- 유저 페이지 게시글 수 5개이상 처리
- 삭제 기능 추가.

-----------------------------------------------------------------------------------------
<남은 기능들> - 중간점검
- 채팅
- 장소 정보&리뷰
- 게시글의 SNS적인 요소(댓글, 좋아요 등 ...)
- 게시글 표시 알고리즘
- 공유
- ...etc.
-----------------------------------------------------------------------------------------