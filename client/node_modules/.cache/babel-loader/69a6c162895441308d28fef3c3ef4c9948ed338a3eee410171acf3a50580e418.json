{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\woori\\\\Desktop\\\\Memo-Jung\\\\coursing\\\\client\\\\src\\\\component\\\\maps.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  kakao\n} = window;\nconst Maps = ({\n  lat,\n  lon,\n  id\n}) => {\n  _s();\n  const mapContainerRef = useRef(null); // useRef를 사용하여 DOM 요소를 참조\n\n  var add_res = axios({\n    method: \"GET\",\n    url: `https://dapi.kakao.com/v2/local/geo/coord2address.json?x=${lat}&y=${lon}&input_coord=WGS84`,\n    headers: {\n      Authorization: `KakaoAK 59be56c1b793f6c69842484efa84e201`\n    }\n  });\n  var address = encodeURIComponent(add_res.address_name);\n  const loc_res = axios({\n    method: \"GET\",\n    url: `https://dapi.kakao.com/v2/local/search/address.json?analyze_type=similar&query=${address}`,\n    headers: {\n      Authorization: `KakaoAK 59be56c1b793f6c69842484efa84e201`\n    }\n  });\n  useEffect(() => {}, [lat, lon]); // lat과 lon이 변경될 때마다 effect 실행\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: id,\n    ref: mapContainerRef,\n    style: {\n      width: '100%',\n      height: '100%'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 12\n  }, this); // ref를 div에 설정\n};\n_s(Maps, \"JDsoK+vCj+KIdyRFXV6E+3zLK1c=\");\n_c = Maps;\nexport default Maps;\nvar _c;\n$RefreshReg$(_c, \"Maps\");","map":{"version":3,"names":["React","useEffect","useRef","axios","jsxDEV","_jsxDEV","kakao","window","Maps","lat","lon","id","_s","mapContainerRef","add_res","method","url","headers","Authorization","address","encodeURIComponent","address_name","loc_res","ref","style","width","height","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/woori/Desktop/Memo-Jung/coursing/client/src/component/maps.js"],"sourcesContent":["import React, { useEffect, useRef } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst { kakao } = window;\r\n\r\nconst Maps = ({ lat, lon, id }) => {\r\n    const mapContainerRef = useRef(null);  // useRef를 사용하여 DOM 요소를 참조\r\n\r\n    var add_res = axios({\r\n        method: \"GET\",\r\n        url: `https://dapi.kakao.com/v2/local/geo/coord2address.json?x=${lat}&y=${lon}&input_coord=WGS84`,\r\n        headers: {\r\n            Authorization: `KakaoAK 59be56c1b793f6c69842484efa84e201`,\r\n        },\r\n    });\r\n    var address = encodeURIComponent(add_res.address_name);\r\n\r\n    const loc_res = axios({\r\n        method: \"GET\",\r\n        url: `https://dapi.kakao.com/v2/local/search/address.json?analyze_type=similar&query=${address}`,\r\n        headers: {\r\n            Authorization: `KakaoAK 59be56c1b793f6c69842484efa84e201`,\r\n        },\r\n    });\r\n\r\n    useEffect(() => {\r\n        \r\n    }, [lat, lon]);  // lat과 lon이 변경될 때마다 effect 실행\r\n\r\n    return <div id={id} ref={mapContainerRef} style={{ width: '100%', height: '100%' }}></div>;  // ref를 div에 설정\r\n};\r\n\r\nexport default Maps;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAM;EAAEC;AAAM,CAAC,GAAGC,MAAM;AAExB,MAAMC,IAAI,GAAGA,CAAC;EAAEC,GAAG;EAAEC,GAAG;EAAEC;AAAG,CAAC,KAAK;EAAAC,EAAA;EAC/B,MAAMC,eAAe,GAAGX,MAAM,CAAC,IAAI,CAAC,CAAC,CAAE;;EAEvC,IAAIY,OAAO,GAAGX,KAAK,CAAC;IAChBY,MAAM,EAAE,KAAK;IACbC,GAAG,EAAE,4DAA4DP,GAAG,MAAMC,GAAG,oBAAoB;IACjGO,OAAO,EAAE;MACLC,aAAa,EAAE;IACnB;EACJ,CAAC,CAAC;EACF,IAAIC,OAAO,GAAGC,kBAAkB,CAACN,OAAO,CAACO,YAAY,CAAC;EAEtD,MAAMC,OAAO,GAAGnB,KAAK,CAAC;IAClBY,MAAM,EAAE,KAAK;IACbC,GAAG,EAAE,kFAAkFG,OAAO,EAAE;IAChGF,OAAO,EAAE;MACLC,aAAa,EAAE;IACnB;EACJ,CAAC,CAAC;EAEFjB,SAAS,CAAC,MAAM,CAEhB,CAAC,EAAE,CAACQ,GAAG,EAAEC,GAAG,CAAC,CAAC,CAAC,CAAE;;EAEjB,oBAAOL,OAAA;IAAKM,EAAE,EAAEA,EAAG;IAACY,GAAG,EAAEV,eAAgB;IAACW,KAAK,EAAE;MAAEC,KAAK,EAAE,MAAM;MAAEC,MAAM,EAAE;IAAO;EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC,CAAC,CAAE;AACjG,CAAC;AAAClB,EAAA,CAzBIJ,IAAI;AAAAuB,EAAA,GAAJvB,IAAI;AA2BV,eAAeA,IAAI;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}