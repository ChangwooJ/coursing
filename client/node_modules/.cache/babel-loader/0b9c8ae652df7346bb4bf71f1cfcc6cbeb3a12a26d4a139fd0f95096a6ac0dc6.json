{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\woori\\\\Desktop\\\\Memo-Jung\\\\coursing\\\\client\\\\src\\\\component\\\\addPopUp.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport PlanInfo from \"./plan_info\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AddPopUp = ({\n  content,\n  onClose\n}) => {\n  _s();\n  const [positions, setPositions] = useState(null);\n  const [schedule, setSchdule] = useState(Array(24).fill({\n    filled: false,\n    memo: null\n  })); //24시간 스케쥴\n\n  //전달받은 일정에 맞춰 시간대별 일정 등록\n  useEffect(() => {\n    if (positions) {\n      const newSchdule = Array(24).fill({\n        filled: false,\n        memo: null,\n        count: null\n      });\n      positions.forEach(pos => {\n        const {\n          start_time,\n          end_time,\n          memo\n        } = pos;\n        for (let i = start_time; i < end_time; i++) {\n          if (i === Math.floor((end_time + start_time) / 2)) {\n            newSchdule[i] = {\n              filled: true,\n              memo: memo,\n              count: end_time - start_time\n            };\n          } else newSchdule[i] = {\n            filled: true,\n            memo: null,\n            count: null\n          };\n        }\n      });\n      setSchdule(newSchdule);\n    }\n  }, [positions]);\n\n  //console.log(schedule);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(PlanInfo, {\n      setPositions: setPositions,\n      contentId: content.content_id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"addPlan_PopUp\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uC77C\\uC815 \\uCD94\\uAC00\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"schedule_table\",\n        children: [schedule.map((sch, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"time_box\",\n          style: {\n            backgroundColor: sch.filled ? \"#FFD700\" : \"transparent\"\n          }\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 25\n        }, this)), schedule.map((sch, index) => /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [sch.memo === null && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"null_box\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 33\n          }, this), sch.memo && sch.memo !== \"\" && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"memo_box\",\n            style: {\n              width: ``\n            },\n            children: sch.memo\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 62\n          }, this)]\n        }, void 0, true))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onClose,\n      children: \"X\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(AddPopUp, \"IdcbynHVi4YmKv8jQpw9SN+S5v0=\");\n_c = AddPopUp;\nexport default AddPopUp;\nvar _c;\n$RefreshReg$(_c, \"AddPopUp\");","map":{"version":3,"names":["React","useEffect","useState","PlanInfo","jsxDEV","_jsxDEV","Fragment","_Fragment","AddPopUp","content","onClose","_s","positions","setPositions","schedule","setSchdule","Array","fill","filled","memo","newSchdule","count","forEach","pos","start_time","end_time","i","Math","floor","children","contentId","content_id","fileName","_jsxFileName","lineNumber","columnNumber","className","map","sch","index","style","backgroundColor","width","onClick","_c","$RefreshReg$"],"sources":["C:/Users/woori/Desktop/Memo-Jung/coursing/client/src/component/addPopUp.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport PlanInfo from \"./plan_info\";\r\n\r\nconst AddPopUp = ({ content, onClose }) => {\r\n    const [positions, setPositions] = useState(null);\r\n    const [schedule, setSchdule] = useState(Array(24).fill({ filled: false, memo: null })); //24시간 스케쥴\r\n\r\n    //전달받은 일정에 맞춰 시간대별 일정 등록\r\n    useEffect(() => {\r\n        if (positions) {\r\n            const newSchdule = Array(24).fill({ filled: false, memo: null, count: null});\r\n\r\n            positions.forEach(pos => {\r\n                const { start_time, end_time, memo } = pos;\r\n                for (let i = start_time; i < end_time; i++) {\r\n                    if (i === Math.floor((end_time + start_time)/2)) {\r\n                        newSchdule[i] = { filled: true, memo: memo, count: (end_time - start_time) }\r\n                    } else newSchdule[i] = { filled: true, memo: null, count: null };\r\n                }\r\n            });\r\n\r\n            setSchdule(newSchdule);\r\n        }\r\n    }, [positions]);\r\n\r\n    //console.log(schedule);\r\n    return (\r\n        <>\r\n            <PlanInfo setPositions={setPositions} contentId={content.content_id} />\r\n            <div className=\"addPlan_PopUp\">\r\n                <h2>일정 추가</h2>\r\n                <div className=\"schedule_table\">\r\n                    {schedule.map((sch, index) => (\r\n                        <div\r\n                            key={index}\r\n                            className=\"time_box\"\r\n                            style={{\r\n                                backgroundColor: sch.filled ? \"#FFD700\" : \"transparent\",\r\n                            }}\r\n                        ></div>\r\n                    ))}\r\n                    {schedule.map((sch, index) => (\r\n                        <>\r\n                            {sch.memo === null && (\r\n                                <div className=\"null_box\"></div>\r\n                            )}\r\n                            {sch.memo && sch.memo !== \"\" && (<div\r\n                                key={index}\r\n                                className=\"memo_box\"\r\n                                style={{width: ``}}\r\n                            >\r\n                                {sch.memo}\r\n                            </div>\r\n                            )}\r\n                        </>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n            <button onClick={onClose}>X</button>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AddPopUp;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}