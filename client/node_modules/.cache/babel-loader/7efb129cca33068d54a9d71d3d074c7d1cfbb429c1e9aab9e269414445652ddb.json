{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\woori\\\\Desktop\\\\Memo-Jung\\\\coursing\\\\client\\\\src\\\\component\\\\list_map.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport List from \"./list\";\nimport \"../css/list_map.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  kakao\n} = window;\nconst ListMap = ({\n  positions\n}) => {\n  _s();\n  const mapContainerRef = useRef(null);\n  const [map, setMap] = useState(null);\n  useEffect(() => {\n    if (positions.length > 0) {\n      initializeMap(positions);\n    }\n  }, [positions]);\n  const initializeMap = positions => {\n    if (mapContainerRef.current && positions.length > 0) {\n      const container = mapContainerRef.current;\n      const options = {\n        center: positions[0].latlng,\n        level: 5\n      };\n      const newMap = new kakao.maps.Map(container, options);\n      positions.forEach(position => {\n        const marker = new kakao.maps.Marker({\n          position: position.latlng,\n          clickable: true\n        });\n        marker.setMap(newMap);\n      });\n      setMap(newMap);\n    }\n  };\n  const viewPlan = index => {\n    console.log(index);\n    map.panTo(positions[index].latlng);\n    //\n  };\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map\",\n      ref: mapContainerRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list_wrap\",\n      children: [positions.length > 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: positions[0].title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 43\n      }, this), positions.map((position, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => viewPlan(index),\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: position.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: position.memo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 25\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n_s(ListMap, \"Hh8QRF6C4E4qZ4U1iagzXyTA9D0=\");\n_c = ListMap;\nexport default ListMap;\nvar _c;\n$RefreshReg$(_c, \"ListMap\");","map":{"version":3,"names":["React","useEffect","useRef","useState","List","jsxDEV","_jsxDEV","kakao","window","ListMap","positions","_s","mapContainerRef","map","setMap","length","initializeMap","current","container","options","center","latlng","level","newMap","maps","Map","forEach","position","marker","Marker","clickable","viewPlan","index","console","log","panTo","Fragment","children","className","ref","fileName","_jsxFileName","lineNumber","columnNumber","title","onClick","name","memo","_c","$RefreshReg$"],"sources":["C:/Users/woori/Desktop/Memo-Jung/coursing/client/src/component/list_map.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport List from \"./list\";\r\nimport \"../css/list_map.css\";\r\n\r\nconst { kakao } = window;\r\n\r\nconst ListMap = ({ positions }) => {\r\n    const mapContainerRef = useRef(null);\r\n    const [map, setMap] = useState(null);\r\n\r\n    useEffect(() => {\r\n        if (positions.length > 0) {\r\n            initializeMap(positions);\r\n        }\r\n    }, [positions]);\r\n\r\n    const initializeMap = (positions) => {\r\n        if (mapContainerRef.current && positions.length > 0) {\r\n            const container = mapContainerRef.current;\r\n            const options = {\r\n                center: positions[0].latlng,\r\n                level: 5\r\n            };\r\n            const newMap = new kakao.maps.Map(container, options);\r\n\r\n            positions.forEach((position) => {\r\n                const marker = new kakao.maps.Marker({\r\n                    position: position.latlng,\r\n                    clickable: true\r\n                });\r\n                marker.setMap(newMap);\r\n            });\r\n\r\n            setMap(newMap);\r\n        }\r\n    };\r\n\r\n    const viewPlan = ( index ) => {\r\n        console.log(index);\r\n        map.panTo(positions[index].latlng);\r\n        //\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"map\" ref={mapContainerRef}></div>\r\n            <div className=\"list_wrap\">\r\n                {positions.length > 0 && (<p>{positions[0].title}</p>)}\r\n                {positions.map((position, index) => (\r\n                    <button key={index} onClick={() => viewPlan(index)}>\r\n                        <p>{position.name}</p>\r\n                        <p>{position.memo}</p>\r\n                    </button>\r\n                ))}\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default ListMap;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}