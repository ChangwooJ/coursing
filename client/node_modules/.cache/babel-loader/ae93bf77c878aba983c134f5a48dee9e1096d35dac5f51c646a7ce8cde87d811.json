{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\woori\\\\Desktop\\\\Memo-Jung\\\\coursing\\\\client\\\\src\\\\component\\\\postList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContents, fetchPosts } from \"../redux/actions/postActions\";\nimport Maps from \"../component/maps\";\nimport '../css/Main.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostList = () => {\n  _s();\n  const dispatch = useDispatch();\n  const posts = useSelector(state => state.posts.posts);\n  const contents = useSelector(state => state.contents.contents);\n  const [curIdx, setCurIdx] = useState(0); //현재 슬라이드의 인덱스\n\n  useEffect(() => {\n    dispatch(fetchPosts());\n    dispatch(fetchContents());\n  }, [dispatch]);\n  const handleNext = filtercontent => {\n    setCurIdx(prevIdx => (prevIdx + 1) % filtercontent.length);\n  };\n  const handlePrev = () => {\n    setCurIdx(prevIdx => (prevIdx - 1 + filtercontent.length) % filtercontent.length);\n  };\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: posts.map(post => {\n      //게시글의 정보를 가져와 차례로 로드함\n      const filtercontent = contents.filter(content => content.post_id === post.post_id).reverse();\n      /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: post.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: post.user_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handlePrev,\n          className: \"swipe_bt\",\n          children: \"<\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this), filtercontent.slice(curIdx, curIdx + 1).map(content => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: content.img_src,\n            style: {\n              width: '20%',\n              height: '40vh'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 33\n          }, this), content.img_src, console.log(content.img_src), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              width: '30%',\n              height: '400px'\n            },\n            children: /*#__PURE__*/_jsxDEV(Maps, {\n              lat: content.lat,\n              lon: content.lon\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: content.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 33\n          }, this)]\n        }, content.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 29\n        }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleNext,\n          className: \"swipe_bt\",\n          children: \">\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)]\n      }, post.post_id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n_s(PostList, \"T8hBR+1h+OWaOJaeIvoPZAYQAEg=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n_c = PostList;\nexport default PostList;\nvar _c;\n$RefreshReg$(_c, \"PostList\");","map":{"version":3,"names":["React","useEffect","useState","useDispatch","useSelector","fetchContents","fetchPosts","Maps","jsxDEV","_jsxDEV","PostList","_s","dispatch","posts","state","contents","curIdx","setCurIdx","handleNext","filtercontent","prevIdx","length","handlePrev","Fragment","children","map","post","filter","content","post_id","reverse","title","fileName","_jsxFileName","lineNumber","columnNumber","user_name","onClick","className","slice","src","img_src","style","width","height","console","log","lat","lon","id","_c","$RefreshReg$"],"sources":["C:/Users/woori/Desktop/Memo-Jung/coursing/client/src/component/postList.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { fetchContents, fetchPosts } from \"../redux/actions/postActions\";\r\nimport Maps from \"../component/maps\";\r\nimport '../css/Main.css';\r\n\r\nconst PostList = () => {\r\n    const dispatch = useDispatch();\r\n    const posts = useSelector(state => state.posts.posts);\r\n    const contents = useSelector(state => state.contents.contents);\r\n    const [curIdx, setCurIdx] = useState(0);    //현재 슬라이드의 인덱스\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchPosts());\r\n        dispatch(fetchContents());\r\n    }, [dispatch]);\r\n\r\n    const handleNext = (filtercontent) => {\r\n        setCurIdx((prevIdx) => (prevIdx + 1) % filtercontent.length);\r\n    }\r\n\r\n    const handlePrev = () => {\r\n        setCurIdx((prevIdx) => (prevIdx - 1 + filtercontent.length) % filtercontent.length);\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {posts.map((post) => {  //게시글의 정보를 가져와 차례로 로드함\r\n                const filtercontent = contents.filter(content => content.post_id === post.post_id).reverse();\r\n                <div key={post.post_id}>\r\n                    <h3>{post.title}</h3>\r\n                    <p>{post.user_name}</p>\r\n                    <button onClick={handlePrev} className=\"swipe_bt\">{\"<\"}</button>\r\n                    {filtercontent\r\n                        .slice(curIdx, curIdx + 1)\r\n                        .map(content => (\r\n                            <div key={content.id}>\r\n                                <img\r\n                                    src={content.img_src}\r\n                                    style={{ width: '20%', height: '40vh' }}\r\n                                />\r\n                                {content.img_src}\r\n                                {console.log(content.img_src)}\r\n                                <div style={{ width: '30%', height: '400px' }}>\r\n                                    <Maps lat={content.lat} lon={content.lon} />\r\n                                </div>\r\n                                <p>{content.content}</p>\r\n                            </div>\r\n                        ))\r\n                    }\r\n                    <button onClick={handleNext} className=\"swipe_bt\">{\">\"}</button>\r\n\r\n                </div>\r\n            })}\r\n        </React.Fragment>\r\n    )\r\n\r\n}\r\n\r\nexport default PostList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}