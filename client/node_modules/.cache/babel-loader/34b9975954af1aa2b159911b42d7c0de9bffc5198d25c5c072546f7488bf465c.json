{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\woori\\\\Desktop\\\\Memo-Jung\\\\coursing\\\\client\\\\src\\\\component\\\\list_map.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport DetailLoc from \"./detailLoc\";\nimport Search from \"./search\";\nimport \"../css/list_map.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  kakao\n} = window;\nconst ListMap = ({\n  positions\n}) => {\n  _s();\n  const mapContainerRef = useRef(null);\n  const [map, setMap] = useState(null);\n  const [selPosition, setSelPosition] = useState(null);\n  const [button, setButton] = useState(\">\");\n  const [temp, setTemp] = useState(null);\n  const [btPosition, setBtPosition] = useState('left');\n  const [searchPosition, setSearchPosition] = useState(null);\n  const [loc, setLoc] = useState([]);\n  useEffect(() => {\n    if (positions.length > 0) {\n      initializeMap(positions);\n    }\n  }, [positions]);\n  useEffect(() => {\n    if (selPosition === null) {\n      setButton(\">\");\n      setBtPosition('left');\n    } else {\n      setButton(\"<\");\n      setBtPosition('right');\n    }\n  });\n  useEffect(() => {\n    if (searchPosition !== null) {\n      moveSearchPosition();\n    }\n  }, [searchPosition]);\n  const initializeMap = positions => {\n    if (mapContainerRef.current && positions.length > 0) {\n      const container = mapContainerRef.current;\n      const options = {\n        center: positions[0].latlng,\n        level: 4\n      };\n      const newMap = new kakao.maps.Map(container, options);\n      positions.forEach(position => {\n        const marker = new kakao.maps.Marker({\n          position: position.latlng,\n          clickable: true\n        });\n        marker.setMap(newMap);\n      });\n      setMap(newMap);\n    }\n  };\n  const viewPlan = index => {\n    map.panTo(positions[index].latlng);\n    //panTo에 option을 줄 수 있음. 화면 이동시 해당 요소로의 확대(level의 변경)가 필요해보임\n    setSelPosition(positions[index]);\n  };\n  const transition = () => {\n    if (selPosition !== null) {\n      setTemp(selPosition);\n      setSelPosition(null);\n    } else {\n      setSelPosition(temp);\n    }\n  };\n  const moveSearchPosition = () => {\n    map.panTo(searchPosition);\n\n    // 마커를 생성합니다\n    var marker = new kakao.maps.Marker({\n      position: searchPosition,\n      clickable: true\n    });\n\n    // 마커가 지도 위에 표시되도록 설정합니다\n    marker.setMap(map);\n    var iwContent = `<div>${loc.place_name}</div>`,\n      // 인포윈도우에 표출될 내용으로 HTML 문자열이나 document element가 가능합니다\n      iwRemoveable = true; // removeable 속성을 ture 로 설정하면 인포윈도우를 닫을 수 있는 x버튼이 표시됩니다\n\n    // 인포윈도우를 생성합니다\n    var infowindow = new kakao.maps.InfoWindow({\n      content: iwContent,\n      removable: iwRemoveable\n    });\n\n    // 마커 위에 인포윈도우를 표시합니다\n    infowindow.open(map, marker);\n  };\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map\",\n      ref: mapContainerRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list_wrap\",\n      children: [/*#__PURE__*/_jsxDEV(Search, {\n        setLoc: setLoc,\n        setSearchPosition: setSearchPosition\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this), positions.length > 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: positions[0].title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 43\n      }, this), positions.map((position, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => viewPlan(index),\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: position.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: position.memo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 25\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 21\n      }, this)\n      //building_name이 없는 경우의 문제\n      )]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this), selPosition && /*#__PURE__*/_jsxDEV(DetailLoc, {\n      position: selPosition\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 29\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bt_Wrap\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"close_bt\",\n        onClick: () => transition(),\n        style: {\n          [btPosition]: selPosition === null ? '20%' : '40%'\n        },\n        children: button\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 9\n  }, this);\n};\n_s(ListMap, \"UuK6/NppqIZ4/l5InoJLT4C/O24=\");\n_c = ListMap;\nexport default ListMap;\nvar _c;\n$RefreshReg$(_c, \"ListMap\");","map":{"version":3,"names":["React","useEffect","useRef","useState","DetailLoc","Search","jsxDEV","_jsxDEV","kakao","window","ListMap","positions","_s","mapContainerRef","map","setMap","selPosition","setSelPosition","button","setButton","temp","setTemp","btPosition","setBtPosition","searchPosition","setSearchPosition","loc","setLoc","length","initializeMap","moveSearchPosition","current","container","options","center","latlng","level","newMap","maps","Map","forEach","position","marker","Marker","clickable","viewPlan","index","panTo","transition","iwContent","place_name","iwRemoveable","infowindow","InfoWindow","content","removable","open","Fragment","children","className","ref","fileName","_jsxFileName","lineNumber","columnNumber","title","onClick","name","memo","style","_c","$RefreshReg$"],"sources":["C:/Users/woori/Desktop/Memo-Jung/coursing/client/src/component/list_map.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport DetailLoc from \"./detailLoc\";\r\nimport Search from \"./search\";\r\nimport \"../css/list_map.css\";\r\n\r\nconst { kakao } = window;\r\n\r\nconst ListMap = ({ positions }) => {\r\n    const mapContainerRef = useRef(null);\r\n    const [map, setMap] = useState(null);\r\n    const [selPosition, setSelPosition] = useState(null);\r\n    const [button, setButton] = useState(\">\");\r\n    const [temp, setTemp] = useState(null);\r\n    const [btPosition, setBtPosition] = useState('left');\r\n    const [searchPosition, setSearchPosition] = useState(null);\r\n    const [loc, setLoc] = useState([]);\r\n\r\n    useEffect(() => {\r\n        if (positions.length > 0) {\r\n            initializeMap(positions);\r\n        }\r\n    }, [positions]);\r\n\r\n    useEffect(() => {\r\n        if (selPosition === null) {\r\n            setButton(\">\");\r\n            setBtPosition('left');\r\n        } else {\r\n            setButton(\"<\");\r\n            setBtPosition('right');\r\n        }\r\n    })\r\n\r\n    useEffect(() => {\r\n        if (searchPosition !== null) {\r\n            moveSearchPosition();\r\n        }\r\n    }, [searchPosition]);\r\n\r\n    const initializeMap = (positions) => {\r\n        if (mapContainerRef.current && positions.length > 0) {\r\n            const container = mapContainerRef.current;\r\n            const options = {\r\n                center: positions[0].latlng,\r\n                level: 4\r\n            };\r\n            const newMap = new kakao.maps.Map(container, options);\r\n\r\n            positions.forEach((position) => {\r\n                const marker = new kakao.maps.Marker({\r\n                    position: position.latlng,\r\n                    clickable: true\r\n                });\r\n                marker.setMap(newMap);\r\n            });\r\n\r\n            setMap(newMap);\r\n        }\r\n    };\r\n\r\n    const viewPlan = (index) => {\r\n        map.panTo(positions[index].latlng);\r\n        //panTo에 option을 줄 수 있음. 화면 이동시 해당 요소로의 확대(level의 변경)가 필요해보임\r\n        setSelPosition(positions[index]);\r\n    }\r\n\r\n    const transition = () => {\r\n        if (selPosition !== null) {\r\n            setTemp(selPosition);\r\n            setSelPosition(null);\r\n        } else {\r\n            setSelPosition(temp);\r\n        }\r\n    }\r\n\r\n    const moveSearchPosition = () => {\r\n        map.panTo(searchPosition);\r\n\r\n            // 마커를 생성합니다\r\n            var marker = new kakao.maps.Marker({\r\n                position: searchPosition,\r\n                clickable: true\r\n            });\r\n\r\n            // 마커가 지도 위에 표시되도록 설정합니다\r\n            marker.setMap(map);\r\n\r\n        var iwContent = `<div>${loc.place_name}</div>`, // 인포윈도우에 표출될 내용으로 HTML 문자열이나 document element가 가능합니다\r\n            iwRemoveable = true; // removeable 속성을 ture 로 설정하면 인포윈도우를 닫을 수 있는 x버튼이 표시됩니다\r\n\r\n        // 인포윈도우를 생성합니다\r\n        var infowindow = new kakao.maps.InfoWindow({\r\n            content: iwContent,\r\n            removable: iwRemoveable\r\n        });\r\n\r\n        // 마커 위에 인포윈도우를 표시합니다\r\n        infowindow.open(map, marker);\r\n\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"map\" ref={mapContainerRef}></div>\r\n            <div className=\"list_wrap\">\r\n                <Search setLoc={setLoc} setSearchPosition={setSearchPosition} />\r\n                {positions.length > 0 && (<p>{positions[0].title}</p>)}\r\n                {positions.map((position, index) => (\r\n                    <button key={index} onClick={() => viewPlan(index)}>\r\n                        <p>{position.name}</p>\r\n                        <p>{position.memo}</p>\r\n                    </button>\r\n                    //building_name이 없는 경우의 문제\r\n                ))}\r\n            </div>\r\n            {selPosition && <DetailLoc position={selPosition} />}\r\n            <div className=\"bt_Wrap\">\r\n                <button\r\n                    className=\"close_bt\"\r\n                    onClick={() => transition()}\r\n                    style={{\r\n                        [btPosition]: selPosition === null ? '20%' : '40%'\r\n                    }}>\r\n                    {button}\r\n                </button>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default ListMap;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}