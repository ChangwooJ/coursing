{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\woori\\\\Desktop\\\\Memo-Jung\\\\coursing\\\\client\\\\src\\\\pages\\\\Main.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport { Swiper, SwiperSlide } from 'swiper/react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContents, fetchPosts } from \"../redux/actions/postActions\";\nimport Maps from \"../component/maps\";\nimport 'swiper/css';\nimport '../css/Main.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Main = () => {\n  _s();\n  const dispatch = useDispatch();\n  const posts = useSelector(state => state.posts.posts);\n  const contents = useSelector(state => state.contents.contents);\n  useEffect(() => {\n    dispatch(fetchPosts());\n    dispatch(fetchContents());\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post_list\",\n      children: /*#__PURE__*/_jsxDEV(Swiper, {\n        spaceBetween: 20,\n        slidesPerView: 2,\n        navigation: {\n          prevEl: \".swiper-prev\",\n          nextEl: \".swiper-next\"\n        },\n        children: posts.map(post => {\n          var _contents$find;\n          return /*#__PURE__*/_jsxDEV(SwiperSlide, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: post.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 33,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: post.user_name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 34,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"swiper-prev swiper_bt\",\n                children: \"<\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 35,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  width: '20%',\n                  height: '40vh'\n                },\n                children: contents.filter(content => content.post_id === post.post_id).map(content => /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: content.img_src,\n                  style: {\n                    width: '100%',\n                    height: '100%'\n                  },\n                  alt: content.title\n                }, content.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 41,\n                  columnNumber: 45\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 37,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  width: '30%',\n                  height: '400px'\n                },\n                children: contents.filter(content => content.post_id === post.post_id).map((content, idx) => /*#__PURE__*/_jsxDEV(Maps, {\n                  lat: content.lat,\n                  lon: content.lon\n                }, `map-${idx}`, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 54,\n                  columnNumber: 45\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: (_contents$find = contents.find(content => content.post_id === post.post_id)) === null || _contents$find === void 0 ? void 0 : _contents$find.content\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"swiper-next swiper_bt\",\n                children: \">\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 29\n            }, this)\n          }, post.post_id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 25\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n};\n_s(Main, \"9FnH/41YrCYKt0PA0MZpkwx+Sk0=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n_c = Main;\nexport default Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["React","useEffect","Swiper","SwiperSlide","useDispatch","useSelector","fetchContents","fetchPosts","Maps","jsxDEV","_jsxDEV","Main","_s","dispatch","posts","state","contents","Fragment","children","className","spaceBetween","slidesPerView","navigation","prevEl","nextEl","map","post","_contents$find","title","fileName","_jsxFileName","lineNumber","columnNumber","user_name","style","width","height","filter","content","post_id","src","img_src","alt","id","idx","lat","lon","find","_c","$RefreshReg$"],"sources":["C:/Users/woori/Desktop/Memo-Jung/coursing/client/src/pages/Main.js"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { Swiper, SwiperSlide } from 'swiper/react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { fetchContents, fetchPosts } from \"../redux/actions/postActions\";\r\nimport Maps from \"../component/maps\";\r\nimport 'swiper/css';\r\nimport '../css/Main.css';\r\n\r\nconst Main = () => {\r\n    const dispatch = useDispatch();\r\n    const posts = useSelector(state => state.posts.posts);\r\n    const contents = useSelector(state => state.contents.contents);\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchPosts());\r\n        dispatch(fetchContents());\r\n    }, [dispatch]);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"post_list\">\r\n                <Swiper\r\n                    spaceBetween={20}\r\n                    slidesPerView={2}\r\n                    navigation={{\r\n                        prevEl: \".swiper-prev\",\r\n                        nextEl: \".swiper-next\"\r\n                    }}\r\n                >\r\n                    {posts.map((post) => (\r\n                        <SwiperSlide key={post.post_id}>\r\n                            <div>\r\n                                <h3>{post.title}</h3>\r\n                                <p>{post.user_name}</p>\r\n                                <button className=\"swiper-prev swiper_bt\">{\"<\"}</button>\r\n                                \r\n                                <div style={{ width: '20%', height: '40vh' }}>\r\n                                    {contents\r\n                                        .filter(content => content.post_id === post.post_id)\r\n                                        .map(content => (\r\n                                            <img\r\n                                                key={content.id}\r\n                                                src={content.img_src}\r\n                                                style={{ width: '100%', height: '100%' }}\r\n                                                alt={content.title}\r\n                                            />\r\n                                        ))}\r\n                                </div>\r\n                                \r\n                                <div style={{ width: '30%', height: '400px' }}>\r\n                                    {contents\r\n                                        .filter(content => content.post_id === post.post_id)\r\n                                        .map((content, idx) => (\r\n                                            <Maps key={`map-${idx}`} lat={content.lat} lon={content.lon} />\r\n                                        ))}\r\n                                </div>\r\n                                \r\n                                <p>{contents.find(content => content.post_id === post.post_id)?.content}</p>\r\n                                \r\n                                <button className=\"swiper-next swiper_bt\">{\">\"}</button>\r\n                            </div>\r\n                        </SwiperSlide>\r\n                    ))}\r\n                </Swiper>\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Main;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}