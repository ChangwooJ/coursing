{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\woori\\\\Desktop\\\\Memo-Jung\\\\coursing\\\\client\\\\src\\\\component\\\\addPopUp.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect, useMemo, useState } from \"react\";\nimport { AuthContext } from \"../context/AuthContext\";\nimport axios from \"axios\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchLists } from \"../redux/actions/listActions\";\nimport { fetchTitles } from \"../redux/actions/listActions\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AddPopUp = ({\n  content,\n  onClose\n}) => {\n  _s();\n  const {\n    isAuthenticated,\n    userInfo,\n    loading\n  } = useContext(AuthContext);\n  const dispatch = useDispatch();\n  const allLists = useSelector(state => state.lists.lists);\n  const titles = useSelector(state => state.titles.titles);\n  const [contentId, setContentId] = useState(1);\n  const positions = useMemo(() => {\n    //useEffect에 객체 전달로 인한 리랜더링 방지\n    if (isAuthenticated && userInfo) {\n      return allLists.filter(list => list.user_content_id === contentId);\n    }\n    return [];\n  }, [allLists, isAuthenticated, userInfo, contentId]);\n  const titleList = useMemo(() => {\n    //useEffect에 객체 전달로 인한 리랜더링 방지, user_content_title객체\n    if (isAuthenticated && userInfo) {\n      return titles.filter(title => title._user_id === userInfo[0].user_id);\n    }\n    return [];\n  }, [titles, isAuthenticated, userInfo]);\n  const [initTitle, setInitTitle] = useState(\"일정을 선택해주세요\");\n  const [schedule, setSchdule] = useState(Array(24).fill({\n    filled: false,\n    memo: null,\n    count: null,\n    color: \"transparent\"\n  })); //24시간 스케쥴\n  const [addPlanData, setAddPlanData] = useState({\n    address: null,\n    memo: null,\n    content_id: null,\n    category: null,\n    start_time: null,\n    end_time: null\n  });\n  const [time, setTime] = useState({\n    start: null,\n    end: null\n  });\n  console.log(\"pos: \", titleList);\n  useEffect(() => {\n    dispatch(fetchLists());\n    dispatch(fetchTitles());\n  }, [dispatch]);\n  useEffect(() => {\n    if (titleList.length > 0) {\n      setInitTitle(titleList[0].user_content_title);\n    }\n  }, [titleList]);\n\n  //전달받은 일정에 맞춰 시간대별 일정 등록\n  useEffect(() => {\n    if (positions) {\n      const newSchdule = Array(24).fill({\n        filled: false,\n        memo: null,\n        count: null,\n        color: \"transparent\"\n      });\n      positions.forEach(pos => {\n        const {\n          start_time,\n          end_time,\n          memo\n        } = pos;\n        const getColor = getRandomColor();\n        for (let i = start_time; i < end_time; i++) {\n          if (i === Math.floor((end_time + start_time) / 2)) {\n            newSchdule[i] = {\n              filled: true,\n              memo: memo,\n              count: end_time - start_time,\n              color: getColor\n            };\n          } else newSchdule[i] = {\n            filled: true,\n            memo: \"\",\n            count: null,\n            color: getColor\n          };\n        }\n      });\n      setSchdule(newSchdule);\n    }\n  }, [positions]);\n\n  //랜덤 색상 함수\n  const getRandomColor = () => {\n    const r = Math.floor(Math.random() * 256);\n    const g = Math.floor(Math.random() * 256);\n    const b = Math.floor(Math.random() * 256);\n    return `rgb(${r}, ${g}, ${b})`;\n  };\n\n  //시간대 클릭\n  const catchTime = select => {\n    setTime(prevData => {\n      if (prevData.start === null) {\n        selectColor(null, select, null); //시작 지점 표시\n        return {\n          ...prevData,\n          start: select,\n          end: null\n        };\n      } else if (prevData.start !== null && prevData.end === null) {\n        let conflict = false;\n        positions.forEach(pos => {\n          const {\n            start_time,\n            end_time\n          } = pos;\n          if (prevData.start < end_time && select > start_time || select <= end_time && select >= start_time) {\n            conflict = true;\n          }\n        });\n        if (!conflict) {\n          selectColor(prevData.start, select, null); //선택 시간대 표시\n          return {\n            ...prevData,\n            end: select\n          };\n        } else {\n          alert(\"다른 일정과 중복되는 시간대가 존재합니다.\");\n          return {\n            start: null,\n            end: null\n          };\n        }\n      } else {\n        selectColor(prevData.start, prevData.end, select); //시간대 표시 초기화\n        return {\n          start: select,\n          end: null\n        };\n      }\n    });\n  };\n\n  //시간대 클릭 반영\n  useEffect(() => {\n    setAddPlanData(prevData => ({\n      ...prevData,\n      start_time: time.start,\n      end_time: time.end\n    }));\n    console.log(time);\n  }, [time]);\n  const change = e => {\n    setAddPlanData({\n      ...addPlanData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleAddPlan = () => {\n    setAddPlanData(prevData => ({\n      ...prevData,\n      address: content.address,\n      category: content.cate_id,\n      content_id: contentId\n    }));\n    axios.post('http://localhost:8000/api/add_plan', addPlanData, {\n      withCredentials: true\n    }).then(response => {\n      if (response.status === 200) {\n        alert('추가되었습니다.');\n        onClose();\n      }\n    }).catch(error => {\n      alert('에러가 발생했습니다.');\n      console.error(error);\n    });\n  };\n\n  //시간대 선택 색상\n  const selectColor = (start, end, init) => {\n    const newSchedule = [...schedule];\n    const color = \"skyblue\";\n    if (start === null) {\n      newSchedule[end] = {\n        filled: true,\n        memo: null,\n        count: null,\n        color: color\n      };\n    } else if (end !== null) {\n      for (let i = start; i <= end; i++) {\n        newSchedule[i] = {\n          filled: true,\n          memo: null,\n          count: null,\n          color: color\n        };\n      }\n    }\n    if (init !== null) {\n      for (let i = start; i <= end; i++) {\n        newSchedule[i] = {\n          filled: false,\n          memo: null,\n          count: null,\n          color: \"transparent\"\n        };\n      }\n      newSchedule[init] = {\n        filled: true,\n        memo: null,\n        count: 1,\n        color: color\n      };\n    }\n    setSchdule(newSchedule);\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 16\n    }, this);\n  }\n  if (!isAuthenticated) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"addPlan_PopUp\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"notLoggged\",\n        children: \"\\uB85C\\uADF8\\uC778\\uC744 \\uBA3C\\uC800 \\uD574\\uC8FC\\uC138\\uC694.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 13\n    }, this);\n  }\n\n  //console.log(content.address);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"addPlan_PopUp\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uC77C\\uC815 \\uCD94\\uAC00\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"my_plan_drop\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"schedule_table\",\n        children: [schedule.map((sch, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"time_box\",\n          style: {\n            backgroundColor: sch.filled ? sch.color : \"transparent\"\n          },\n          onClick: () => !sch.filled && catchTime(index)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 25\n        }, this)), schedule.map((sch, index) => /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [sch.memo === null && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"null_box\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 33\n          }, this), sch.memo && sch.memo !== \"\" && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"memo_box\",\n            style: {\n              width: `${4.16 * sch.count}%`\n            },\n            children: sch.memo\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 62\n          }, this)]\n        }, void 0, true))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"add_content_wrap\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: content.img_src\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"add_content\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"\\uC7A5\\uC18C\\uBA85: \", content.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"\\uC8FC\\uC18C: \", content.address]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"\\uBA54\\uBAA8:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"memo\",\n              type: \"text\",\n              name: \"memo\",\n              placeholder: \"\\uC6D0\\uD558\\uB294 \\uBA54\\uBAA8\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694.\",\n              value: addPlanData.memo,\n              onChange: change\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"\\uC2DC\\uAC04:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"start_time\",\n              type: \"text\",\n              name: \"start_time\",\n              placeholder: \"00\",\n              value: addPlanData.start_time,\n              onChange: change\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 29\n            }, this), \"-\", /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"end_time\",\n              type: \"text\",\n              name: \"end_time\",\n              placeholder: \"00\",\n              value: addPlanData.end_time,\n              onChange: change\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"button_box\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleAddPlan(),\n              children: \"\\uC77C\\uC815 \\uCD94\\uAC00\\uD558\\uAE30\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 21\n        }, this), console.log(content)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onClose,\n      children: \"X\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(AddPopUp, \"HFM0CpKgKsEsISrAfUoUqOIvyvQ=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n_c = AddPopUp;\nexport default AddPopUp;\nvar _c;\n$RefreshReg$(_c, \"AddPopUp\");","map":{"version":3,"names":["React","useContext","useEffect","useMemo","useState","AuthContext","axios","useDispatch","useSelector","fetchLists","fetchTitles","jsxDEV","_jsxDEV","Fragment","_Fragment","AddPopUp","content","onClose","_s","isAuthenticated","userInfo","loading","dispatch","allLists","state","lists","titles","contentId","setContentId","positions","filter","list","user_content_id","titleList","title","_user_id","user_id","initTitle","setInitTitle","schedule","setSchdule","Array","fill","filled","memo","count","color","addPlanData","setAddPlanData","address","content_id","category","start_time","end_time","time","setTime","start","end","console","log","length","user_content_title","newSchdule","forEach","pos","getColor","getRandomColor","i","Math","floor","r","random","g","b","catchTime","select","prevData","selectColor","conflict","alert","change","e","target","name","value","handleAddPlan","cate_id","post","withCredentials","then","response","status","catch","error","init","newSchedule","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","sch","index","style","backgroundColor","onClick","width","src","img_src","type","placeholder","onChange","_c","$RefreshReg$"],"sources":["C:/Users/woori/Desktop/Memo-Jung/coursing/client/src/component/addPopUp.js"],"sourcesContent":["import React, { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport { AuthContext } from \"../context/AuthContext\";\r\nimport axios from \"axios\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { fetchLists } from \"../redux/actions/listActions\";\r\nimport { fetchTitles } from \"../redux/actions/listActions\";\r\n\r\nconst AddPopUp = ({ content, onClose }) => {\r\n    const { isAuthenticated, userInfo, loading } = useContext(AuthContext);\r\n    const dispatch = useDispatch();\r\n    const allLists = useSelector((state) => state.lists.lists);\r\n    const titles = useSelector((state) => state.titles.titles);\r\n    const [contentId, setContentId] = useState(1);\r\n    const positions = useMemo(() => {     //useEffect에 객체 전달로 인한 리랜더링 방지\r\n        if (isAuthenticated && userInfo) {\r\n            return allLists.filter(list => list.user_content_id === contentId);\r\n        }\r\n        return [];\r\n    }, [allLists, isAuthenticated, userInfo, contentId]);\r\n\r\n    const titleList = useMemo(() => {     //useEffect에 객체 전달로 인한 리랜더링 방지, user_content_title객체\r\n        if (isAuthenticated && userInfo) {\r\n            return titles.filter(title => title._user_id === userInfo[0].user_id);\r\n        }\r\n        return [];\r\n    }, [titles, isAuthenticated, userInfo]);\r\n    const [initTitle, setInitTitle] = useState(\"일정을 선택해주세요\");\r\n\r\n    const [schedule, setSchdule] = useState(Array(24).fill({ filled: false, memo: null, count: null, color: \"transparent\" })); //24시간 스케쥴\r\n    const [addPlanData, setAddPlanData] = useState({\r\n        address: null,\r\n        memo: null,\r\n        content_id: null,\r\n        category: null,\r\n        start_time: null,\r\n        end_time: null,\r\n    });\r\n    const [time, setTime] = useState({\r\n        start: null,\r\n        end: null,\r\n    });\r\n    console.log(\"pos: \", titleList);\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchLists());\r\n        dispatch(fetchTitles());\r\n    }, [dispatch]);\r\n\r\n    useEffect(() => {\r\n        if (titleList.length > 0) {\r\n            setInitTitle(titleList[0].user_content_title);\r\n        }\r\n    }, [titleList]);\r\n\r\n    //전달받은 일정에 맞춰 시간대별 일정 등록\r\n    useEffect(() => {\r\n        if (positions) {\r\n            const newSchdule = Array(24).fill({ filled: false, memo: null, count: null, color: \"transparent\" });\r\n\r\n            positions.forEach(pos => {\r\n                const { start_time, end_time, memo } = pos;\r\n                const getColor = getRandomColor();\r\n                for (let i = start_time; i < end_time; i++) {\r\n                    if (i === Math.floor((end_time + start_time) / 2)) {\r\n                        newSchdule[i] = { filled: true, memo: memo, count: (end_time - start_time), color: getColor }\r\n                    } else newSchdule[i] = { filled: true, memo: \"\", count: null, color: getColor };\r\n                }\r\n            });\r\n\r\n            setSchdule(newSchdule);\r\n        }\r\n    }, [positions]);\r\n\r\n    //랜덤 색상 함수\r\n    const getRandomColor = () => {\r\n        const r = Math.floor(Math.random() * 256);\r\n        const g = Math.floor(Math.random() * 256);\r\n        const b = Math.floor(Math.random() * 256);\r\n        return `rgb(${r}, ${g}, ${b})`;\r\n    };\r\n\r\n    //시간대 클릭\r\n    const catchTime = (select) => {\r\n        setTime(prevData => {\r\n            if (prevData.start === null) {\r\n                selectColor(null, select, null);  //시작 지점 표시\r\n                return {\r\n                    ...prevData,\r\n                    start: select,\r\n                    end: null\r\n                };\r\n            } else if (prevData.start !== null && prevData.end === null) {\r\n                let conflict = false;\r\n                positions.forEach(pos => {\r\n                    const { start_time, end_time } = pos;\r\n                    if ((prevData.start < end_time && select > start_time) || (select <= end_time && select >= start_time)) {\r\n                        conflict = true;\r\n                    }\r\n                });\r\n\r\n                if (!conflict) {\r\n                    selectColor(prevData.start, select, null);    //선택 시간대 표시\r\n                    return {\r\n                        ...prevData,\r\n                        end: select\r\n                    };\r\n                } else {\r\n                    alert(\"다른 일정과 중복되는 시간대가 존재합니다.\");\r\n                    return {\r\n                        start: null,\r\n                        end: null,\r\n                    };\r\n                }\r\n            } else {\r\n                selectColor(prevData.start, prevData.end, select);    //시간대 표시 초기화\r\n                return {\r\n                    start: select,\r\n                    end: null\r\n                };\r\n            }\r\n        });\r\n    }\r\n\r\n    //시간대 클릭 반영\r\n    useEffect(() => {\r\n        setAddPlanData(prevData => ({\r\n            ...prevData,\r\n            start_time: time.start,\r\n            end_time: time.end\r\n        }));\r\n        console.log(time);\r\n\r\n    }, [time]);\r\n\r\n    const change = (e) => {\r\n        setAddPlanData({ ...addPlanData, [e.target.name]: e.target.value });\r\n    }\r\n\r\n    const handleAddPlan = () => {\r\n        setAddPlanData(prevData => ({\r\n            ...prevData,\r\n            address: content.address,\r\n            category: content.cate_id,\r\n            content_id: contentId\r\n        }));\r\n        axios.post('http://localhost:8000/api/add_plan', addPlanData, {\r\n            withCredentials: true\r\n        })\r\n            .then((response) => {\r\n                if (response.status === 200) {\r\n                    alert('추가되었습니다.');\r\n                    onClose();\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                alert('에러가 발생했습니다.');\r\n                console.error(error);\r\n            });\r\n    }\r\n\r\n    //시간대 선택 색상\r\n    const selectColor = (start, end, init) => {\r\n        const newSchedule = [...schedule];\r\n        const color = \"skyblue\";\r\n\r\n        if (start === null) {\r\n            newSchedule[end] = { filled: true, memo: null, count: null, color: color };\r\n        } else if (end !== null) {\r\n            for (let i = start; i <= end; i++) {\r\n                newSchedule[i] = { filled: true, memo: null, count: null, color: color };\r\n            }\r\n        }\r\n\r\n        if (init !== null) {\r\n            for (let i = start; i <= end; i++) {\r\n                newSchedule[i] = { filled: false, memo: null, count: null, color: \"transparent\" };\r\n            }\r\n            newSchedule[init] = { filled: true, memo: null, count: 1, color: color };\r\n        }\r\n\r\n        setSchdule(newSchedule);\r\n    };\r\n\r\n    if (loading) {\r\n        return <div>Loading...</div>;\r\n    }\r\n\r\n    if (!isAuthenticated) {\r\n        return (\r\n            <div className=\"addPlan_PopUp\">\r\n                <div className=\"notLoggged\">로그인을 먼저 해주세요.</div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    //console.log(content.address);\r\n    return (\r\n        <>\r\n            <div className=\"addPlan_PopUp\">\r\n                <h2>일정 추가</h2>\r\n                <div className=\"my_plan_drop\">\r\n\r\n                </div>\r\n                <div className=\"schedule_table\">\r\n                    {schedule.map((sch, index) => (\r\n                        <div\r\n                            key={index}\r\n                            className=\"time_box\"\r\n                            style={{\r\n                                backgroundColor: sch.filled ? sch.color : \"transparent\",\r\n                            }}\r\n                            onClick={() => !sch.filled && catchTime(index)}\r\n                        ></div>\r\n                    ))}\r\n                    {schedule.map((sch, index) => (\r\n                        <>\r\n                            {sch.memo === null && (\r\n                                <div className=\"null_box\"></div>\r\n                            )}\r\n                            {sch.memo && sch.memo !== \"\" && (<div\r\n                                key={index}\r\n                                className=\"memo_box\"\r\n                                style={{ width: `${4.16 * sch.count}%` }}\r\n                            >\r\n                                {sch.memo}\r\n                            </div>\r\n                            )}\r\n                        </>\r\n                    ))}\r\n                </div>\r\n                <div className=\"add_content_wrap\">\r\n                    <img src={content.img_src} />\r\n                    <div className=\"add_content\">\r\n                        <p>장소명: {content.name}</p>\r\n                        <p>주소: {content.address}</p>\r\n                        <p>메모:\r\n                            <input\r\n                                className=\"memo\"\r\n                                type=\"text\" name=\"memo\"\r\n                                placeholder=\"원하는 메모를 입력하세요.\"\r\n                                value={addPlanData.memo}\r\n                                onChange={change}\r\n                            />\r\n                        </p>\r\n                        <p>시간:\r\n                            <input\r\n                                className=\"start_time\"\r\n                                type=\"text\" name=\"start_time\"\r\n                                placeholder=\"00\"\r\n                                value={addPlanData.start_time}\r\n                                onChange={change}\r\n                            />\r\n                            -\r\n                            <input\r\n                                className=\"end_time\"\r\n                                type=\"text\" name=\"end_time\"\r\n                                placeholder=\"00\"\r\n                                value={addPlanData.end_time}\r\n                                onChange={change}\r\n                            />\r\n                        </p>\r\n                        <div className=\"button_box\">\r\n                            <button onClick={() => handleAddPlan()}>일정 추가하기</button>\r\n                        </div>\r\n                    </div>\r\n                    {console.log(content)}\r\n                </div>\r\n            </div>\r\n            <button onClick={onClose}>X</button>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AddPopUp;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}