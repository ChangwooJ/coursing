{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\woori\\\\Desktop\\\\Memo-Jung\\\\coursing\\\\client\\\\src\\\\component\\\\postList.js\",\n  _s2 = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport { Swiper, SwiperSlide } from 'swiper/react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContents, fetchPosts } from \"../redux/actions/postActions\";\nimport Maps from \"../component/maps\";\nimport { AddPlan } from \"./handlePlan\";\nimport fetchLocations from \"./fetchLoc\";\nimport '../css/postList.css';\nimport 'swiper/css';\nimport 'swiper/css/navigation';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostList = () => {\n  _s2();\n  var _s = $RefreshSig$();\n  const dispatch = useDispatch();\n  const posts = useSelector(state => state.posts.posts);\n  const contents = useSelector(state => state.contents.contents);\n  useEffect(() => {\n    dispatch(fetchPosts());\n    dispatch(fetchContents());\n  }, [dispatch]);\n  const handleAddPlan = async ({\n    content\n  }) => {\n    try {\n      await AddPlan({\n        content\n      });\n    } catch (error) {\n      alert('Failed to add plan.');\n    }\n  };\n  const handleLoc = lists => {\n    _s();\n    useEffect(() => {\n      if (lists.length > 0) {\n        (async () => {\n          const locations = await fetchLocations(lists);\n        })();\n      }\n    }, [lists]);\n    re;\n  };\n  _s(handleLoc, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n  const navigatePage = index => {\n    if (swiperRef.current) {\n      swiperRef.current.slideTo(index);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main_wrap\",\n      children: posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post_wrap\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: post.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: post.user_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"swiper-button-prev swiper_bt\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Swiper, {\n          spaceBetween: 20,\n          slidesPerView: 1,\n          navigation: {\n            prevEl: \".swiper-button-prev\",\n            nextEl: \".swiper-button-next\"\n          },\n          pagination: {\n            type: \"bullets\"\n          },\n          children: contents.filter(content => content.post_id === post.post_id).map(content => /*#__PURE__*/_jsxDEV(SwiperSlide, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"silde_frame\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"post_content\",\n                children: content.content\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                src: content.img_src\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"map_wrap\",\n                children: /*#__PURE__*/_jsxDEV(Maps, {\n                  id: `${content.id}`,\n                  address: content.address\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 78,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"add_plan\",\n              onClick: () => handleAddPlan({\n                content\n              }),\n              children: \"\\uCD94\\uAC00\\uD558\\uAE30\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 41\n            }, this)]\n          }, content.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 37\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post_banner_wrap\",\n          children: contents.filter(content => content.post_id === post.post_id).map(con => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `post_each_hour ${selected === pos.list_id ? \"selected\" : \"\"}`,\n            onClick: () => navigatePage(con.content_id),\n            children: [handleLoc(con), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"post_time_wrap\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"post_start_hour\",\n                children: `${con.start_time}시`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"post_end_hour\",\n                children: `${con.end_time}시`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"post_middle_wrap\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: con.category,\n                className: \"post_cate_img\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"post_loc_name\",\n                children: con.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 41\n            }, this)]\n          }, con.content_id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 37\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"swiper-button-next swiper_bt\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 25\n        }, this)]\n      }, post.post_id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n};\n_s2(PostList, \"9FnH/41YrCYKt0PA0MZpkwx+Sk0=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n_c = PostList;\nexport default PostList;\nvar _c;\n$RefreshReg$(_c, \"PostList\");","map":{"version":3,"names":["React","useEffect","Swiper","SwiperSlide","useDispatch","useSelector","fetchContents","fetchPosts","Maps","AddPlan","fetchLocations","jsxDEV","_jsxDEV","PostList","_s2","_s","$RefreshSig$","dispatch","posts","state","contents","handleAddPlan","content","error","alert","handleLoc","lists","length","locations","re","navigatePage","index","swiperRef","current","slideTo","Fragment","children","className","map","post","title","fileName","_jsxFileName","lineNumber","columnNumber","user_name","spaceBetween","slidesPerView","navigation","prevEl","nextEl","pagination","type","filter","post_id","src","img_src","id","address","onClick","con","selected","pos","list_id","content_id","start_time","end_time","category","name","_c","$RefreshReg$"],"sources":["C:/Users/woori/Desktop/Memo-Jung/coursing/client/src/component/postList.js"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { Swiper, SwiperSlide } from 'swiper/react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { fetchContents, fetchPosts } from \"../redux/actions/postActions\";\r\nimport Maps from \"../component/maps\";\r\nimport { AddPlan } from \"./handlePlan\";\r\nimport fetchLocations from \"./fetchLoc\";\r\nimport '../css/postList.css';\r\nimport 'swiper/css';\r\nimport 'swiper/css/navigation';\r\n\r\nconst PostList = () => {\r\n    const dispatch = useDispatch();\r\n    const posts = useSelector(state => state.posts.posts);\r\n    const contents = useSelector(state => state.contents.contents);\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchPosts());\r\n        dispatch(fetchContents());\r\n    }, [dispatch]);\r\n\r\n    const handleAddPlan = async ({ content }) => {\r\n        try {\r\n            await AddPlan({ content });\r\n        } catch (error) {\r\n            alert('Failed to add plan.');\r\n        }\r\n    };\r\n\r\n    const handleLoc = (lists) => {\r\n        useEffect(() => {\r\n            if (lists.length > 0) {\r\n                (async () => {\r\n                    const locations = await fetchLocations(lists);\r\n                })();\r\n            }\r\n        }, [lists]);\r\n\r\n        re\r\n    }\r\n\r\n    const navigatePage = (index) => {\r\n        if (swiperRef.current) {\r\n            swiperRef.current.slideTo(index);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"main_wrap\">\r\n                {posts.map((post) => (\r\n                    <div key={post.post_id} className=\"post_wrap\">\r\n                        <h3>{post.title}</h3>\r\n                        <p>{post.user_name}</p>\r\n                        <div className=\"swiper-button-prev swiper_bt\"></div>\r\n                        <Swiper\r\n                            spaceBetween={20}\r\n                            slidesPerView={1}\r\n                            navigation={{\r\n                                prevEl: \".swiper-button-prev\",\r\n                                nextEl: \".swiper-button-next\"\r\n                            }}\r\n                            pagination={{\r\n                                type: \"bullets\"\r\n                            }}\r\n                        >\r\n                            {contents.filter(content => content.post_id === post.post_id)\r\n                                .map(content => (\r\n                                    <SwiperSlide key={content.id}>\r\n                                        <div className=\"silde_frame\">\r\n                                            <div className=\"post_content\">\r\n                                                {content.content}\r\n                                            </div>\r\n                                            <img\r\n                                                src={content.img_src}\r\n                                            />\r\n                                            <div className=\"map_wrap\">\r\n                                                <Maps id={`${content.id}`} address={content.address} />\r\n                                            </div>\r\n                                        </div>\r\n                                        <button className=\"add_plan\" onClick={() => handleAddPlan({ content })}>추가하기</button>\r\n                                    </SwiperSlide>\r\n                                ))\r\n                            }\r\n                        </Swiper>\r\n                        <div className=\"post_banner_wrap\">\r\n                            {contents.filter(content => content.post_id === post.post_id)\r\n                                .map(con => (\r\n                                    <div\r\n                                        key={con.content_id}\r\n                                        className={`post_each_hour ${selected === pos.list_id ? \"selected\" : \"\"}`}\r\n                                        onClick={() => navigatePage(con.content_id)}\r\n                                    >\r\n                                        {handleLoc(con)}\r\n                                        <div className=\"post_time_wrap\">\r\n                                            <p className=\"post_start_hour\">{`${con.start_time}시`}</p>\r\n                                            <p className=\"post_end_hour\">{`${con.end_time}시`}</p>\r\n                                        </div>\r\n                                        <div className=\"post_middle_wrap\">\r\n                                            <img src={con.category} className=\"post_cate_img\" />\r\n                                            <p className=\"post_loc_name\">{con.name}</p>\r\n                                        </div>\r\n                                    </div>\r\n                                ))\r\n                            }\r\n                        </div>\r\n                        <div className=\"swiper-button-next swiper_bt\"></div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n\r\n}\r\n\r\nexport default PostList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}