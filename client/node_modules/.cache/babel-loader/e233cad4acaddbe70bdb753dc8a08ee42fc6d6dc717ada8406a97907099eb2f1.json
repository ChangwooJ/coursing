{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\woori\\\\Desktop\\\\Memo-Jung\\\\coursing\\\\client\\\\src\\\\component\\\\postMap.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostMap = () => {\n  _s();\n  const {\n    option,\n    markers\n  } = useFetchMaps({\n    content: content\n  });\n  useEffect(() => {\n    const initializeMap = () => {\n      if (mapContainerRef.current && option.center && markers.length > 0) {\n        //console.log(mapContainerRef.current);\n        const map = new kakao.maps.Map(mapContainerRef.current, option);\n        markers.forEach(marker => marker.setMap(map));\n      }\n    };\n    if (mapContainerRef.current) {\n      initializeMap();\n    }\n  }, [option, markers, mapContainerRef.current]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"map_wrap\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main_map\",\n      ref: mapContainerRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n};\n_s(PostMap, \"dxmitAdBmC8XyljFfIuZrDCXEzc=\", true);\n_c = PostMap;\nexport default PostMap;\nvar _c;\n$RefreshReg$(_c, \"PostMap\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","PostMap","_s","option","markers","useFetchMaps","content","useEffect","initializeMap","mapContainerRef","current","center","length","map","kakao","maps","Map","forEach","marker","setMap","className","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/woori/Desktop/Memo-Jung/coursing/client/src/component/postMap.js"],"sourcesContent":["import React from \"react\";\r\n\r\nconst PostMap = () => {\r\n    const { option, markers } = useFetchMaps({ content: content });\r\n\r\n    useEffect(() => {\r\n        const initializeMap = () => {\r\n            if (mapContainerRef.current && option.center && markers.length > 0) {\r\n                //console.log(mapContainerRef.current);\r\n                const map = new kakao.maps.Map(mapContainerRef.current, option);\r\n                markers.forEach(marker => marker.setMap(map));\r\n            }\r\n        };\r\n        if (mapContainerRef.current) {\r\n            initializeMap();\r\n        }\r\n    }, [option, markers, mapContainerRef.current]);\r\n    return (\r\n        <div className=\"map_wrap\">\r\n            <div className=\"main_map\" ref={mapContainerRef} ></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PostMap;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM;IAAEC,MAAM;IAAEC;EAAQ,CAAC,GAAGC,YAAY,CAAC;IAAEC,OAAO,EAAEA;EAAQ,CAAC,CAAC;EAE9DC,SAAS,CAAC,MAAM;IACZ,MAAMC,aAAa,GAAGA,CAAA,KAAM;MACxB,IAAIC,eAAe,CAACC,OAAO,IAAIP,MAAM,CAACQ,MAAM,IAAIP,OAAO,CAACQ,MAAM,GAAG,CAAC,EAAE;QAChE;QACA,MAAMC,GAAG,GAAG,IAAIC,KAAK,CAACC,IAAI,CAACC,GAAG,CAACP,eAAe,CAACC,OAAO,EAAEP,MAAM,CAAC;QAC/DC,OAAO,CAACa,OAAO,CAACC,MAAM,IAAIA,MAAM,CAACC,MAAM,CAACN,GAAG,CAAC,CAAC;MACjD;IACJ,CAAC;IACD,IAAIJ,eAAe,CAACC,OAAO,EAAE;MACzBF,aAAa,CAAC,CAAC;IACnB;EACJ,CAAC,EAAE,CAACL,MAAM,EAAEC,OAAO,EAAEK,eAAe,CAACC,OAAO,CAAC,CAAC;EAC9C,oBACIV,OAAA;IAAKoB,SAAS,EAAC,UAAU;IAAAC,QAAA,eACrBrB,OAAA;MAAKoB,SAAS,EAAC,UAAU;MAACE,GAAG,EAAEb;IAAgB;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtD,CAAC;AAEd,CAAC;AAAAxB,EAAA,CApBKD,OAAO;AAAA0B,EAAA,GAAP1B,OAAO;AAsBb,eAAeA,OAAO;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}