{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\woori\\\\Desktop\\\\Memo-Jung\\\\coursing\\\\client\\\\src\\\\pages\\\\Main.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport { Swiper, SwiperSlide } from 'swiper/react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContents, fetchPosts } from \"../redux/actions/postActions\";\nimport Maps from \"../component/maps\";\nimport 'swiper/css';\nimport '../css/Main.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Main = () => {\n  _s();\n  const dispatch = useDispatch();\n  const posts = useSelector(state => state.posts.posts);\n  const contents = useSelector(state => state.contents.contents);\n  console.log(posts);\n  console.log(contents);\n  useEffect(() => {\n    dispatch(fetchPosts());\n    dispatch(fetchContents());\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post_list\",\n      children: posts.map(post =>\n      /*#__PURE__*/\n      //게시글의 정보를 가져와 차례로 로드함\n      _jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: post.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: post.user_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"swiper-prev swiper_bt\",\n          children: \"<\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Swiper, {\n          spaceBetween: 20,\n          slidesPerView: 2,\n          navigation: {\n            prevEl: \".swiper-prev\",\n            nextEl: \".swiper-next\"\n          },\n          children: contents.filter(content => content.post_id === post.post_id) //게시글에 맞는 내용을 필터링\n          .reverse().map((content, idx) => /*#__PURE__*/_jsxDEV(SwiperSlide, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: content.img_src,\n                style: {\n                  width: '20%',\n                  height: '40vh'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 45\n              }, this), console.log(content.img_src), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  width: '30%',\n                  height: '400px'\n                },\n                children: [/*#__PURE__*/_jsxDEV(Maps, {\n                  id: `map-${content}`,\n                  lat: content.lat,\n                  lon: content.lon\n                }, `map-${idx}`, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 50,\n                  columnNumber: 49\n                }, this), console.log(content.lat)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: content.content\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 41\n            }, this)\n          }, content.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 37\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"swiper-next swiper_bt\",\n          children: \">\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 25\n        }, this)]\n      }, post.post_id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n_s(Main, \"9FnH/41YrCYKt0PA0MZpkwx+Sk0=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n_c = Main;\nexport default Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["React","useEffect","Swiper","SwiperSlide","useDispatch","useSelector","fetchContents","fetchPosts","Maps","jsxDEV","_jsxDEV","Main","_s","dispatch","posts","state","contents","console","log","Fragment","children","className","map","post","title","fileName","_jsxFileName","lineNumber","columnNumber","user_name","spaceBetween","slidesPerView","navigation","prevEl","nextEl","filter","content","post_id","reverse","idx","src","img_src","style","width","height","id","lat","lon","_c","$RefreshReg$"],"sources":["C:/Users/woori/Desktop/Memo-Jung/coursing/client/src/pages/Main.js"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { Swiper, SwiperSlide } from 'swiper/react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { fetchContents, fetchPosts } from \"../redux/actions/postActions\";\r\nimport Maps from \"../component/maps\";\r\nimport 'swiper/css';\r\nimport '../css/Main.css';\r\n\r\nconst Main = () => {\r\n    const dispatch = useDispatch();\r\n    const posts = useSelector(state => state.posts.posts);\r\n    const contents = useSelector(state => state.contents.contents);\r\n\r\n    console.log(posts);\r\n    console.log(contents);\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchPosts());\r\n        dispatch(fetchContents());\r\n    }, [dispatch]);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"post_list\">\r\n                {posts.map((post) => (  //게시글의 정보를 가져와 차례로 로드함\r\n                    <div key={post.post_id}>\r\n                        <h3>{post.title}</h3>\r\n                        <p>{post.user_name}</p>\r\n                        <button className=\"swiper-prev swiper_bt\">{\"<\"}</button>\r\n\r\n                        <Swiper\r\n                            spaceBetween={20}\r\n                            slidesPerView={2}\r\n                            navigation={{\r\n                                prevEl: \".swiper-prev\",\r\n                                nextEl: \".swiper-next\"\r\n                            }}\r\n                        >\r\n                            {contents.filter(content => content.post_id === post.post_id)   //게시글에 맞는 내용을 필터링\r\n                                .reverse()\r\n                                .map((content, idx) => (\r\n                                    <SwiperSlide key={content.id}>\r\n                                        <div>\r\n                                            <img\r\n                                                src={content.img_src}\r\n                                                style={{ width: '20%', height: '40vh' }}\r\n                                            />\r\n                                            {console.log(content.img_src)}\r\n                                            <div style={{ width: '30%', height: '400px' }}>\r\n                                                <Maps key={`map-${idx}`} id={`map-${content}`} lat={content.lat} lon={content.lon} />\r\n                                                {console.log(content.lat)}\r\n                                            </div>\r\n                                            <p>{content.content}</p>\r\n                                        </div>\r\n                                    </SwiperSlide>\r\n\r\n                                ))\r\n                            }\r\n                        </Swiper>\r\n                        <button className=\"swiper-next swiper_bt\">{\">\"}</button>\r\n\r\n                    </div>\r\n                ))}\r\n\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n\r\n}\r\n\r\nexport default Main;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}