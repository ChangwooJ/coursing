{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\woori\\\\Desktop\\\\Memo-Jung\\\\coursing\\\\client\\\\src\\\\component\\\\postList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport { Swiper, SwiperSlide } from 'swiper/react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContents, fetchPosts } from \"../redux/actions/postActions\";\nimport Maps from \"../component/maps\";\nimport AddPlan from \"./addPlan\";\nimport '../css/postList.css';\nimport 'swiper/css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostList = ({\n  positions\n}) => {\n  _s();\n  const dispatch = useDispatch();\n  const posts = useSelector(state => state.posts.posts);\n  const contents = useSelector(state => state.contents.contents);\n  useEffect(() => {\n    dispatch(fetchPosts());\n    dispatch(fetchContents());\n  }, [dispatch]);\n  const handleAddPlan = async ({\n    content\n  }) => {\n    console.log(content);\n    try {\n      await AddPlan(content);\n    } catch (error) {\n      alert('Failed to add plan.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"banner_wrap\",\n      children: [positions.length > 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: positions[0].title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 43\n      }, this), positions.map((position, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: position.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 25\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main_wrap\",\n      children: posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: post.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: post.user_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"swiper-prev swiper_bt\",\n          children: \"<\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Swiper, {\n          spaceBetween: 20,\n          slidesPerView: 1,\n          navigation: {\n            prevEl: \".swiper-prev\",\n            nextEl: \".swiper-next\"\n          },\n          children: contents.filter(content => content.post_id === post.post_id).reverse().map(content => /*#__PURE__*/_jsxDEV(SwiperSlide, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"silde_frame\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: content.img_src,\n                style: {\n                  width: '30%',\n                  height: '60vh'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"map_wrap\",\n                style: {\n                  border: '1px solid red',\n                  width: '50%',\n                  height: '400px'\n                },\n                children: /*#__PURE__*/_jsxDEV(Maps, {\n                  id: `${content.id}`,\n                  address: content.address\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 64,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"add_plan\",\n              onClick: () => handleAddPlan(content),\n              children: \"\\uCD94\\uAC00\\uD558\\uAE30\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 41\n            }, this), console.log(content.address)]\n          }, content.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 37\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"swiper-next swiper_bt\",\n          children: \">\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 25\n        }, this)]\n      }, post.post_id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n_s(PostList, \"9FnH/41YrCYKt0PA0MZpkwx+Sk0=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n_c = PostList;\nexport default PostList;\nvar _c;\n$RefreshReg$(_c, \"PostList\");","map":{"version":3,"names":["React","useEffect","Swiper","SwiperSlide","useDispatch","useSelector","fetchContents","fetchPosts","Maps","AddPlan","jsxDEV","_jsxDEV","PostList","positions","_s","dispatch","posts","state","contents","handleAddPlan","content","console","log","error","alert","Fragment","children","className","length","title","fileName","_jsxFileName","lineNumber","columnNumber","map","position","index","name","post","user_name","spaceBetween","slidesPerView","navigation","prevEl","nextEl","filter","post_id","reverse","src","img_src","style","width","height","border","id","address","onClick","_c","$RefreshReg$"],"sources":["C:/Users/woori/Desktop/Memo-Jung/coursing/client/src/component/postList.js"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { Swiper, SwiperSlide } from 'swiper/react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { fetchContents, fetchPosts } from \"../redux/actions/postActions\";\r\nimport Maps from \"../component/maps\";\r\nimport AddPlan from \"./addPlan\";\r\nimport '../css/postList.css';\r\nimport 'swiper/css';\r\n\r\nconst PostList = ({ positions }) => {\r\n    const dispatch = useDispatch();\r\n    const posts = useSelector(state => state.posts.posts);\r\n    const contents = useSelector(state => state.contents.contents);\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchPosts());\r\n        dispatch(fetchContents());\r\n    }, [dispatch]);\r\n\r\n    const handleAddPlan = async ({content}) => {\r\n        console.log(content)\r\n        try {\r\n            await AddPlan(content);\r\n        } catch (error) {\r\n            alert('Failed to add plan.');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"banner_wrap\">\r\n                {positions.length > 0 && (<p>{positions[0].title}</p>)}\r\n                {positions.map((position, index) => (\r\n                    <div key={index}>\r\n                        <p>{position.name}</p>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n            <div className=\"main_wrap\">\r\n                {posts.map((post) => (\r\n                    <div key={post.post_id}>\r\n                        <h3>{post.title}</h3>\r\n                        <p>{post.user_name}</p>\r\n                        <button className=\"swiper-prev swiper_bt\">{\"<\"}</button>\r\n\r\n                        <Swiper\r\n                            spaceBetween={20}\r\n                            slidesPerView={1}\r\n                            navigation={{\r\n                                prevEl: \".swiper-prev\",\r\n                                nextEl: \".swiper-next\"\r\n                            }}\r\n                        >\r\n                            {contents.filter(content => content.post_id === post.post_id)\r\n                                .reverse()\r\n                                .map(content => (\r\n                                    <SwiperSlide key={content.id}>\r\n                                        <div className=\"silde_frame\">\r\n                                            <img\r\n                                                src={content.img_src}\r\n                                                style={{ width: '30%', height: '60vh' }}\r\n                                            />\r\n                                            <div className=\"map_wrap\" style={{ border: '1px solid red', width: '50%', height: '400px' }}>\r\n                                                <Maps id={`${content.id}`} address={content.address} />\r\n                                            </div>\r\n                                        </div>\r\n                                        <button className=\"add_plan\" onClick={()=> handleAddPlan(content)}>추가하기</button>\r\n                                        {console.log(content.address)}\r\n                                    </SwiperSlide>\r\n                                ))\r\n                            }\r\n                        </Swiper>\r\n                        <button className=\"swiper-next swiper_bt\">{\">\"}</button>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n\r\n}\r\n\r\nexport default PostList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}