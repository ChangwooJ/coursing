{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport fetchLocations from \"./fetchLoc\";\nimport \"../css/list_map.css\";\nconst {\n  kakao\n} = window;\nconst useFetchMaps = ({\n  content\n}) => {\n  _s();\n  const [locations, setLocations] = useState([]); // 위치 상태를 추가\n  const [mapDetails, setMapDetails] = useState({\n    option: {},\n    markers: []\n  });\n  useEffect(() => {\n    const fetchLoc = async () => {\n      if (content && content.length > 0) {\n        const locs = await fetchLocations(content);\n        if (locs) {\n          setLocations(locs);\n        }\n      }\n    };\n    fetchLoc();\n  }, [content]);\n  useEffect(() => {\n    if (locations.length > 0) {\n      const options = {\n        center: locations[0].latlng,\n        level: 4\n      };\n      const markers = locations.map(loc => new kakao.maps.Marker({\n        position: loc.latlng,\n        clickable: true\n      }));\n      const overlays = locations.map((loc, index) => {\n        var _content$index, _content$index2;\n        const imgSrc = (_content$index = content[index]) === null || _content$index === void 0 ? void 0 : _content$index.img_src;\n        const infoText = ((_content$index2 = content[index]) === null || _content$index2 === void 0 ? void 0 : _content$index2.content) || '정보 없음';\n        const contentDiv = document.createElement('div');\n        contentDiv.className = 'customoverlay';\n        const imgElement = document.createElement('img');\n        imgElement.src = imgSrc;\n        imgElement.style.width = '150px';\n        imgElement.style.height = '150px';\n        const textBox = document.createElement('div');\n        textBox.className = 'text-box';\n        textBox.innerHTML = infoText;\n        textBox.addEventListener('click', () => {\n          if (textBox.style.height === '140px' && textBox.style.width === '100px') {\n            textBox.style.height = '300px';\n            textBox.style.width = '200px';\n          } else {\n            textBox.style.height = '50px';\n          }\n        });\n        contentDiv.appendChild(imgElement);\n        contentDiv.appendChild(textBox);\n        const overlay = new kakao.maps.CustomOverlay({\n          content: contentDiv,\n          position: loc.latlng,\n          xAnchor: 0.5,\n          yAnchor: 1.5\n        });\n        return overlay;\n      });\n      setMapDetails({\n        option: options,\n        markers: markers,\n        overlays: overlays\n      });\n    }\n  }, [locations]);\n  return mapDetails;\n};\n_s(useFetchMaps, \"AbHU8u2H304JNhOjvArAtLGuWEA=\");\nexport default useFetchMaps;","map":{"version":3,"names":["useEffect","useState","fetchLocations","kakao","window","useFetchMaps","content","_s","locations","setLocations","mapDetails","setMapDetails","option","markers","fetchLoc","length","locs","options","center","latlng","level","map","loc","maps","Marker","position","clickable","overlays","index","_content$index","_content$index2","imgSrc","img_src","infoText","contentDiv","document","createElement","className","imgElement","src","style","width","height","textBox","innerHTML","addEventListener","appendChild","overlay","CustomOverlay","xAnchor","yAnchor"],"sources":["C:/Users/woori/Desktop/Memo-Jung/coursing/client/src/component/fetchMaps.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport fetchLocations from \"./fetchLoc\";\r\nimport \"../css/list_map.css\";\r\n\r\nconst { kakao } = window;\r\n\r\nconst useFetchMaps = ({ content }) => {\r\n    const [locations, setLocations] = useState([]);  // 위치 상태를 추가\r\n    const [mapDetails, setMapDetails] = useState({ option: {}, markers: [] });\r\n    \r\n    useEffect(() => {\r\n        const fetchLoc = async () => {\r\n            if (content && content.length > 0) {\r\n                const locs = await fetchLocations(content);\r\n                if (locs) {\r\n                    setLocations(locs);\r\n                }\r\n            }\r\n        };\r\n        fetchLoc();\r\n    }, [content]);\r\n\r\n    useEffect(() => {\r\n        if (locations.length > 0) {\r\n            const options = {\r\n                center: locations[0].latlng,\r\n                level: 4\r\n            };\r\n            \r\n            const markers = locations.map(loc => new kakao.maps.Marker({\r\n                position: loc.latlng,\r\n                clickable: true\r\n            }));\r\n\r\n            const overlays = locations.map((loc, index) => {\r\n                const imgSrc = content[index]?.img_src;\r\n                const infoText = content[index]?.content || '정보 없음';\r\n\r\n                const contentDiv = document.createElement('div');\r\n                contentDiv.className = 'customoverlay';\r\n                \r\n                const imgElement = document.createElement('img');\r\n                imgElement.src = imgSrc;\r\n                imgElement.style.width = '150px';\r\n                imgElement.style.height = '150px';\r\n\r\n                const textBox = document.createElement('div');\r\n                textBox.className = 'text-box';\r\n                textBox.innerHTML = infoText;\r\n\r\n                textBox.addEventListener('click', () => {\r\n                    if (textBox.style.height === '140px' && textBox.style.width === '100px') {\r\n                        textBox.style.height = '300px';\r\n                        textBox.style.width = '200px';\r\n                    } else {\r\n                        textBox.style.height = '50px';\r\n                    }\r\n                });\r\n\r\n                contentDiv.appendChild(imgElement);\r\n                contentDiv.appendChild(textBox);\r\n\r\n                const overlay = new kakao.maps.CustomOverlay({\r\n                    content: contentDiv,\r\n                    position: loc.latlng,\r\n                    xAnchor: 0.5,\r\n                    yAnchor: 1.5\r\n                });\r\n\r\n                return overlay;\r\n            });\r\n\r\n            setMapDetails({\r\n                option: options,\r\n                markers: markers,\r\n                overlays: overlays\r\n            });\r\n        }\r\n    }, [locations]);\r\n\r\n    return mapDetails;\r\n};\r\n\r\nexport default useFetchMaps;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}