{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\woori\\\\Desktop\\\\Memo-Jung\\\\coursing\\\\client\\\\src\\\\component\\\\maps.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  kakao\n} = window;\nconst Maps = ({\n  id,\n  address\n}) => {\n  _s();\n  const mapContainerRef = useRef(null); // useRef를 사용하여 DOM 요소를 참조\n  const [location, setLocation] = useState(null); // 위치 상태를 추가\n  const [lat, setLat] = useState(0);\n  const fetchLocation = async () => {\n    if (address) {\n      try {\n        const loc_res = await axios({\n          method: \"GET\",\n          url: `https://dapi.kakao.com/v2/local/search/address.${encodeURIComponent(address)}`,\n          headers: {\n            Authorization: `KakaoAK 679be3cd1422458c64bdc5edcc3afad4`\n          }\n        });\n        if (loc_res.data.documents.length > 0) {\n          setLocation(loc_res.data.documents[0]);\n        }\n      } catch (error) {\n        console.error(\"위치 검색 오류:\", error);\n      }\n    }\n  };\n\n  //REST API를 이용해 주소 위치의 정보를 가져옴\n  useEffect(() => {\n    fetchLocation();\n  }, [address]);\n  useEffect(() => {\n    maps();\n  }, [lat, lon, location]); // lat과 lon이 변경될 때마다 effect 실행\n\n  const maps = () => {\n    if (mapContainerRef.current) {\n      // mapContainerRef.current가 유효할 때만 실행\n      const container = mapContainerRef.current;\n      const options = {\n        center: new kakao.maps.LatLng(lat, lon),\n        level: 3\n      };\n      var map = new kakao.maps.Map(container, options); // 카카오 지도 초기화\n\n      var markerPosition = new kakao.maps.LatLng(lat, lon);\n\n      // 마커를 생성합니다\n      var marker = new kakao.maps.Marker({\n        position: markerPosition,\n        clickable: true\n      });\n\n      // 마커가 지도 위에 표시되도록 설정합니다\n      marker.setMap(map);\n\n      // 마커를 클릭했을 때 마커 위에 표시할 인포윈도우를 생성합니다\n      var iwContent = `<div></div>`,\n        // 인포윈도우에 표출될 내용으로 HTML 문자열이나 document element가 가능합니다\n        iwRemoveable = true; // removeable 속성을 ture 로 설정하면 인포윈도우를 닫을 수 있는 x버튼이 표시됩니다\n\n      // 인포윈도우를 생성합니다\n      var infowindow = new kakao.maps.InfoWindow({\n        content: iwContent,\n        removable: iwRemoveable\n      });\n\n      // 마커 위에 인포윈도우를 표시합니다\n      infowindow.open(map, marker);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: id,\n    ref: mapContainerRef,\n    style: {\n      width: '100%',\n      height: '100%'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 12\n  }, this); // ref를 div에 설정\n};\n_s(Maps, \"7TsqcduzCUmr+A5Q802IlPuwMGM=\");\n_c = Maps;\nexport default Maps;\nvar _c;\n$RefreshReg$(_c, \"Maps\");","map":{"version":3,"names":["React","useEffect","useRef","useState","axios","jsxDEV","_jsxDEV","kakao","window","Maps","id","address","_s","mapContainerRef","location","setLocation","lat","setLat","fetchLocation","loc_res","method","url","encodeURIComponent","headers","Authorization","data","documents","length","error","console","maps","lon","current","container","options","center","LatLng","level","map","Map","markerPosition","marker","Marker","position","clickable","setMap","iwContent","iwRemoveable","infowindow","InfoWindow","content","removable","open","ref","style","width","height","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/woori/Desktop/Memo-Jung/coursing/client/src/component/maps.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst { kakao } = window;\r\n\r\nconst Maps = ({ id, address }) => {\r\n    const mapContainerRef = useRef(null);  // useRef를 사용하여 DOM 요소를 참조\r\n    const [location, setLocation] = useState(null);  // 위치 상태를 추가\r\n    const [lat, setLat] = useState(0)\r\n\r\n    const fetchLocation = async () => {\r\n        if (address) {\r\n            try {\r\n                const loc_res = await axios({\r\n                    method: \"GET\",\r\n                    url: `https://dapi.kakao.com/v2/local/search/address.${encodeURIComponent(address)}`,\r\n                    headers: {\r\n                        Authorization: `KakaoAK 679be3cd1422458c64bdc5edcc3afad4`,\r\n                    },\r\n                });\r\n                if (loc_res.data.documents.length > 0) {\r\n                    setLocation(loc_res.data.documents[0]);\r\n                }\r\n            } catch (error) {\r\n                console.error(\"위치 검색 오류:\", error);\r\n            }\r\n        }\r\n    };\r\n\r\n    //REST API를 이용해 주소 위치의 정보를 가져옴\r\n    useEffect(() => {\r\n        fetchLocation();\r\n    }, [address]);\r\n\r\n    useEffect(() => {\r\n        maps();\r\n    }, [lat, lon, location]);  // lat과 lon이 변경될 때마다 effect 실행\r\n\r\n    const maps = () => {\r\n        if (mapContainerRef.current) {  // mapContainerRef.current가 유효할 때만 실행\r\n            const container = mapContainerRef.current;\r\n            const options = {\r\n                center: new kakao.maps.LatLng(lat, lon),\r\n                level: 3\r\n            };\r\n            var map = new kakao.maps.Map(container, options);  // 카카오 지도 초기화\r\n\r\n            var markerPosition = new kakao.maps.LatLng(lat, lon);\r\n\r\n            // 마커를 생성합니다\r\n            var marker = new kakao.maps.Marker({\r\n                position: markerPosition,\r\n                clickable: true\r\n            });\r\n\r\n            // 마커가 지도 위에 표시되도록 설정합니다\r\n            marker.setMap(map);\r\n\r\n            // 마커를 클릭했을 때 마커 위에 표시할 인포윈도우를 생성합니다\r\n            var iwContent = `<div></div>`, // 인포윈도우에 표출될 내용으로 HTML 문자열이나 document element가 가능합니다\r\n                iwRemoveable = true; // removeable 속성을 ture 로 설정하면 인포윈도우를 닫을 수 있는 x버튼이 표시됩니다\r\n\r\n            // 인포윈도우를 생성합니다\r\n            var infowindow = new kakao.maps.InfoWindow({\r\n                content: iwContent,\r\n                removable: iwRemoveable\r\n            });\r\n\r\n            // 마커 위에 인포윈도우를 표시합니다\r\n            infowindow.open(map, marker);\r\n\r\n        }\r\n    }\r\n\r\n    return <div id={id} ref={mapContainerRef} style={{ width: '100%', height: '100%' }}></div>;  // ref를 div에 설정\r\n};\r\n\r\nexport default Maps;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}