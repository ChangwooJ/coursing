{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\woori\\\\Desktop\\\\Memo-Jung\\\\coursing\\\\client\\\\src\\\\pages\\\\Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect, useState } from 'react';\nimport \"../css/Chat.css\";\nimport { AuthContext } from '../context/AuthContext';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chat = () => {\n  _s();\n  const {\n    loading,\n    userInfo\n  } = useContext(AuthContext);\n  const [rooms, setRooms] = useState([]);\n  useEffect(() => {\n    const fetchChatData = async () => {\n      try {\n        const response = await axios.get(`http://localhost:8000/api/chat_rooms/${userInfo[0].user_id}`);\n        setRooms(response.data);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    if (!loading) {\n      fetchChatData();\n    }\n  }, [userInfo]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 12\n    }, this);\n  }\n  console.log(rooms);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: rooms.map(room => room.target_user_id)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(Chat, \"OHR6kxZCxkT+RSLbrj3htNeFyIg=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useContext","useEffect","useState","AuthContext","axios","jsxDEV","_jsxDEV","Chat","_s","loading","userInfo","rooms","setRooms","fetchChatData","response","get","user_id","data","err","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","Fragment","map","room","target_user_id","_c","$RefreshReg$"],"sources":["C:/Users/woori/Desktop/Memo-Jung/coursing/client/src/pages/Chat.js"],"sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\r\nimport \"../css/Chat.css\";\r\nimport { AuthContext } from '../context/AuthContext';\r\nimport axios from 'axios';\r\n\r\nconst Chat = () => {\r\n  const { loading, userInfo } = useContext(AuthContext);\r\n  const [rooms, setRooms] =  useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchChatData = async () => {\r\n      try {\r\n        const response = await axios.get(`http://localhost:8000/api/chat_rooms/${userInfo[0].user_id}`);\r\n        setRooms(response.data);\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n\r\n    if(!loading) {\r\n      fetchChatData();\r\n    }\r\n  }, [userInfo]);\r\n\r\n  if(loading) {\r\n    return <div>Loading...</div>;\r\n  }\r\nconsole.log(rooms);\r\n  return (\r\n    <React.Fragment>\r\n      {rooms.map((room) => (\r\n        room.target_user_id\r\n      ))}\r\n    </React.Fragment>\r\n  )\r\n};\r\n\r\nexport default Chat;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC9D,OAAO,iBAAiB;AACxB,SAASC,WAAW,QAAQ,wBAAwB;AACpD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM;IAAEC,OAAO;IAAEC;EAAS,CAAC,GAAGV,UAAU,CAACG,WAAW,CAAC;EACrD,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAIV,QAAQ,CAAC,EAAE,CAAC;EAEvCD,SAAS,CAAC,MAAM;IACd,MAAMY,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACW,GAAG,CAAC,wCAAwCL,QAAQ,CAAC,CAAC,CAAC,CAACM,OAAO,EAAE,CAAC;QAC/FJ,QAAQ,CAACE,QAAQ,CAACG,IAAI,CAAC;MACzB,CAAC,CAAC,OAAOC,GAAG,EAAE;QACZC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;MAClB;IACF,CAAC;IAED,IAAG,CAACT,OAAO,EAAE;MACXI,aAAa,CAAC,CAAC;IACjB;EACF,CAAC,EAAE,CAACH,QAAQ,CAAC,CAAC;EAEd,IAAGD,OAAO,EAAE;IACV,oBAAOH,OAAA;MAAAe,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC9B;EACFN,OAAO,CAACC,GAAG,CAACT,KAAK,CAAC;EAChB,oBACEL,OAAA,CAACP,KAAK,CAAC2B,QAAQ;IAAAL,QAAA,EACZV,KAAK,CAACgB,GAAG,CAAEC,IAAI,IACdA,IAAI,CAACC,cACN;EAAC;IAAAP,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAErB,CAAC;AAACjB,EAAA,CA9BID,IAAI;AAAAuB,EAAA,GAAJvB,IAAI;AAgCV,eAAeA,IAAI;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}