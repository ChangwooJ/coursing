{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\woori\\\\Desktop\\\\Memo-Jung\\\\coursing\\\\client\\\\src\\\\component\\\\postMap.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostMap = ({\n  content\n}) => {\n  _s();\n  const mapContainerRef = useRef(null);\n  const {\n    option,\n    markers\n  } = useFetchMaps({\n    content: content\n  });\n  useEffect(() => {\n    const initializeMap = () => {\n      if (mapContainerRef.current && option.center && markers.length > 0) {\n        //console.log(mapContainerRef.current);\n        const map = new kakao.maps.Map(mapContainerRef.current, option);\n        markers.forEach(marker => marker.setMap(map));\n      }\n    };\n    if (mapContainerRef.current) {\n      initializeMap();\n    }\n  }, [option, markers, mapContainerRef.current]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"map_wrap\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main_map\",\n      ref: mapContainerRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n_s(PostMap, \"+AW38TO4tbGWWyFw7uk+1WKCHDw=\", true);\n_c = PostMap;\nexport default PostMap;\nvar _c;\n$RefreshReg$(_c, \"PostMap\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","PostMap","content","_s","mapContainerRef","useRef","option","markers","useFetchMaps","useEffect","initializeMap","current","center","length","map","kakao","maps","Map","forEach","marker","setMap","className","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/woori/Desktop/Memo-Jung/coursing/client/src/component/postMap.js"],"sourcesContent":["import React from \"react\";\r\n\r\nconst PostMap = ({content}) => {\r\n    const mapContainerRef = useRef(null);\r\n    const { option, markers } = useFetchMaps({ content: content });\r\n\r\n    useEffect(() => {\r\n        const initializeMap = () => {\r\n            if (mapContainerRef.current && option.center && markers.length > 0) {\r\n                //console.log(mapContainerRef.current);\r\n                const map = new kakao.maps.Map(mapContainerRef.current, option);\r\n                markers.forEach(marker => marker.setMap(map));\r\n            }\r\n        };\r\n        if (mapContainerRef.current) {\r\n            initializeMap();\r\n        }\r\n    }, [option, markers, mapContainerRef.current]);\r\n\r\n\r\n    return (\r\n        <div className=\"map_wrap\">\r\n            <div className=\"main_map\" ref={mapContainerRef} ></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PostMap;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,OAAO,GAAGA,CAAC;EAACC;AAAO,CAAC,KAAK;EAAAC,EAAA;EAC3B,MAAMC,eAAe,GAAGC,MAAM,CAAC,IAAI,CAAC;EACpC,MAAM;IAAEC,MAAM;IAAEC;EAAQ,CAAC,GAAGC,YAAY,CAAC;IAAEN,OAAO,EAAEA;EAAQ,CAAC,CAAC;EAE9DO,SAAS,CAAC,MAAM;IACZ,MAAMC,aAAa,GAAGA,CAAA,KAAM;MACxB,IAAIN,eAAe,CAACO,OAAO,IAAIL,MAAM,CAACM,MAAM,IAAIL,OAAO,CAACM,MAAM,GAAG,CAAC,EAAE;QAChE;QACA,MAAMC,GAAG,GAAG,IAAIC,KAAK,CAACC,IAAI,CAACC,GAAG,CAACb,eAAe,CAACO,OAAO,EAAEL,MAAM,CAAC;QAC/DC,OAAO,CAACW,OAAO,CAACC,MAAM,IAAIA,MAAM,CAACC,MAAM,CAACN,GAAG,CAAC,CAAC;MACjD;IACJ,CAAC;IACD,IAAIV,eAAe,CAACO,OAAO,EAAE;MACzBD,aAAa,CAAC,CAAC;IACnB;EACJ,CAAC,EAAE,CAACJ,MAAM,EAAEC,OAAO,EAAEH,eAAe,CAACO,OAAO,CAAC,CAAC;EAG9C,oBACIX,OAAA;IAAKqB,SAAS,EAAC,UAAU;IAAAC,QAAA,eACrBtB,OAAA;MAAKqB,SAAS,EAAC,UAAU;MAACE,GAAG,EAAEnB;IAAgB;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtD,CAAC;AAEd,CAAC;AAAAxB,EAAA,CAvBKF,OAAO;AAAA2B,EAAA,GAAP3B,OAAO;AAyBb,eAAeA,OAAO;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}