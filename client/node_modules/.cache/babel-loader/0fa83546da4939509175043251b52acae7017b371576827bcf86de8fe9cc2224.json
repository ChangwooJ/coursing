{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\woori\\\\Desktop\\\\Memo-Jung\\\\coursing\\\\client\\\\src\\\\component\\\\Chat\\\\roomList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchUsers } from \"../../redux/actions/userActions\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst RoomList = ({\n  room,\n  user_id\n}) => {\n  _s();\n  const dispatch = useDispatch();\n  const users = useSelector(state => state.users.users);\n  const get_target_id = () => {\n    if (room.user_id === user_id) {\n      return room.target_user_id;\n    } else if (room.target_user_id === user_id) {\n      return room.user_id;\n    }\n    return null; // 두 값이 모두 같지 않은 경우\n  };\n  const target_id = get_target_id();\n  const target_info = users.find(user => user.user_id === target_id);\n  useEffect(() => {\n    dispatch(fetchUsers());\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: target_info && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"room_wrap\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: target_info.profile_img,\n        className: \"target_img\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: target_info.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(RoomList, \"4X33Gq5WNquvmpYNZCa4A/J7s1c=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = RoomList;\nexport default RoomList;\nvar _c;\n$RefreshReg$(_c, \"RoomList\");","map":{"version":3,"names":["React","useEffect","useDispatch","useSelector","fetchUsers","jsxDEV","_jsxDEV","Fragment","_Fragment","RoomList","room","user_id","_s","dispatch","users","state","get_target_id","target_user_id","target_id","target_info","find","user","children","className","src","profile_img","fileName","_jsxFileName","lineNumber","columnNumber","name","_c","$RefreshReg$"],"sources":["C:/Users/woori/Desktop/Memo-Jung/coursing/client/src/component/Chat/roomList.js"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { fetchUsers } from \"../../redux/actions/userActions\";\r\n\r\nconst RoomList = ({ room, user_id }) => {\r\n    const dispatch = useDispatch();\r\n    const users = useSelector(state => state.users.users);\r\n    const get_target_id = () => {\r\n        if (room.user_id === user_id) {\r\n            return room.target_user_id;\r\n        } else if (room.target_user_id === user_id) {\r\n            return room.user_id;\r\n        }\r\n        return null; // 두 값이 모두 같지 않은 경우\r\n    };\r\n    const target_id = get_target_id();\r\n    const target_info = users.find(user => user.user_id === target_id);\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchUsers());\r\n    }, [dispatch]);\r\n\r\n    \r\n    \r\n    return (\r\n        <>\r\n        {target_info && (\r\n            <div className=\"room_wrap\">\r\n                <img src={target_info.profile_img} className=\"target_img\" />\r\n                <div>\r\n                    <p>{target_info.name}</p>\r\n                </div>\r\n            </div>\r\n        )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default RoomList;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,UAAU,QAAQ,iCAAiC;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE7D,MAAMC,QAAQ,GAAGA,CAAC;EAAEC,IAAI;EAAEC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EACpC,MAAMC,QAAQ,GAAGX,WAAW,CAAC,CAAC;EAC9B,MAAMY,KAAK,GAAGX,WAAW,CAACY,KAAK,IAAIA,KAAK,CAACD,KAAK,CAACA,KAAK,CAAC;EACrD,MAAME,aAAa,GAAGA,CAAA,KAAM;IACxB,IAAIN,IAAI,CAACC,OAAO,KAAKA,OAAO,EAAE;MAC1B,OAAOD,IAAI,CAACO,cAAc;IAC9B,CAAC,MAAM,IAAIP,IAAI,CAACO,cAAc,KAAKN,OAAO,EAAE;MACxC,OAAOD,IAAI,CAACC,OAAO;IACvB;IACA,OAAO,IAAI,CAAC,CAAC;EACjB,CAAC;EACD,MAAMO,SAAS,GAAGF,aAAa,CAAC,CAAC;EACjC,MAAMG,WAAW,GAAGL,KAAK,CAACM,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACV,OAAO,KAAKO,SAAS,CAAC;EAElEjB,SAAS,CAAC,MAAM;IACZY,QAAQ,CAACT,UAAU,CAAC,CAAC,CAAC;EAC1B,CAAC,EAAE,CAACS,QAAQ,CAAC,CAAC;EAId,oBACIP,OAAA,CAAAE,SAAA;IAAAc,QAAA,EACCH,WAAW,iBACRb,OAAA;MAAKiB,SAAS,EAAC,WAAW;MAAAD,QAAA,gBACtBhB,OAAA;QAAKkB,GAAG,EAAEL,WAAW,CAACM,WAAY;QAACF,SAAS,EAAC;MAAY;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC5DvB,OAAA;QAAAgB,QAAA,eACIhB,OAAA;UAAAgB,QAAA,EAAIH,WAAW,CAACW;QAAI;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EACR,gBACC,CAAC;AAEX,CAAC;AAAAjB,EAAA,CAhCKH,QAAQ;EAAA,QACOP,WAAW,EACdC,WAAW;AAAA;AAAA4B,EAAA,GAFvBtB,QAAQ;AAkCd,eAAeA,QAAQ;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}