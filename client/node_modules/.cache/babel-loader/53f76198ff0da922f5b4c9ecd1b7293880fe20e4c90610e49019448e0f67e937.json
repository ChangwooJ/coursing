{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\woori\\\\Desktop\\\\Memo-Jung\\\\coursing\\\\client\\\\src\\\\pages\\\\Main.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchPosts } from \"../redux/actions/postActions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Main = () => {\n  _s();\n  const dispatch = useDispatch();\n  const posts = useSelector(state => state.posts.posts);\n  useEffect(() => {\n    dispatch(fetchPosts());\n  }, []);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post_list\",\n      children: posts.map((post, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: post.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: post.user_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 25\n        }, this)]\n      }, post.post_id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this);\n};\n_s(Main, \"ENUDqdKwIx40U6eZCutSSehqnb4=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = Main;\nexport default Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["React","useEffect","useState","useDispatch","useSelector","fetchPosts","jsxDEV","_jsxDEV","Main","_s","dispatch","posts","state","Fragment","children","className","map","post","idx","title","fileName","_jsxFileName","lineNumber","columnNumber","user_name","post_id","_c","$RefreshReg$"],"sources":["C:/Users/woori/Desktop/Memo-Jung/coursing/client/src/pages/Main.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { fetchPosts } from \"../redux/actions/postActions\";\r\n\r\nconst Main = () => {\r\n    const dispatch = useDispatch();\r\n    const posts = useSelector(state => state.posts.posts);\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchPosts());\r\n    }, []);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"post_list\">\r\n                {posts.map((post, idx) => (\r\n                    <div key={post.post_id}>\r\n                        <h3>{post.title}</h3>\r\n                        <p>{post.user_name}</p>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n\r\n}\r\n\r\nexport default Main;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,UAAU,QAAQ,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1D,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACf,MAAMC,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAC9B,MAAMQ,KAAK,GAAGP,WAAW,CAACQ,KAAK,IAAIA,KAAK,CAACD,KAAK,CAACA,KAAK,CAAC;EAErDV,SAAS,CAAC,MAAM;IACZS,QAAQ,CAACL,UAAU,CAAC,CAAC,CAAC;EAC1B,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIE,OAAA,CAACP,KAAK,CAACa,QAAQ;IAAAC,QAAA,eACXP,OAAA;MAAKQ,SAAS,EAAC,WAAW;MAAAD,QAAA,EACrBH,KAAK,CAACK,GAAG,CAAC,CAACC,IAAI,EAAEC,GAAG,kBACjBX,OAAA;QAAAO,QAAA,gBACIP,OAAA;UAAAO,QAAA,EAAKG,IAAI,CAACE;QAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACrBhB,OAAA;UAAAO,QAAA,EAAIG,IAAI,CAACO;QAAS;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA,GAFjBN,IAAI,CAACQ,OAAO;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGjB,CACR;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACM,CAAC;AAGzB,CAAC;AAAAd,EAAA,CArBKD,IAAI;EAAA,QACWL,WAAW,EACdC,WAAW;AAAA;AAAAsB,EAAA,GAFvBlB,IAAI;AAuBV,eAAeA,IAAI;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}