{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\woori\\\\Desktop\\\\Memo-Jung\\\\coursing\\\\client\\\\src\\\\pages\\\\Main.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContents, fetchPosts } from \"../redux/actions/postActions\";\nimport Maps from \"../component/maps\";\nimport 'swiper/css';\nimport '../css/Main.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Main = () => {\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post_list\",\n      children: posts.map(post =>\n      /*#__PURE__*/\n      //게시글의 정보를 가져와 차례로 로드함\n      _jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: post.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: post.user_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handlePrev,\n          className: \"swipe_bt\",\n          children: \"<\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 25\n        }, this), contents.filter(content => content.post_id === post.post_id) //게시글에 맞는 내용을 필터링\n        .reverse().slice(curIdx, curIdx + 1).map(content => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: content.img_src,\n            style: {\n              width: '20%',\n              height: '40vh'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 41\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              width: '30%',\n              height: '400px'\n            },\n            children: /*#__PURE__*/_jsxDEV(Maps, {\n              lat: content.lat,\n              lon: content.lon\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 45\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 41\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: content.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 41\n          }, this)]\n        }, content.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 37\n        }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleNext,\n          className: \"swipe_bt\",\n          children: \">\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 25\n        }, this)]\n      }, post.post_id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n};\n_c = Main;\nexport default Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["React","useEffect","useState","useDispatch","useSelector","fetchContents","fetchPosts","Maps","jsxDEV","_jsxDEV","Main","Fragment","children","className","posts","map","post","title","fileName","_jsxFileName","lineNumber","columnNumber","user_name","onClick","handlePrev","contents","filter","content","post_id","reverse","slice","curIdx","src","img_src","style","width","height","lat","lon","id","handleNext","_c","$RefreshReg$"],"sources":["C:/Users/woori/Desktop/Memo-Jung/coursing/client/src/pages/Main.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { fetchContents, fetchPosts } from \"../redux/actions/postActions\";\r\nimport Maps from \"../component/maps\";\r\nimport 'swiper/css';\r\nimport '../css/Main.css';\r\n\r\nconst Main = () => {\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"post_list\">\r\n                {posts.map((post) => (  //게시글의 정보를 가져와 차례로 로드함\r\n                    <div key={post.post_id}>\r\n                        <h3>{post.title}</h3>\r\n                        <p>{post.user_name}</p>\r\n                        <button onClick={handlePrev} className=\"swipe_bt\">{\"<\"}</button>\r\n                        {contents.filter(content => content.post_id === post.post_id)   //게시글에 맞는 내용을 필터링\r\n                                .reverse()\r\n                                .slice(curIdx, curIdx + 1)\r\n                                .map(content => (\r\n                                    <div key={content.id}>\r\n                                        <img\r\n                                            src={content.img_src}\r\n                                            style={{ width: '20%', height: '40vh' }}\r\n                                        />\r\n                                        <div style={{ width: '30%', height: '400px' }}>\r\n                                            <Maps lat={content.lat} lon={content.lon} />\r\n                                        </div>\r\n                                        <p>{content.content}</p>\r\n                                    </div>\r\n                                ))\r\n                            }\r\n                        <button onClick={handleNext} className=\"swipe_bt\">{\">\"}</button>\r\n\r\n                    </div>\r\n                ))}\r\n\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n\r\n}\r\n\r\nexport default Main;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}