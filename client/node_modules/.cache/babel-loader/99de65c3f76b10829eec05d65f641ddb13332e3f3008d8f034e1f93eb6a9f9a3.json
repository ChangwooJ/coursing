{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\woori\\\\Desktop\\\\Memo-Jung\\\\coursing\\\\client\\\\src\\\\component\\\\postList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContents, fetchPosts } from \"../redux/actions/postActions\";\nimport Maps from \"../component/maps\";\nimport '../css/Main.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostList = () => {\n  _s();\n  const dispatch = useDispatch();\n  const posts = useSelector(state => state.posts.posts);\n  const contents = useSelector(state => state.contents.contents);\n  const [curIdx, setCurIdx] = useState(0); //현재 슬라이드의 인덱스\n\n  useEffect(() => {\n    dispatch(fetchPosts());\n    dispatch(fetchContents());\n  }, [dispatch]);\n  const handleNext = () => {\n    setCurIdx(prevIdx => prevIdx + 1);\n  };\n  const handlePrev = () => {\n    setCurIdx(prevIdx => prevIdx - 1);\n  };\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: posts.map(post =>\n    /*#__PURE__*/\n    //게시글의 정보를 가져와 차례로 로드함\n    _jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: post.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: post.user_name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handlePrev,\n        className: \"swipe_bt\",\n        children: \"<\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 21\n      }, this), contents.filter(content => content.post_id === post.post_id) //게시글에 맞는 내용을 필터링\n      .reverse().slice(curIdx, curIdx + 1).map(content => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: content.img_src,\n          style: {\n            width: '20%',\n            height: '40vh'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 33\n        }, this), content.img_src, console.log(content.img), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: '30%',\n            height: '400px'\n          },\n          children: /*#__PURE__*/_jsxDEV(Maps, {\n            lat: content.lat,\n            lon: content.lon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 37\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: content.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 33\n        }, this)]\n      }, content.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 29\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleNext,\n        className: \"swipe_bt\",\n        children: \">\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }, this)]\n    }, post.post_id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n_s(PostList, \"T8hBR+1h+OWaOJaeIvoPZAYQAEg=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n_c = PostList;\nexport default PostList;\nvar _c;\n$RefreshReg$(_c, \"PostList\");","map":{"version":3,"names":["React","useEffect","useState","useDispatch","useSelector","fetchContents","fetchPosts","Maps","jsxDEV","_jsxDEV","PostList","_s","dispatch","posts","state","contents","curIdx","setCurIdx","handleNext","prevIdx","handlePrev","Fragment","children","map","post","title","fileName","_jsxFileName","lineNumber","columnNumber","user_name","onClick","className","filter","content","post_id","reverse","slice","src","img_src","style","width","height","console","log","img","lat","lon","id","_c","$RefreshReg$"],"sources":["C:/Users/woori/Desktop/Memo-Jung/coursing/client/src/component/postList.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { fetchContents, fetchPosts } from \"../redux/actions/postActions\";\r\nimport Maps from \"../component/maps\";\r\nimport '../css/Main.css';\r\n\r\nconst PostList = () => {\r\n    const dispatch = useDispatch();\r\n    const posts = useSelector(state => state.posts.posts);\r\n    const contents = useSelector(state => state.contents.contents);\r\n    const [curIdx, setCurIdx] = useState(0);    //현재 슬라이드의 인덱스\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchPosts());\r\n        dispatch(fetchContents());\r\n    }, [dispatch]);\r\n\r\n    const handleNext = () => {\r\n        setCurIdx((prevIdx) => (prevIdx + 1));\r\n    }\r\n\r\n    const handlePrev = () => {\r\n        setCurIdx((prevIdx) => (prevIdx - 1));\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {posts.map((post) => (  //게시글의 정보를 가져와 차례로 로드함\r\n                <div key={post.post_id}>\r\n                    <h3>{post.title}</h3>\r\n                    <p>{post.user_name}</p>\r\n                    <button onClick={handlePrev} className=\"swipe_bt\">{\"<\"}</button>\r\n                    {contents.filter(content => content.post_id === post.post_id)   //게시글에 맞는 내용을 필터링\r\n                        .reverse()\r\n                        .slice((curIdx), curIdx + 1)\r\n                        .map(content => (\r\n                            <div key={content.id}>\r\n                                <img\r\n                                    src={content.img_src}\r\n                                    style={{ width: '20%', height: '40vh' }}\r\n                                />\r\n                                {content.img_src}\r\n                                {console.log(content.img)}\r\n                                <div style={{ width: '30%', height: '400px' }}>\r\n                                    <Maps lat={content.lat} lon={content.lon} />\r\n                                </div>\r\n                                <p>{content.content}</p>\r\n                            </div>\r\n                        ))\r\n                    }\r\n                    <button onClick={handleNext} className=\"swipe_bt\">{\">\"}</button>\r\n\r\n                </div>\r\n            ))}\r\n        </React.Fragment>\r\n    )\r\n\r\n}\r\n\r\nexport default PostList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}