{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useEffect, useMemo, useContext } from \"react\";\nimport axios from \"axios\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchLists } from \"../redux/actions/listActions\";\nimport { AuthContext } from '../context/AuthContext';\nconst {\n  kakao\n} = window;\nconst PlanInfo = ({\n  setPositions,\n  con\n}) => {\n  _s();\n  const api_key = process.env.REACT_APP_API_KEY;\n  const dispatch = useDispatch();\n  const allLists = useSelector(state => state.lists.lists);\n  const {\n    isAuthenticated,\n    userInfo\n  } = useContext(AuthContext);\n  const lists = useMemo(() => {\n    //useEffect에 객체 전달로 인한 리랜더링 방지\n    if (isAuthenticated && userInfo) {\n      return allLists.filter(list => list.user_content_id === userInfo[0].user_id);\n    }\n    return [];\n  }, [allLists, isAuthenticated, userInfo]);\n\n  //console.log(allLists);\n\n  useEffect(() => {\n    dispatch(fetchLists());\n  }, [dispatch]);\n  useEffect(() => {\n    if (lists.length > 0) {\n      fetchLocations(lists);\n    }\n  }, [lists]);\n  const fetchLocations = async lists => {\n    const locationsPromises = lists.map(async list => {\n      if (list.list_address) {\n        try {\n          const encodedAddress = encodeURIComponent(list.list_address);\n          const loc_res = await axios({\n            method: \"GET\",\n            url: `https://dapi.kakao.com/v2/local/search/address.json?query=${encodedAddress}`,\n            headers: {\n              Authorization: `KakaoAK ${api_key}`\n            }\n          });\n          if (loc_res.data && loc_res.data.documents.length > 0) {\n            const document = loc_res.data.documents[0];\n            //console.log(list);\n            return {\n              latlng: new kakao.maps.LatLng(document.y, document.x),\n              name: document.road_address ? document.road_address.building_name : '',\n              title: list.user_content_title,\n              memo: list.memo,\n              list_id: list.list_id,\n              category: list.cate_img_src,\n              start_time: list.start_time,\n              end_time: list.end_time\n            };\n          }\n        } catch (error) {\n          console.error(\"위치 검색 오류:\", error);\n        }\n      }\n      return null;\n    });\n    const resolvedLocations = await Promise.all(locationsPromises);\n    const filteredLocations = resolvedLocations.filter(location => location !== null);\n    setPositions(filteredLocations);\n  };\n  return null;\n};\n_s(PlanInfo, \"GFvABcP7fo8X3ON7mbvC8tqTvoQ=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = PlanInfo;\nexport default PlanInfo;\nvar _c;\n$RefreshReg$(_c, \"PlanInfo\");","map":{"version":3,"names":["React","useEffect","useMemo","useContext","axios","useDispatch","useSelector","fetchLists","AuthContext","kakao","window","PlanInfo","setPositions","con","_s","api_key","process","env","REACT_APP_API_KEY","dispatch","allLists","state","lists","isAuthenticated","userInfo","filter","list","user_content_id","user_id","length","fetchLocations","locationsPromises","map","list_address","encodedAddress","encodeURIComponent","loc_res","method","url","headers","Authorization","data","documents","document","latlng","maps","LatLng","y","x","name","road_address","building_name","title","user_content_title","memo","list_id","category","cate_img_src","start_time","end_time","error","console","resolvedLocations","Promise","all","filteredLocations","location","_c","$RefreshReg$"],"sources":["C:/Users/woori/Desktop/Memo-Jung/coursing/client/src/component/plan_info.js"],"sourcesContent":["import React, { useEffect, useMemo, useContext } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { fetchLists } from \"../redux/actions/listActions\";\r\nimport { AuthContext } from '../context/AuthContext';\r\n\r\nconst { kakao } = window;\r\n\r\nconst PlanInfo = ({setPositions, con}) => {\r\n    const api_key = process.env.REACT_APP_API_KEY;\r\n    const dispatch = useDispatch();\r\n    const allLists = useSelector((state) => state.lists.lists);\r\n    const { isAuthenticated, userInfo } = useContext(AuthContext);\r\n\r\n    const lists = useMemo(()=>{     //useEffect에 객체 전달로 인한 리랜더링 방지\r\n        if(isAuthenticated && userInfo){\r\n            return allLists.filter(list => list.user_content_id === userInfo[0].user_id);\r\n        }\r\n        return [];\r\n    }, [allLists, isAuthenticated, userInfo]);\r\n\r\n    //console.log(allLists);\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchLists());\r\n    }, [dispatch]);\r\n\r\n    useEffect(() => {\r\n        if (lists.length > 0) {\r\n            fetchLocations(lists);\r\n        }\r\n    }, [lists]);\r\n\r\n    const fetchLocations = async (lists) => {\r\n        const locationsPromises = lists.map(async (list) => {\r\n            if (list.list_address) {\r\n                try {\r\n                    const encodedAddress = encodeURIComponent(list.list_address);\r\n                    const loc_res = await axios({\r\n                        method: \"GET\",\r\n                        url: `https://dapi.kakao.com/v2/local/search/address.json?query=${encodedAddress}`,\r\n                        headers: {\r\n                            Authorization: `KakaoAK ${api_key}`,\r\n                        },\r\n                    });\r\n\r\n                    if (loc_res.data && loc_res.data.documents.length > 0) {\r\n                        const document = loc_res.data.documents[0];\r\n                        //console.log(list);\r\n                        return { \r\n                            latlng: new kakao.maps.LatLng(document.y, document.x),\r\n                            name: document.road_address ? document.road_address.building_name : '',\r\n                            title: list.user_content_title,\r\n                            memo: list.memo,\r\n                            list_id: list.list_id,\r\n                            category: list.cate_img_src,\r\n                            start_time: list.start_time,\r\n                            end_time: list.end_time\r\n                        };\r\n                    }\r\n                } catch (error) {\r\n                    console.error(\"위치 검색 오류:\", error);\r\n                }\r\n            }\r\n            return null;\r\n        });\r\n\r\n        const resolvedLocations = await Promise.all(locationsPromises);\r\n        const filteredLocations = resolvedLocations.filter(location => location !== null);\r\n        setPositions(filteredLocations);\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\nexport default PlanInfo;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}