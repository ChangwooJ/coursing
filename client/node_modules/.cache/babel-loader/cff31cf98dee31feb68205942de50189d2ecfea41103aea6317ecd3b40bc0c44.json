{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\woori\\\\Desktop\\\\Memo-Jung\\\\coursing\\\\client\\\\src\\\\component\\\\postMap.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from \"react\";\nimport useFetchMaps from \"./fetchMaps\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  kakao\n} = window;\nconst PostMap = ({\n  content\n}) => {\n  _s();\n  const mapContainerRef = useRef(null);\n  const {\n    option,\n    markers\n  } = useFetchMaps({\n    content: content\n  });\n  useEffect(() => {\n    if (mapContainerRef.current && option.center && markers.length > 0) {\n      const map = new kakao.maps.Map(mapContainerRef.current, option);\n      markers.forEach(marker => marker.setMap(map));\n    }\n  }, [option, markers]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"map_wrap\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main_map\",\n      ref: mapContainerRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n};\n_s(PostMap, \"+AW38TO4tbGWWyFw7uk+1WKCHDw=\", false, function () {\n  return [useFetchMaps];\n});\n_c = PostMap;\nexport default PostMap;\nvar _c;\n$RefreshReg$(_c, \"PostMap\");","map":{"version":3,"names":["React","useEffect","useRef","useFetchMaps","jsxDEV","_jsxDEV","kakao","window","PostMap","content","_s","mapContainerRef","option","markers","current","center","length","map","maps","Map","forEach","marker","setMap","className","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/woori/Desktop/Memo-Jung/coursing/client/src/component/postMap.js"],"sourcesContent":["import React, { useEffect, useRef } from \"react\";\r\nimport useFetchMaps from \"./fetchMaps\";\r\n\r\nconst { kakao } = window;\r\n\r\nconst PostMap = ({content}) => {\r\n    const mapContainerRef = useRef(null);\r\n    const { option, markers } = useFetchMaps({ content: content });\r\n\r\n    useEffect(() => {\r\n        if (mapContainerRef.current && option.center && markers.length > 0) {\r\n            const map = new kakao.maps.Map(mapContainerRef.current, option);\r\n            markers.forEach(marker => marker.setMap(map));\r\n        }\r\n    }, [option, markers]);\r\n\r\n\r\n    return (\r\n        <div className=\"map_wrap\">\r\n            <div className=\"main_map\" ref={mapContainerRef} ></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PostMap;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,OAAOC,YAAY,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAM;EAAEC;AAAM,CAAC,GAAGC,MAAM;AAExB,MAAMC,OAAO,GAAGA,CAAC;EAACC;AAAO,CAAC,KAAK;EAAAC,EAAA;EAC3B,MAAMC,eAAe,GAAGT,MAAM,CAAC,IAAI,CAAC;EACpC,MAAM;IAAEU,MAAM;IAAEC;EAAQ,CAAC,GAAGV,YAAY,CAAC;IAAEM,OAAO,EAAEA;EAAQ,CAAC,CAAC;EAE9DR,SAAS,CAAC,MAAM;IACZ,IAAIU,eAAe,CAACG,OAAO,IAAIF,MAAM,CAACG,MAAM,IAAIF,OAAO,CAACG,MAAM,GAAG,CAAC,EAAE;MAChE,MAAMC,GAAG,GAAG,IAAIX,KAAK,CAACY,IAAI,CAACC,GAAG,CAACR,eAAe,CAACG,OAAO,EAAEF,MAAM,CAAC;MAC/DC,OAAO,CAACO,OAAO,CAACC,MAAM,IAAIA,MAAM,CAACC,MAAM,CAACL,GAAG,CAAC,CAAC;IACjD;EACJ,CAAC,EAAE,CAACL,MAAM,EAAEC,OAAO,CAAC,CAAC;EAGrB,oBACIR,OAAA;IAAKkB,SAAS,EAAC,UAAU;IAAAC,QAAA,eACrBnB,OAAA;MAAKkB,SAAS,EAAC,UAAU;MAACE,GAAG,EAAEd;IAAgB;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtD,CAAC;AAEd,CAAC;AAAAnB,EAAA,CAjBKF,OAAO;EAAA,QAEmBL,YAAY;AAAA;AAAA2B,EAAA,GAFtCtB,OAAO;AAmBb,eAAeA,OAAO;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}