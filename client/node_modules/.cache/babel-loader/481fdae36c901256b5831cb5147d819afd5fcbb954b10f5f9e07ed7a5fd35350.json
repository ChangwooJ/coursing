{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\woori\\\\Desktop\\\\Memo-Jung\\\\coursing\\\\client\\\\src\\\\component\\\\place\\\\review.js\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Review = ({\n  place_id\n}) => {\n  _s();\n  const dispatch = useDispatch();\n  const [reviews, setReviews] = useState(\"\");\n  const [loading, setLoading] = useState(true);\n  const [sum, setSum] = useState(0);\n  const userlists = useSelector(state => state.users.users);\n  useEffect(() => {\n    dispatch(fetchPosts());\n    dispatch(fetchContents());\n    dispatch(fetchUsers());\n  }, [dispatch]);\n  useEffect(() => {\n    const fetchPlaceData = async () => {\n      try {\n        setLoading(true);\n        const response = await axios.get(`http://localhost:8000/api/reviews/${place_id}`);\n        setReviews(response.data);\n      } catch (err) {\n        console.log(err.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    if (place_id) {\n      fetchPlaceData();\n    }\n  }, [place_id]);\n  useEffect(() => {\n    const ratingAvg = () => {\n      var sum = 0;\n      reviews.map(rev => {\n        sum += rev.rating;\n      });\n      sum = sum / reviews.length;\n      setSum(sum);\n    };\n    if (reviews) {\n      ratingAvg();\n    }\n  }, [reviews]);\n  console.log(reviews);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"place_review\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rating\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"review_rating\",\n        children: [\"\\u2B50 \", sum]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"review_count\",\n        children: [reviews.length, \"\\uAC1C\\uC758 \\uB9AC\\uBDF0\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), reviews.slice(0, 3).map(review => {\n      /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"review_wrap\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"review_top\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n};\n_s(Review, \"uqOtN3y/Zea/lHxQczSsl04rX6I=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = Review;\nexport default Review;\nvar _c;\n$RefreshReg$(_c, \"Review\");","map":{"version":3,"names":["axios","React","useEffect","useState","useDispatch","useSelector","jsxDEV","_jsxDEV","Review","place_id","_s","dispatch","reviews","setReviews","loading","setLoading","sum","setSum","userlists","state","users","fetchPosts","fetchContents","fetchUsers","fetchPlaceData","response","get","data","err","console","log","message","ratingAvg","map","rev","rating","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","slice","review","_c","$RefreshReg$"],"sources":["C:/Users/woori/Desktop/Memo-Jung/coursing/client/src/component/place/review.js"],"sourcesContent":["import axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nconst Review = ({place_id}) => {\r\n    const dispatch = useDispatch();\r\n    const [reviews, setReviews] = useState(\"\");\r\n    const [loading, setLoading] = useState(true);\r\n    const [sum, setSum] = useState(0);\r\n    const userlists = useSelector(state => state.users.users);\r\n\r\n    \r\n    useEffect(() => {\r\n        dispatch(fetchPosts());\r\n        dispatch(fetchContents());\r\n        dispatch(fetchUsers());\r\n    }, [dispatch]);\r\n\r\n    useEffect(() => {\r\n        const fetchPlaceData = async () => {\r\n            try {\r\n                setLoading(true);\r\n                const response = await axios.get(`http://localhost:8000/api/reviews/${place_id}`);\r\n                setReviews(response.data);\r\n            } catch (err) {\r\n                console.log(err.message);\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        if (place_id) {\r\n            fetchPlaceData();\r\n        }\r\n    }, [place_id]);\r\n\r\n    useEffect(() => {\r\n        const ratingAvg = () => {\r\n            var sum = 0;\r\n            reviews.map((rev) => {\r\n                sum += rev.rating;\r\n            });\r\n            sum = sum / reviews.length;\r\n            setSum(sum);\r\n        }\r\n\r\n        if(reviews) {\r\n            ratingAvg();\r\n        }\r\n    }, [reviews])\r\nconsole.log(reviews);\r\n    return (\r\n        <div className=\"place_review\">\r\n            <div className=\"rating\">\r\n                <p className=\"review_rating\">⭐ {sum}</p>\r\n                <p className=\"review_count\">{reviews.length}개의 리뷰</p>\r\n            </div>\r\n            {reviews.slice(0, 3).map((review) => {\r\n                <div className=\"review_wrap\">\r\n                    <div className=\"review_top\">\r\n\r\n                    </div>\r\n                </div>\r\n\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Review;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}