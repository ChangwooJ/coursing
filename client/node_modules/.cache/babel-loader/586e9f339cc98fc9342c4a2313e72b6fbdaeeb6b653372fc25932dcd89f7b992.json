{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\woori\\\\Desktop\\\\Memo-Jung\\\\coursing\\\\client\\\\src\\\\component\\\\maps.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  kakao\n} = window;\nconst Maps = ({\n  lat,\n  lon,\n  id\n}) => {\n  _s();\n  const mapContainerRef = useRef(null); // useRef를 사용하여 DOM 요소를 참조\n\n  var add_res = axios({\n    method: \"GET\",\n    url: `https://dapi.kakao.com/v2/local/geo/coord2address.json?x=${lat}&y=${lon}&input_coord=WGS84`,\n    headers: {\n      Authorization: `KakaoAK 59be56c1b793f6c69842484efa84e201`\n    }\n  });\n  var address = encodeURIComponent(add_res.address_name);\n  const loc_response = axios({\n    method: \"GET\",\n    url: `https://dapi.kakao.com/v2/local/search/address.json?analyze_type=similar&query=${encodedAddress}`,\n    headers: {\n      Authorization: `KakaoAK ${apiKey}`\n    }\n  });\n  useEffect(() => {\n    if (mapContainerRef.current) {\n      // mapContainerRef.current가 유효할 때만 실행\n      const container = mapContainerRef.current;\n      const options = {\n        center: new kakao.maps.LatLng(lat, lon),\n        level: 3\n      };\n      var map = new kakao.maps.Map(container, options); // 카카오 지도 초기화\n\n      var markerPosition = new kakao.maps.LatLng(lat, lon);\n\n      // 마커를 생성합니다\n      var marker = new kakao.maps.Marker({\n        position: markerPosition\n      });\n\n      // 마커가 지도 위에 표시되도록 설정합니다\n      marker.setMap(map);\n    }\n  }, [lat, lon]); // lat과 lon이 변경될 때마다 effect 실행\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: id,\n    ref: mapContainerRef,\n    style: {\n      width: '100%',\n      height: '100%'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 12\n  }, this); // ref를 div에 설정\n};\n_s(Maps, \"JDsoK+vCj+KIdyRFXV6E+3zLK1c=\");\n_c = Maps;\nexport default Maps;\nvar _c;\n$RefreshReg$(_c, \"Maps\");","map":{"version":3,"names":["React","useEffect","useRef","axios","jsxDEV","_jsxDEV","kakao","window","Maps","lat","lon","id","_s","mapContainerRef","add_res","method","url","headers","Authorization","address","encodeURIComponent","address_name","loc_response","encodedAddress","apiKey","current","container","options","center","maps","LatLng","level","map","Map","markerPosition","marker","Marker","position","setMap","ref","style","width","height","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/woori/Desktop/Memo-Jung/coursing/client/src/component/maps.js"],"sourcesContent":["import React, { useEffect, useRef } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst { kakao } = window;\r\n\r\nconst Maps = ({ lat, lon, id }) => {\r\n    const mapContainerRef = useRef(null);  // useRef를 사용하여 DOM 요소를 참조\r\n\r\n    var add_res = axios({\r\n        method: \"GET\",\r\n        url: `https://dapi.kakao.com/v2/local/geo/coord2address.json?x=${lat}&y=${lon}&input_coord=WGS84`,\r\n        headers: {\r\n            Authorization: `KakaoAK 59be56c1b793f6c69842484efa84e201`,\r\n        },\r\n    });\r\n    var address = encodeURIComponent(add_res.address_name);\r\n\r\n    const loc_response =  axios({\r\n        method: \"GET\",\r\n        url: `https://dapi.kakao.com/v2/local/search/address.json?analyze_type=similar&query=${encodedAddress}`,\r\n        headers: {\r\n          Authorization: `KakaoAK ${apiKey}`,\r\n        },\r\n      });\r\n\r\n    useEffect(() => {\r\n        if (mapContainerRef.current) {  // mapContainerRef.current가 유효할 때만 실행\r\n            const container = mapContainerRef.current;\r\n            const options = {\r\n                center: new kakao.maps.LatLng(lat, lon),\r\n                level: 3\r\n            };\r\n            var map = new kakao.maps.Map(container, options);  // 카카오 지도 초기화\r\n\r\n            var markerPosition = new kakao.maps.LatLng(lat, lon);\r\n\r\n            // 마커를 생성합니다\r\n            var marker = new kakao.maps.Marker({\r\n                position: markerPosition\r\n            });\r\n\r\n            // 마커가 지도 위에 표시되도록 설정합니다\r\n            marker.setMap(map);\r\n        }\r\n    }, [lat, lon]);  // lat과 lon이 변경될 때마다 effect 실행\r\n\r\n    return <div id={id} ref={mapContainerRef} style={{ width: '100%', height: '100%' }}></div>;  // ref를 div에 설정\r\n};\r\n\r\nexport default Maps;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAM;EAAEC;AAAM,CAAC,GAAGC,MAAM;AAExB,MAAMC,IAAI,GAAGA,CAAC;EAAEC,GAAG;EAAEC,GAAG;EAAEC;AAAG,CAAC,KAAK;EAAAC,EAAA;EAC/B,MAAMC,eAAe,GAAGX,MAAM,CAAC,IAAI,CAAC,CAAC,CAAE;;EAEvC,IAAIY,OAAO,GAAGX,KAAK,CAAC;IAChBY,MAAM,EAAE,KAAK;IACbC,GAAG,EAAE,4DAA4DP,GAAG,MAAMC,GAAG,oBAAoB;IACjGO,OAAO,EAAE;MACLC,aAAa,EAAE;IACnB;EACJ,CAAC,CAAC;EACF,IAAIC,OAAO,GAAGC,kBAAkB,CAACN,OAAO,CAACO,YAAY,CAAC;EAEtD,MAAMC,YAAY,GAAInB,KAAK,CAAC;IACxBY,MAAM,EAAE,KAAK;IACbC,GAAG,EAAE,kFAAkFO,cAAc,EAAE;IACvGN,OAAO,EAAE;MACPC,aAAa,EAAE,WAAWM,MAAM;IAClC;EACF,CAAC,CAAC;EAEJvB,SAAS,CAAC,MAAM;IACZ,IAAIY,eAAe,CAACY,OAAO,EAAE;MAAG;MAC5B,MAAMC,SAAS,GAAGb,eAAe,CAACY,OAAO;MACzC,MAAME,OAAO,GAAG;QACZC,MAAM,EAAE,IAAItB,KAAK,CAACuB,IAAI,CAACC,MAAM,CAACrB,GAAG,EAAEC,GAAG,CAAC;QACvCqB,KAAK,EAAE;MACX,CAAC;MACD,IAAIC,GAAG,GAAG,IAAI1B,KAAK,CAACuB,IAAI,CAACI,GAAG,CAACP,SAAS,EAAEC,OAAO,CAAC,CAAC,CAAE;;MAEnD,IAAIO,cAAc,GAAG,IAAI5B,KAAK,CAACuB,IAAI,CAACC,MAAM,CAACrB,GAAG,EAAEC,GAAG,CAAC;;MAEpD;MACA,IAAIyB,MAAM,GAAG,IAAI7B,KAAK,CAACuB,IAAI,CAACO,MAAM,CAAC;QAC/BC,QAAQ,EAAEH;MACd,CAAC,CAAC;;MAEF;MACAC,MAAM,CAACG,MAAM,CAACN,GAAG,CAAC;IACtB;EACJ,CAAC,EAAE,CAACvB,GAAG,EAAEC,GAAG,CAAC,CAAC,CAAC,CAAE;;EAEjB,oBAAOL,OAAA;IAAKM,EAAE,EAAEA,EAAG;IAAC4B,GAAG,EAAE1B,eAAgB;IAAC2B,KAAK,EAAE;MAAEC,KAAK,EAAE,MAAM;MAAEC,MAAM,EAAE;IAAO;EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC,CAAC,CAAE;AACjG,CAAC;AAAClC,EAAA,CA1CIJ,IAAI;AAAAuC,EAAA,GAAJvC,IAAI;AA4CV,eAAeA,IAAI;AAAC,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}