{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\woori\\\\Desktop\\\\Memo-Jung\\\\coursing\\\\client\\\\src\\\\pages\\\\CreatePost.js\",\n  _s = $RefreshSig$();\nimport React, { useMemo, useState } from \"react\";\nimport TitleSelect from \"../component/etc/titleSelect\";\nimport NewPost from \"../component/CreatePosts/newContent\";\nimport \"../css/CreatePost.css\";\nimport PreviewPost from \"../component/CreatePosts/previewPost\";\nimport axios from \"axios\";\nimport { useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreatePostPage = () => {\n  _s();\n  const [ContentId, setContentId] = useState(1);\n  const [view, setView] = useState(true);\n  const [newCon, setNewCon] = useState(true);\n  const [state, setState] = useState(false); //기존/새 일정 구분\n  const [contents, setContents] = useState([]);\n  const [firstCon, setFirstCon] = useState(false);\n  const post_contents = useSelector(state => state.contents.contents);\n  const content = useMemo(() => contents.filter(c => c.post_id === post.post_id), [contents, post.post_id]);\n  const handleNewPost = state => {\n    setView(false);\n    setState(state);\n    if (state) {\n      setFirstCon(true);\n      setNewCon(false);\n    }\n  };\n  const handleSaveContent = (data, image) => {\n    const contentWithImage = {\n      ...data,\n      image\n    };\n    setContents(prevContents => {\n      const updatedContents = [...prevContents, contentWithImage];\n      return updatedContents.sort((a, b) => a.start_time - b.start_time);\n    });\n    setFirstCon(true);\n  };\n  const handleDeleteContent = con => {\n    setContents(prevContents => prevContents.filter(item => item !== con));\n  };\n  const handleUploadPost = async postId => {\n    console.log(\"Received postId in CreatePostPage:\", contents);\n    try {\n      for (const content of contents) {\n        if (content.image) {\n          const formData = new FormData();\n          formData.append('image', content.image); // 폼에 이미지 파일 추가\n\n          const response = await axios.post('http://localhost:8000/api/upload_image', formData, {\n            headers: {\n              'Content-Type': 'multipart/form-data'\n            }\n          });\n          content._post_id = postId;\n          content.img_src = response.data.img_src;\n          content.cate_id += 1;\n          const fin_upload = await axios.post('http://localhost:8000/api/fin_upload', {\n            _post_id: content._post_id,\n            content: content.content,\n            img_src: content.img_src,\n            address: content.address,\n            cate_id: content.cate_id,\n            start_time: content.start_time,\n            end_time: content.end_time,\n            name: content.name\n          });\n        }\n      }\n    } catch (error) {\n      console.error('Error uploading post: ', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [view && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"create_post_root\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"create_post myplan\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\uB0B4 \\uC77C\\uC815\\uC73C\\uB85C \\uB9CC\\uB4E4\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\\"\\uAE30\\uC874\\uC758 \\uB0B4 \\uC77C\\uC815\\uC744 \\uC120\\uD0DD\\uD574\\uC11C \\uC0C8\\uB85C\\uC6B4 \\uAE00\\uC744 \\uC791\\uC131\\uD560 \\uC218 \\uC788\\uC2B5\\uB2C8\\uB2E4.\\\"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(TitleSelect, {\n          setContentId: setContentId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"myplan_bt create_post_bt\",\n          onClick: () => handleNewPost(true),\n          children: \"\\uB2E4\\uC74C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"create_post newplan\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\uC0C8 \\uC77C\\uC815\\uC73C\\uB85C \\uB9CC\\uB4E4\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\\"\\uC0C8\\uB85C\\uC6B4 \\uC77C\\uC815\\uC744 \\uC0DD\\uC131\\uD558\\uC5EC \\uC0C8\\uB85C\\uC6B4 \\uAE00\\uC744 \\uC791\\uC131\\uD560 \\uC218 \\uC788\\uC2B5\\uB2C8\\uB2E4.\\\"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"newplan_bt create_post_bt\",\n          onClick: () => handleNewPost(false),\n          children: \"\\uB2E4\\uC74C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }, this), !view && firstCon && /*#__PURE__*/_jsxDEV(PreviewPost, {\n      content: contents,\n      setNewCon: setNewCon,\n      onDeleteContent: handleDeleteContent,\n      onUploadPost: handleUploadPost\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }, this), !view && newCon && /*#__PURE__*/_jsxDEV(NewPost, {\n      setNewCon: setNewCon,\n      onSaveContent: handleSaveContent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 9\n  }, this);\n};\n_s(CreatePostPage, \"gq1AddSjjdowwm25Pw6YoKxJW/c=\", false, function () {\n  return [useSelector];\n});\n_c = CreatePostPage;\nexport default CreatePostPage;\nvar _c;\n$RefreshReg$(_c, \"CreatePostPage\");","map":{"version":3,"names":["React","useMemo","useState","TitleSelect","NewPost","PreviewPost","axios","useSelector","jsxDEV","_jsxDEV","CreatePostPage","_s","ContentId","setContentId","view","setView","newCon","setNewCon","state","setState","contents","setContents","firstCon","setFirstCon","post_contents","content","filter","c","post_id","post","handleNewPost","handleSaveContent","data","image","contentWithImage","prevContents","updatedContents","sort","a","b","start_time","handleDeleteContent","con","item","handleUploadPost","postId","console","log","formData","FormData","append","response","headers","_post_id","img_src","cate_id","fin_upload","address","end_time","name","error","Fragment","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onDeleteContent","onUploadPost","onSaveContent","_c","$RefreshReg$"],"sources":["C:/Users/woori/Desktop/Memo-Jung/coursing/client/src/pages/CreatePost.js"],"sourcesContent":["import React, { useMemo, useState } from \"react\";\r\nimport TitleSelect from \"../component/etc/titleSelect\";\r\nimport NewPost from \"../component/CreatePosts/newContent\";\r\n\r\nimport \"../css/CreatePost.css\";\r\nimport PreviewPost from \"../component/CreatePosts/previewPost\";\r\nimport axios from \"axios\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst CreatePostPage = () => {\r\n    const [ContentId, setContentId] = useState(1);\r\n    const [view, setView] = useState(true);\r\n    const [newCon, setNewCon] = useState(true);\r\n    const [state, setState] = useState(false);  //기존/새 일정 구분\r\n    const [contents, setContents] = useState([]);\r\n    const [firstCon, setFirstCon] = useState(false);\r\n    const post_contents = useSelector(state => state.contents.contents);\r\n    const content = useMemo(() => contents.filter(c => c.post_id === post.post_id), [contents, post.post_id]);\r\n\r\n    const handleNewPost = (state) => {\r\n        setView(false);\r\n        setState(state);\r\n        if(state) {\r\n            setFirstCon(true);\r\n            setNewCon(false);\r\n        }\r\n    }\r\n\r\n    const handleSaveContent = (data, image) => {\r\n        const contentWithImage = {\r\n            ...data,\r\n            image\r\n        };\r\n        setContents(prevContents => {\r\n            const updatedContents = [...prevContents, contentWithImage];\r\n            return updatedContents.sort((a, b) => a.start_time - b.start_time);\r\n        });\r\n        setFirstCon(true);\r\n    }\r\n\r\n    const handleDeleteContent = (con) => {\r\n        setContents(prevContents => prevContents.filter(item => item !== con));\r\n    }\r\n\r\n    const handleUploadPost = async (postId) => {\r\n        console.log(\"Received postId in CreatePostPage:\", contents);\r\n        try {\r\n            for (const content of contents) {\r\n                if (content.image) {\r\n                    const formData = new FormData();\r\n                    formData.append('image', content.image); // 폼에 이미지 파일 추가\r\n    \r\n                    const response = await axios.post('http://localhost:8000/api/upload_image', formData, {\r\n                        headers: {\r\n                            'Content-Type': 'multipart/form-data'\r\n                        }\r\n                    });\r\n                    \r\n                    content._post_id = postId;\r\n                    content.img_src = response.data.img_src;\r\n                    content.cate_id += 1;\r\n\r\n                    const fin_upload = await axios.post('http://localhost:8000/api/fin_upload', {\r\n                        _post_id: content._post_id,\r\n                        content: content.content,\r\n                        img_src: content.img_src,\r\n                        address: content.address,\r\n                        cate_id: content.cate_id,\r\n                        start_time: content.start_time,\r\n                        end_time: content.end_time,\r\n                        name: content.name\r\n                    });\r\n                }\r\n            }\r\n        } catch (error) {\r\n            console.error('Error uploading post: ', error);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {view && (\r\n                <div className=\"create_post_root\">\r\n                    <div className=\"create_post myplan\">\r\n                        <h3>내 일정으로 만들기</h3>\r\n                        <p>\"기존의 내 일정을 선택해서 새로운 글을 작성할 수 있습니다.\"</p>\r\n                        <TitleSelect setContentId={setContentId} />\r\n                        <button className=\"myplan_bt create_post_bt\" onClick={() => handleNewPost(true)}>다음</button>\r\n                    </div>\r\n                    <div className=\"create_post newplan\">\r\n                        <h3>새 일정으로 만들기</h3>\r\n                        <p>\"새로운 일정을 생성하여 새로운 글을 작성할 수 있습니다.\"</p>\r\n                        <button className=\"newplan_bt create_post_bt\" onClick={() => handleNewPost(false)}>다음</button>\r\n                    </div>\r\n                </div>\r\n            )}\r\n            {!view && firstCon && (\r\n                <PreviewPost \r\n                    content={contents} \r\n                    setNewCon={setNewCon} \r\n                    onDeleteContent={handleDeleteContent} \r\n                    onUploadPost={handleUploadPost}\r\n                />\r\n            )}\r\n            {!view && newCon && (\r\n                <NewPost setNewCon={setNewCon} onSaveContent={handleSaveContent}/>\r\n            )}\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default CreatePostPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}