{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\woori\\\\Desktop\\\\Memo-Jung\\\\coursing\\\\client\\\\src\\\\pages\\\\Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport \"../css/Chat.css\";\n\n// 서버와 소켓 연결\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:8000/');\nconst Chat = ({\n  userId,\n  targetUserId\n}) => {\n  _s();\n  const {\n    user_id\n  } = useParams();\n  const [message, setMessage] = useState('');\n  const [chatLog, setChatLog] = useState([]);\n  const [roomId, setRoomId] = useState('');\n  useEffect(() => {\n    // 유저 간의 고유한 채팅방 ID 설정\n    const newRoomId = [userId, targetUserId].sort().join('_');\n    setRoomId(newRoomId);\n\n    // 서버로 방 참여 요청\n    socket.emit('joinRoom', {\n      userId,\n      targetUserId\n    });\n\n    // 메시지 수신\n    socket.on('receiveMessage', receivedMessage => {\n      setChatLog(prevChatLog => [...prevChatLog, receivedMessage]);\n    });\n    return () => {\n      socket.off('receiveMessage'); // 컴포넌트 언마운트 시 이벤트 해제\n    };\n  }, [userId, targetUserId]);\n\n  // 메시지 전송\n  const sendMessage = () => {\n    if (message.trim()) {\n      // 특정 방으로 메시지 전송\n      socket.emit('sendMessage', {\n        roomId,\n        message\n      });\n      setMessage(''); // 메시지 입력 필드 초기화\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat_wrap\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [targetUserId, \"\\uB2D8\\uACFC\\uC758 \\uCC44\\uD305\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat_log\",\n      children: chatLog.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: msg\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: message,\n      onChange: e => setMessage(e.target.value),\n      placeholder: \"\\uBA54\\uC2DC\\uC9C0\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sendMessage,\n      children: \"\\uC804\\uC1A1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(Chat, \"JtSgTO1ZDMxy4MJSfjYh0io1mnM=\", true);\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useEffect","io","jsxDEV","_jsxDEV","socket","Chat","userId","targetUserId","_s","user_id","useParams","message","setMessage","chatLog","setChatLog","roomId","setRoomId","newRoomId","sort","join","emit","on","receivedMessage","prevChatLog","off","sendMessage","trim","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","index","type","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/woori/Desktop/Memo-Jung/coursing/client/src/pages/Chat.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport io from 'socket.io-client';\r\nimport \"../css/Chat.css\";\r\n\r\n// 서버와 소켓 연결\r\nconst socket = io('http://localhost:8000/');\r\n\r\nconst Chat = ({ userId, targetUserId }) => {\r\n  const { user_id } = useParams();\r\n  const [message, setMessage] = useState('');\r\n  const [chatLog, setChatLog] = useState([]);\r\n  const [roomId, setRoomId] = useState('');\r\n\r\n  useEffect(() => {\r\n    // 유저 간의 고유한 채팅방 ID 설정\r\n    const newRoomId = [userId, targetUserId].sort().join('_');\r\n    setRoomId(newRoomId);\r\n\r\n    // 서버로 방 참여 요청\r\n    socket.emit('joinRoom', { userId, targetUserId });\r\n\r\n    // 메시지 수신\r\n    socket.on('receiveMessage', (receivedMessage) => {\r\n      setChatLog((prevChatLog) => [...prevChatLog, receivedMessage]);\r\n    });\r\n\r\n    return () => {\r\n      socket.off('receiveMessage'); // 컴포넌트 언마운트 시 이벤트 해제\r\n    };\r\n  }, [userId, targetUserId]);\r\n\r\n  // 메시지 전송\r\n  const sendMessage = () => {\r\n    if (message.trim()) {\r\n      // 특정 방으로 메시지 전송\r\n      socket.emit('sendMessage', { roomId, message });\r\n      setMessage(''); // 메시지 입력 필드 초기화\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"chat_wrap\">\r\n      <h2>{targetUserId}님과의 채팅</h2>\r\n      <div className=\"chat_log\">\r\n        {chatLog.map((msg, index) => (\r\n          <div key={index}>{msg}</div>\r\n        ))}\r\n      </div>\r\n      <input\r\n        type=\"text\"\r\n        value={message}\r\n        onChange={(e) => setMessage(e.target.value)}\r\n        placeholder=\"메시지를 입력하세요...\"\r\n      />\r\n      <button onClick={sendMessage}>전송</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chat;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}