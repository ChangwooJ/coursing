{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\woori\\\\Desktop\\\\Memo-Jung\\\\coursing\\\\client\\\\src\\\\pages\\\\MyList.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { FETCH_LISTS } from \"../redux/actions/type\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MyList = () => {\n  _s();\n  const dispatch = useDispatch();\n  const lists = useSelector(state => state.lists.posts);\n  return /*#__PURE__*/_jsxDEV(\"mylist\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }, this);\n};\n_s(MyList, \"a7wPGhoh8w51hW1eaup8tJaqECg=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = MyList;\nexport default MyList;\nvar _c;\n$RefreshReg$(_c, \"MyList\");","map":{"version":3,"names":["React","useDispatch","useSelector","FETCH_LISTS","jsxDEV","_jsxDEV","MyList","_s","dispatch","lists","state","posts","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/woori/Desktop/Memo-Jung/coursing/client/src/pages/MyList.js"],"sourcesContent":["import React from \"react\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { FETCH_LISTS } from \"../redux/actions/type\";\r\n\r\nconst MyList = () => {\r\n    const dispatch = useDispatch();\r\n    const lists = useSelector(state => state.lists.posts);\r\n\r\n\r\n    return(\r\n        <mylist>\r\n\r\n        </mylist>\r\n    )\r\n}\r\n\r\nexport default MyList;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,WAAW,QAAQ,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAMC,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAC9B,MAAMQ,KAAK,GAAGP,WAAW,CAACQ,KAAK,IAAIA,KAAK,CAACD,KAAK,CAACE,KAAK,CAAC;EAGrD,oBACIN,OAAA;IAAAO,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEQ,CAAC;AAEjB,CAAC;AAAAR,EAAA,CAVKD,MAAM;EAAA,QACSL,WAAW,EACdC,WAAW;AAAA;AAAAc,EAAA,GAFvBV,MAAM;AAYZ,eAAeA,MAAM;AAAC,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}