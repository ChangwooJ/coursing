{"ast":null,"code":"import axios from 'axios';\nimport { FETCH_LISTS } from './type';\nexport const fetchLists = () => {\n  return dispatch => {\n    axios.get(`http://localhost:8000/api/my_list`).then(response => {\n      const lists = response.data;\n      dispatch({\n        type: FETCH_LISTS,\n        payload: lists\n      });\n    });\n  };\n};\nexport const fetchTitles = () => {\n  return dispatch => {\n    axios.get('http://localhost:8000/api/title').then(response => {\n      const titles = response.data;\n      dispatch({\n        type\n      });\n    });\n  };\n};","map":{"version":3,"names":["axios","FETCH_LISTS","fetchLists","dispatch","get","then","response","lists","data","type","payload","fetchTitles","titles"],"sources":["C:/Users/woori/Desktop/Memo-Jung/coursing/client/src/redux/actions/listActions.js"],"sourcesContent":["import axios from 'axios';\r\nimport { FETCH_LISTS } from './type';\r\n\r\nexport const fetchLists = () => {\r\n  return dispatch => {\r\n    axios.get(`http://localhost:8000/api/my_list`)\r\n      .then(response => {\r\n        const lists = response.data;\r\n        dispatch({\r\n          type: FETCH_LISTS,\r\n          payload: lists\r\n        });\r\n      })\r\n  };\r\n};\r\n\r\nexport const fetchTitles = () => {\r\n  return dispatch => {\r\n    axios.get('http://localhost:8000/api/title')\r\n      .then(response => {\r\n        const titles = response.data;\r\n        dispatch({\r\n          type\r\n        })\r\n      })\r\n  }\r\n}"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,QAAQ;AAEpC,OAAO,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAC9B,OAAOC,QAAQ,IAAI;IACjBH,KAAK,CAACI,GAAG,CAAC,mCAAmC,CAAC,CAC3CC,IAAI,CAACC,QAAQ,IAAI;MAChB,MAAMC,KAAK,GAAGD,QAAQ,CAACE,IAAI;MAC3BL,QAAQ,CAAC;QACPM,IAAI,EAAER,WAAW;QACjBS,OAAO,EAAEH;MACX,CAAC,CAAC;IACJ,CAAC,CAAC;EACN,CAAC;AACH,CAAC;AAED,OAAO,MAAMI,WAAW,GAAGA,CAAA,KAAM;EAC/B,OAAOR,QAAQ,IAAI;IACjBH,KAAK,CAACI,GAAG,CAAC,iCAAiC,CAAC,CACzCC,IAAI,CAACC,QAAQ,IAAI;MAChB,MAAMM,MAAM,GAAGN,QAAQ,CAACE,IAAI;MAC5BL,QAAQ,CAAC;QACPM;MACF,CAAC,CAAC;IACJ,CAAC,CAAC;EACN,CAAC;AACH,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}