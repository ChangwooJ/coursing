{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\woori\\\\Desktop\\\\Memo-Jung\\\\coursing\\\\client\\\\src\\\\component\\\\list_map.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState, useContext } from \"react\";\nimport Search from \"./search\";\nimport \"../css/list_map.css\";\nimport { PositionsContext } from '../context/PositionsContext';\nimport { LocationContext } from '../context/LocationContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  kakao\n} = window;\nconst ListMap = () => {\n  _s();\n  const mapContainerRef = useRef(null);\n  const [map, setMap] = useState(null);\n  const [button, setButton] = useState(\">\");\n  const [temp, setTemp] = useState(null);\n  const [btPosition, setBtPosition] = useState('left');\n  const [searchPosition, setSearchPosition] = useState(null);\n  const [loc, setLoc] = useState([]);\n  const {\n    positions\n  } = useContext(PositionsContext);\n  const {\n    location\n  } = useContext(LocationContext);\n  console.log(positions);\n  useEffect(() => {\n    if (positions.length > 0) {\n      initializeMap(positions);\n    }\n  }, [positions]);\n  useEffect(() => {\n    if (searchPosition !== null) {\n      moveSearchPosition();\n    }\n  }, [searchPosition]);\n  const initializeMap = positions => {\n    if (mapContainerRef.current && positions.length > 0) {\n      const container = mapContainerRef.current;\n      const options = {\n        center: positions[0].latlng,\n        level: 4\n      };\n      const newMap = new kakao.maps.Map(container, options);\n      positions.forEach(position => {\n        const marker = new kakao.maps.Marker({\n          position: position.latlng,\n          clickable: true\n        });\n        marker.setMap(newMap);\n      });\n      setMap(newMap);\n    }\n  };\n  const viewPlan = index => {\n    map.panTo(positions[index].latlng);\n    //panTo에 option을 줄 수 있음. 화면 이동시 해당 요소로의 확대(level의 변경)가 필요해보임\n    setSelPosition(positions[index]);\n  };\n  const transition = () => {\n    if (selPosition !== null) {\n      setTemp(selPosition);\n      setSelPosition(null);\n    } else {\n      setSelPosition(temp);\n    }\n  };\n  const moveSearchPosition = () => {\n    map.panTo(searchPosition);\n\n    // 마커 생성\n    var marker = new kakao.maps.Marker({\n      position: searchPosition,\n      clickable: true\n    });\n    marker.setMap(map);\n    var iwContent = `<div>${loc.place_name}</div>`,\n      iwRemoveable = true;\n\n    // 인포윈도우 생성\n    var infowindow = new kakao.maps.InfoWindow({\n      content: iwContent,\n      removable: iwRemoveable\n    });\n    infowindow.open(map, marker);\n  };\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map\",\n      ref: mapContainerRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Search, {\n      setLoc: setLoc,\n      setSearchPosition: setSearchPosition\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 9\n  }, this);\n};\n_s(ListMap, \"KT69OXkNl3EH1ZRkixbwj3OXfmg=\");\n_c = ListMap;\nexport default ListMap;\nvar _c;\n$RefreshReg$(_c, \"ListMap\");","map":{"version":3,"names":["React","useEffect","useRef","useState","useContext","Search","PositionsContext","LocationContext","jsxDEV","_jsxDEV","kakao","window","ListMap","_s","mapContainerRef","map","setMap","button","setButton","temp","setTemp","btPosition","setBtPosition","searchPosition","setSearchPosition","loc","setLoc","positions","location","console","log","length","initializeMap","moveSearchPosition","current","container","options","center","latlng","level","newMap","maps","Map","forEach","position","marker","Marker","clickable","viewPlan","index","panTo","setSelPosition","transition","selPosition","iwContent","place_name","iwRemoveable","infowindow","InfoWindow","content","removable","open","Fragment","children","className","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/woori/Desktop/Memo-Jung/coursing/client/src/component/list_map.js"],"sourcesContent":["import React, { useEffect, useRef, useState, useContext } from \"react\";\r\nimport Search from \"./search\";\r\nimport \"../css/list_map.css\";\r\nimport { PositionsContext } from '../context/PositionsContext';\r\nimport { LocationContext } from '../context/LocationContext';\r\n\r\nconst { kakao } = window;\r\n\r\nconst ListMap = () => {\r\n    const mapContainerRef = useRef(null);\r\n    const [map, setMap] = useState(null);\r\n    const [button, setButton] = useState(\">\");\r\n    const [temp, setTemp] = useState(null);\r\n    const [btPosition, setBtPosition] = useState('left');\r\n    const [searchPosition, setSearchPosition] = useState(null);\r\n    const [loc, setLoc] = useState([]);\r\n    const { positions } = useContext(PositionsContext);\r\n    const { location } = useContext(LocationContext);\r\n\r\n    console.log(positions);\r\n\r\n    useEffect(() => {\r\n        if (positions.length > 0) {\r\n            initializeMap(positions);\r\n        }\r\n    }, [positions]);\r\n\r\n    useEffect(() => {\r\n        if (searchPosition !== null) {\r\n            moveSearchPosition();\r\n        }\r\n    }, [searchPosition]);\r\n\r\n    const initializeMap = (positions) => {\r\n        if (mapContainerRef.current && positions.length > 0) {\r\n            const container = mapContainerRef.current;\r\n            const options = {\r\n                center: positions[0].latlng,\r\n                level: 4\r\n            };\r\n            const newMap = new kakao.maps.Map(container, options);\r\n\r\n            positions.forEach((position) => {\r\n                const marker = new kakao.maps.Marker({\r\n                    position: position.latlng,\r\n                    clickable: true\r\n                });\r\n                marker.setMap(newMap);\r\n            });\r\n\r\n            setMap(newMap);\r\n        }\r\n    };\r\n\r\n    const viewPlan = (index) => {\r\n        map.panTo(positions[index].latlng);\r\n        //panTo에 option을 줄 수 있음. 화면 이동시 해당 요소로의 확대(level의 변경)가 필요해보임\r\n        setSelPosition(positions[index]);\r\n    }\r\n\r\n    const transition = () => {\r\n        if (selPosition !== null) {\r\n            setTemp(selPosition);\r\n            setSelPosition(null);\r\n        } else {\r\n            setSelPosition(temp);\r\n        }\r\n    }\r\n\r\n    const moveSearchPosition = () => {\r\n        map.panTo(searchPosition);\r\n\r\n        // 마커 생성\r\n        var marker = new kakao.maps.Marker({\r\n            position: searchPosition,\r\n            clickable: true\r\n        });\r\n\r\n        marker.setMap(map);\r\n\r\n        var iwContent = `<div>${loc.place_name}</div>`,\r\n            iwRemoveable = true;\r\n\r\n        // 인포윈도우 생성\r\n        var infowindow = new kakao.maps.InfoWindow({\r\n            content: iwContent,\r\n            removable: iwRemoveable\r\n        });\r\n\r\n        infowindow.open(map, marker);\r\n\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"map\" ref={mapContainerRef}></div>\r\n            <Search setLoc={setLoc} setSearchPosition={setSearchPosition} />\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default ListMap;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}