{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\woori\\\\Desktop\\\\Memo-Jung\\\\coursing\\\\client\\\\src\\\\pages\\\\Main.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContents, fetchPosts } from \"../redux/actions/postActions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Main = () => {\n  _s();\n  const dispatch = useDispatch();\n  const posts = useSelector(state => state.posts.posts);\n  const contents = useSelector(state => state.contents.contents);\n  console.log(contents);\n  useEffect(() => {\n    dispatch(fetchPosts());\n    dispatch(fetchContents());\n  }, []);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post_list\",\n      children: posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: post.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: post.user_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 25\n        }, this), contents.filter(content => content.post_id === post.post_id).re.map(contents => /*#__PURE__*/_jsxDEV(\"p\", {\n          children: contents.content\n        }, contents.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 29\n        }, this))]\n      }, post.post_id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n};\n_s(Main, \"9FnH/41YrCYKt0PA0MZpkwx+Sk0=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n_c = Main;\nexport default Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["React","useEffect","useState","useDispatch","useSelector","fetchContents","fetchPosts","jsxDEV","_jsxDEV","Main","_s","dispatch","posts","state","contents","console","log","Fragment","children","className","map","post","title","fileName","_jsxFileName","lineNumber","columnNumber","user_name","filter","content","post_id","re","id","_c","$RefreshReg$"],"sources":["C:/Users/woori/Desktop/Memo-Jung/coursing/client/src/pages/Main.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { fetchContents, fetchPosts } from \"../redux/actions/postActions\";\r\n\r\nconst Main = () => {\r\n    const dispatch = useDispatch();\r\n    const posts = useSelector(state => state.posts.posts);\r\n    const contents = useSelector(state => state.contents.contents);\r\n    console.log(contents);\r\n    useEffect(() => {\r\n        dispatch(fetchPosts());\r\n        dispatch(fetchContents());\r\n    }, []);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"post_list\">\r\n                {posts.map((post) => (\r\n                    <div key={post.post_id}>\r\n                        <h3>{post.title}</h3>\r\n                        <p>{post.user_name}</p>\r\n                        {contents.filter(content => content.post_id === post.post_id)\r\n                        .re\r\n                        .map(contents => (\r\n                            <p key={contents.id}>{contents.content}</p>\r\n                        ))}\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n\r\n}\r\n\r\nexport default Main;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,aAAa,EAAEC,UAAU,QAAQ,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzE,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACf,MAAMC,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAC9B,MAAMS,KAAK,GAAGR,WAAW,CAACS,KAAK,IAAIA,KAAK,CAACD,KAAK,CAACA,KAAK,CAAC;EACrD,MAAME,QAAQ,GAAGV,WAAW,CAACS,KAAK,IAAIA,KAAK,CAACC,QAAQ,CAACA,QAAQ,CAAC;EAC9DC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;EACrBb,SAAS,CAAC,MAAM;IACZU,QAAQ,CAACL,UAAU,CAAC,CAAC,CAAC;IACtBK,QAAQ,CAACN,aAAa,CAAC,CAAC,CAAC;EAC7B,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIG,OAAA,CAACR,KAAK,CAACiB,QAAQ;IAAAC,QAAA,eACXV,OAAA;MAAKW,SAAS,EAAC,WAAW;MAAAD,QAAA,EACrBN,KAAK,CAACQ,GAAG,CAAEC,IAAI,iBACZb,OAAA;QAAAU,QAAA,gBACIV,OAAA;UAAAU,QAAA,EAAKG,IAAI,CAACC;QAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACrBlB,OAAA;UAAAU,QAAA,EAAIG,IAAI,CAACM;QAAS;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,EACtBZ,QAAQ,CAACc,MAAM,CAACC,OAAO,IAAIA,OAAO,CAACC,OAAO,KAAKT,IAAI,CAACS,OAAO,CAAC,CAC5DC,EAAE,CACFX,GAAG,CAACN,QAAQ,iBACTN,OAAA;UAAAU,QAAA,EAAsBJ,QAAQ,CAACe;QAAO,GAA9Bf,QAAQ,CAACkB,EAAE;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAuB,CAC7C,CAAC;MAAA,GAPIL,IAAI,CAACS,OAAO;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAQjB,CACR;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACM,CAAC;AAGzB,CAAC;AAAAhB,EAAA,CA5BKD,IAAI;EAAA,QACWN,WAAW,EACdC,WAAW,EACRA,WAAW;AAAA;AAAA6B,EAAA,GAH1BxB,IAAI;AA8BV,eAAeA,IAAI;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}