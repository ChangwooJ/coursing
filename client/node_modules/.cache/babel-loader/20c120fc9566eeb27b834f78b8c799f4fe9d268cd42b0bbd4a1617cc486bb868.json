{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\woori\\\\Desktop\\\\Memo-Jung\\\\coursing\\\\client\\\\src\\\\pages\\\\Main.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport PostList from \"../component/postList\";\nimport '../css/Main.css';\nimport \"../css/mylist.css\";\nimport { useDispatch } from \"react-redux\";\nimport { fetchPosts } from \"../redux/actions/postActions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Main = () => {\n  _s();\n  //post리스트 받아서 map으로 반복. postlist컴포넌트에 post마다의 content전달 혹은 post_id만 전달.\n  const dispatch = useDispatch();\n  const posts = useSelector(state => state.posts.posts);\n  useEffect(() => {\n    const fetchPostList = () => {\n      dispatch(fetchPosts());\n    };\n    fetchPostList();\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: posts.map(post => {\n      /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"postlist_wrap\",\n        children: /*#__PURE__*/_jsxDEV(PostList, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n_s(Main, \"ENUDqdKwIx40U6eZCutSSehqnb4=\", true, function () {\n  return [useDispatch];\n});\n_c = Main;\nexport default Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["React","useEffect","PostList","useDispatch","fetchPosts","jsxDEV","_jsxDEV","Main","_s","dispatch","posts","useSelector","state","fetchPostList","Fragment","children","map","post","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/woori/Desktop/Memo-Jung/coursing/client/src/pages/Main.js"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport PostList from \"../component/postList\";\r\nimport '../css/Main.css';\r\nimport \"../css/mylist.css\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { fetchPosts } from \"../redux/actions/postActions\";\r\n\r\nconst Main = () => {\r\n    //post리스트 받아서 map으로 반복. postlist컴포넌트에 post마다의 content전달 혹은 post_id만 전달.\r\n    const dispatch = useDispatch();\r\n    const posts = useSelector(state => state.posts.posts);\r\n\r\n\r\n    useEffect(() => {\r\n        const fetchPostList = () => {\r\n            dispatch(fetchPosts());\r\n        }\r\n        fetchPostList();\r\n    }, [dispatch]);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {posts.map(post => {\r\n                <div className=\"postlist_wrap\">\r\n                    <PostList />\r\n                </div>\r\n            })}\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Main;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAO,iBAAiB;AACxB,OAAO,mBAAmB;AAC1B,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,UAAU,QAAQ,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1D,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACf;EACA,MAAMC,QAAQ,GAAGN,WAAW,CAAC,CAAC;EAC9B,MAAMO,KAAK,GAAGC,WAAW,CAACC,KAAK,IAAIA,KAAK,CAACF,KAAK,CAACA,KAAK,CAAC;EAGrDT,SAAS,CAAC,MAAM;IACZ,MAAMY,aAAa,GAAGA,CAAA,KAAM;MACxBJ,QAAQ,CAACL,UAAU,CAAC,CAAC,CAAC;IAC1B,CAAC;IACDS,aAAa,CAAC,CAAC;EACnB,CAAC,EAAE,CAACJ,QAAQ,CAAC,CAAC;EAEd,oBACIH,OAAA,CAACN,KAAK,CAACc,QAAQ;IAAAC,QAAA,EACVL,KAAK,CAACM,GAAG,CAACC,IAAI,IAAI;MACf,aAAAX,OAAA;QAAKY,SAAS,EAAC,eAAe;QAAAH,QAAA,eAC1BT,OAAA,CAACJ,QAAQ;UAAAiB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACX,CAAC;IACV,CAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACU,CAAC;AAEzB,CAAC;AAAAd,EAAA,CAtBKD,IAAI;EAAA,QAEWJ,WAAW;AAAA;AAAAoB,EAAA,GAF1BhB,IAAI;AAwBV,eAAeA,IAAI;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}