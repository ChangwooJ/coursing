{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\woori\\\\Desktop\\\\Memo-Jung\\\\coursing\\\\client\\\\src\\\\component\\\\etc\\\\titleSelect.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect, useMemo, useState } from \"react\";\nimport { AuthContext } from \"../../context/AuthContext\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchTitles } from \"../../redux/actions/listActions\";\nimport \"../../css/titleSelect.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TitleSelect = ({\n  setContentId,\n  newTitle\n}) => {\n  _s();\n  const dispatch = useDispatch();\n  const titles = useSelector(state => state.titles.titles);\n  const {\n    isAuthenticated,\n    userInfo,\n    loading\n  } = useContext(AuthContext);\n  const [initTitle, setInitTitle] = useState(\"일정을 선택해주세요\");\n  const [view, setView] = useState(false); //드롭다운 상태관리\n\n  const titleList = useMemo(() => {\n    //useEffect에 객체 전달로 인한 리랜더링 방지, user_content_title객체\n    if (isAuthenticated && userInfo) {\n      return titles.filter(title => title._user_id === userInfo[0].user_id);\n    }\n    return [];\n  }, [titles, isAuthenticated, userInfo]);\n  useEffect(() => {\n    if (titleList.length > 0) {\n      setInitTitle(titleList[0].user_content_title);\n    }\n  }, [titleList]);\n  useEffect(() => {\n    dispatch(fetchTitles());\n  }, [dispatch]);\n  const handlePlan = (user_content_title, user_content_id) => {\n    setInitTitle(user_content_title);\n    setContentId(user_content_id);\n  };\n  const drop = () => {\n    return titleList.map(tL => /*#__PURE__*/_jsxDEV(\"li\", {\n      className: \"title_li\",\n      onClick: () => handlePlan(tL.user_content_title, tL.user_content_id),\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: tL.user_content_title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)\n    }, tL.user_content_id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this));\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: `banner_title ${view ? \"clicked\" : \"\"}`,\n    onClick: () => setView(!view),\n    children: [initTitle, view && drop(), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"down\",\n      children: \"\\u25BC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n};\n_s(TitleSelect, \"mRuIoA9/3xoF52bekx2YGiUEJwI=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = TitleSelect;\nexport default TitleSelect;\nvar _c;\n$RefreshReg$(_c, \"TitleSelect\");","map":{"version":3,"names":["React","useContext","useEffect","useMemo","useState","AuthContext","useDispatch","useSelector","fetchTitles","jsxDEV","_jsxDEV","TitleSelect","setContentId","newTitle","_s","dispatch","titles","state","isAuthenticated","userInfo","loading","initTitle","setInitTitle","view","setView","titleList","filter","title","_user_id","user_id","length","user_content_title","handlePlan","user_content_id","drop","map","tL","className","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/woori/Desktop/Memo-Jung/coursing/client/src/component/etc/titleSelect.js"],"sourcesContent":["import React, { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport { AuthContext } from \"../../context/AuthContext\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { fetchTitles } from \"../../redux/actions/listActions\";\r\n\r\nimport \"../../css/titleSelect.css\";\r\n\r\nconst TitleSelect = ({setContentId, newTitle}) => {\r\n    const dispatch = useDispatch();\r\n    const titles = useSelector((state) => state.titles.titles);\r\n    const { isAuthenticated, userInfo, loading } = useContext(AuthContext);\r\n    const [initTitle, setInitTitle] = useState(\"일정을 선택해주세요\");\r\n    const [view, setView] = useState(false);    //드롭다운 상태관리\r\n\r\n    const titleList = useMemo(() => {     //useEffect에 객체 전달로 인한 리랜더링 방지, user_content_title객체\r\n        if (isAuthenticated && userInfo) {\r\n            return titles.filter(title => title._user_id === userInfo[0].user_id);\r\n        }\r\n        return [];\r\n    }, [titles, isAuthenticated, userInfo]);\r\n\r\n    useEffect(() => {\r\n        if (titleList.length > 0) {\r\n            setInitTitle(titleList[0].user_content_title);\r\n        }\r\n    }, [titleList]);\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchTitles());\r\n    }, [dispatch]);\r\n\r\n    const handlePlan = (user_content_title, user_content_id) => {\r\n        setInitTitle(user_content_title);\r\n        setContentId(user_content_id);\r\n    }\r\n\r\n    const drop = () => {\r\n        return titleList.map(tL => (\r\n            <li\r\n                className=\"title_li\"\r\n                key={tL.user_content_id}\r\n                onClick={() => handlePlan(tL.user_content_title, tL.user_content_id)}\r\n            >\r\n                <button>{tL.user_content_title}</button>\r\n            </li>\r\n        ))\r\n    }\r\n\r\n    if(loading){\r\n        return <div>Loading...</div>;\r\n    }\r\n\r\n    return (\r\n        <ul\r\n            className={`banner_title ${view ? \"clicked\" : \"\"}`}\r\n            onClick={() => setView(!view)}\r\n        >\r\n            {initTitle}\r\n            {view && drop()}\r\n            <p className=\"down\">▼</p>\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default TitleSelect;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}