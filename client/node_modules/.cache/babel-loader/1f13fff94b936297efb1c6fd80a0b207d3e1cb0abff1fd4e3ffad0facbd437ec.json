{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\woori\\\\Desktop\\\\Memo-Jung\\\\coursing\\\\client\\\\src\\\\component\\\\list_map.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState, useContext } from \"react\";\nimport Search from \"./search\";\nimport { PositionsContext } from '../context/PositionsContext';\nimport { LocationContext } from '../context/LocationContext';\nimport useFetchMaps from \"./fetchMaps\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  kakao\n} = window;\nconst ListMap = () => {\n  _s();\n  const mapContainerRef = useRef(null);\n  const [map, setMap] = useState(null);\n  const [searchPosition, setSearchPosition] = useState(null);\n  const [loc, setLoc] = useState([]);\n  const {\n    positions\n  } = useContext(PositionsContext);\n  const {\n    location\n  } = useContext(LocationContext);\n  const {\n    option,\n    markers\n  } = useFetchMaps({\n    positions\n  });\n  console.log(\"pos: \", positions);\n  console.log(\"loc: \", location);\n  /*useEffect(() => {\r\n      if (positions.length > 0) {\r\n          initializeMap(positions);\r\n      }\r\n  }, [positions]);*/\n\n  useEffect(() => {\n    if (location !== null && map) {\n      movePlanPosition();\n    }\n  }, [location]);\n  useEffect(() => {\n    if (searchPosition !== null && map) {\n      moveSearchPosition();\n    }\n  }, [searchPosition]);\n  useEffect(() => {\n    if (mapContainerRef.current && option.center && markers.length > 0) {\n      const map = new kakao.maps.Map(mapContainerRef.current, option);\n      mapRef.current = map;\n      markers.forEach(marker => marker.setMap(map)); //마커 설정\n      overlays.forEach(overlay => overlay.setMap(null)); //오버레이 설정\n    }\n  }, [option, markers]);\n\n  /*const initializeMap = (positions) => {\r\n      if (mapContainerRef.current && positions.length > 0) {\r\n          const container = mapContainerRef.current;\r\n          const options = {\r\n              center: positions[0].latlng,\r\n              level: 4\r\n          };\r\n          const newMap = new kakao.maps.Map(container, options);\r\n            positions.forEach((position) => {\r\n              const marker = new kakao.maps.Marker({\r\n                  position: position.latlng,\r\n                  clickable: true\r\n              });\r\n              marker.setMap(newMap);\r\n          });\r\n            setMap(newMap);\r\n      }\r\n  };*/\n\n  const movePlanPosition = () => {\n    map.panTo(location);\n  };\n  const moveSearchPosition = () => {\n    map.panTo(searchPosition);\n\n    // 마커 생성\n    var marker = new kakao.maps.Marker({\n      position: searchPosition,\n      clickable: true\n    });\n    marker.setMap(map);\n    var iwContent = `<div>${loc.place_name}</div>`,\n      iwRemoveable = true;\n\n    // 인포윈도우 생성\n    var infowindow = new kakao.maps.InfoWindow({\n      content: iwContent,\n      removable: iwRemoveable\n    });\n    infowindow.open(map, marker);\n  };\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map\",\n      ref: mapContainerRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Search, {\n      setLoc: setLoc,\n      setSearchPosition: setSearchPosition\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 9\n  }, this);\n};\n_s(ListMap, \"RbPkq6EUPH2VvFPoWZXAA140mwQ=\", false, function () {\n  return [useFetchMaps];\n});\n_c = ListMap;\nexport default ListMap;\nvar _c;\n$RefreshReg$(_c, \"ListMap\");","map":{"version":3,"names":["React","useEffect","useRef","useState","useContext","Search","PositionsContext","LocationContext","useFetchMaps","jsxDEV","_jsxDEV","kakao","window","ListMap","_s","mapContainerRef","map","setMap","searchPosition","setSearchPosition","loc","setLoc","positions","location","option","markers","console","log","movePlanPosition","moveSearchPosition","current","center","length","maps","Map","mapRef","forEach","marker","overlays","overlay","panTo","Marker","position","clickable","iwContent","place_name","iwRemoveable","infowindow","InfoWindow","content","removable","open","Fragment","children","className","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/woori/Desktop/Memo-Jung/coursing/client/src/component/list_map.js"],"sourcesContent":["import React, { useEffect, useRef, useState, useContext } from \"react\";\r\nimport Search from \"./search\";\r\nimport { PositionsContext } from '../context/PositionsContext';\r\nimport { LocationContext } from '../context/LocationContext';\r\nimport useFetchMaps from \"./fetchMaps\";\r\n\r\nconst { kakao } = window;\r\n\r\nconst ListMap = () => {\r\n    const mapContainerRef = useRef(null);\r\n    const [map, setMap] = useState(null);\r\n    const [searchPosition, setSearchPosition] = useState(null);\r\n    const [loc, setLoc] = useState([]);\r\n    const { positions } = useContext(PositionsContext);\r\n    const { location } = useContext(LocationContext);\r\n    const { option, markers } = useFetchMaps({positions});\r\nconsole.log(\"pos: \", positions);\r\nconsole.log(\"loc: \", location);\r\n    /*useEffect(() => {\r\n        if (positions.length > 0) {\r\n            initializeMap(positions);\r\n        }\r\n    }, [positions]);*/\r\n\r\n    useEffect(() => {\r\n        if(location !== null && map) {\r\n            movePlanPosition();\r\n        }\r\n    }, [location]);\r\n\r\n    useEffect(() => {\r\n        if (searchPosition !== null && map) {\r\n            moveSearchPosition();\r\n        }\r\n    }, [searchPosition]);\r\n\r\n    useEffect(() => {\r\n        if (mapContainerRef.current && option.center && markers.length > 0) {\r\n            const map = new kakao.maps.Map(mapContainerRef.current, option);\r\n            mapRef.current = map;\r\n            markers.forEach(marker => marker.setMap(map));  //마커 설정\r\n            overlays.forEach(overlay => overlay.setMap(null));  //오버레이 설정\r\n        }\r\n    }, [option, markers]);\r\n\r\n    /*const initializeMap = (positions) => {\r\n        if (mapContainerRef.current && positions.length > 0) {\r\n            const container = mapContainerRef.current;\r\n            const options = {\r\n                center: positions[0].latlng,\r\n                level: 4\r\n            };\r\n            const newMap = new kakao.maps.Map(container, options);\r\n\r\n            positions.forEach((position) => {\r\n                const marker = new kakao.maps.Marker({\r\n                    position: position.latlng,\r\n                    clickable: true\r\n                });\r\n                marker.setMap(newMap);\r\n            });\r\n\r\n            setMap(newMap);\r\n        }\r\n    };*/\r\n\r\n    const movePlanPosition = () => {\r\n        map.panTo(location);\r\n    }\r\n\r\n    const moveSearchPosition = () => {\r\n        map.panTo(searchPosition);\r\n\r\n        // 마커 생성\r\n        var marker = new kakao.maps.Marker({\r\n            position: searchPosition,\r\n            clickable: true\r\n        });\r\n\r\n        marker.setMap(map);\r\n\r\n        var iwContent = `<div>${loc.place_name}</div>`,\r\n            iwRemoveable = true;\r\n\r\n        // 인포윈도우 생성\r\n        var infowindow = new kakao.maps.InfoWindow({\r\n            content: iwContent,\r\n            removable: iwRemoveable\r\n        });\r\n\r\n        infowindow.open(map, marker);\r\n\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"map\" ref={mapContainerRef}></div>\r\n            <Search setLoc={setLoc} setSearchPosition={setSearchPosition} />\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default ListMap;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}