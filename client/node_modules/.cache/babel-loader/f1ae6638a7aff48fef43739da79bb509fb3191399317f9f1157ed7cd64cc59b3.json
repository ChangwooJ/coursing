{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\woori\\\\Desktop\\\\Memo-Jung\\\\coursing\\\\client\\\\src\\\\component\\\\CreatePosts\\\\previewPost.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from \"react\";\nimport useFetchMaps from \"../etc/fetchMaps\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  kakao\n} = window;\nconst PreviewPost = ({\n  content\n}) => {\n  _s();\n  const mapContainerRef = useRef(null);\n  const {\n    option,\n    markers,\n    overlays\n  } = useFetchMaps({\n    content: content\n  });\n  useEffect(() => {\n    if (mapContainerRef.current && option.center && markers.length > 0) {\n      const map = new kakao.maps.Map(mapContainerRef.current, option);\n      markers.forEach(marker => marker.setMap(map)); //마커 설정\n      overlays.forEach(overlay => overlay.setMap(null)); //오버레이 설정\n    }\n    console.log(\"0\");\n  }, [option, markers]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pre\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map\",\n      ref: mapContainerRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n};\n_s(PreviewPost, \"u9331iUf/S5LfhTzajT3gVO2pq4=\", false, function () {\n  return [useFetchMaps];\n});\n_c = PreviewPost;\nexport default PreviewPost;\nvar _c;\n$RefreshReg$(_c, \"PreviewPost\");","map":{"version":3,"names":["React","useEffect","useRef","useFetchMaps","jsxDEV","_jsxDEV","kakao","window","PreviewPost","content","_s","mapContainerRef","option","markers","overlays","current","center","length","map","maps","Map","forEach","marker","setMap","overlay","console","log","className","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/woori/Desktop/Memo-Jung/coursing/client/src/component/CreatePosts/previewPost.js"],"sourcesContent":["import React, { useEffect, useRef } from \"react\";\r\nimport useFetchMaps from \"../etc/fetchMaps\";\r\n\r\nconst { kakao } = window;\r\n\r\nconst PreviewPost = ({content}) => {\r\n    const mapContainerRef = useRef(null);\r\n    const { option, markers, overlays } = useFetchMaps({ content: content });\r\n\r\n    useEffect(() => {\r\n        if (mapContainerRef.current && option.center && markers.length > 0) {\r\n            const map = new kakao.maps.Map(mapContainerRef.current, option);\r\n            markers.forEach(marker => marker.setMap(map));  //마커 설정\r\n            overlays.forEach(overlay => overlay.setMap(null));  //오버레이 설정\r\n        }\r\n        console.log(\"0\");\r\n    }, [option, markers]);\r\n\r\n    return (\r\n        <div className=\"pre\">\r\n            <div className=\"map\" ref={mapContainerRef} ></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PreviewPost;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,OAAOC,YAAY,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAM;EAAEC;AAAM,CAAC,GAAGC,MAAM;AAExB,MAAMC,WAAW,GAAGA,CAAC;EAACC;AAAO,CAAC,KAAK;EAAAC,EAAA;EAC/B,MAAMC,eAAe,GAAGT,MAAM,CAAC,IAAI,CAAC;EACpC,MAAM;IAAEU,MAAM;IAAEC,OAAO;IAAEC;EAAS,CAAC,GAAGX,YAAY,CAAC;IAAEM,OAAO,EAAEA;EAAQ,CAAC,CAAC;EAExER,SAAS,CAAC,MAAM;IACZ,IAAIU,eAAe,CAACI,OAAO,IAAIH,MAAM,CAACI,MAAM,IAAIH,OAAO,CAACI,MAAM,GAAG,CAAC,EAAE;MAChE,MAAMC,GAAG,GAAG,IAAIZ,KAAK,CAACa,IAAI,CAACC,GAAG,CAACT,eAAe,CAACI,OAAO,EAAEH,MAAM,CAAC;MAC/DC,OAAO,CAACQ,OAAO,CAACC,MAAM,IAAIA,MAAM,CAACC,MAAM,CAACL,GAAG,CAAC,CAAC,CAAC,CAAE;MAChDJ,QAAQ,CAACO,OAAO,CAACG,OAAO,IAAIA,OAAO,CAACD,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAE;IACxD;IACAE,OAAO,CAACC,GAAG,CAAC,GAAG,CAAC;EACpB,CAAC,EAAE,CAACd,MAAM,EAAEC,OAAO,CAAC,CAAC;EAErB,oBACIR,OAAA;IAAKsB,SAAS,EAAC,KAAK;IAAAC,QAAA,eAChBvB,OAAA;MAAKsB,SAAS,EAAC,KAAK;MAACE,GAAG,EAAElB;IAAgB;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjD,CAAC;AAEd,CAAC;AAAAvB,EAAA,CAlBKF,WAAW;EAAA,QAEyBL,YAAY;AAAA;AAAA+B,EAAA,GAFhD1B,WAAW;AAoBjB,eAAeA,WAAW;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}