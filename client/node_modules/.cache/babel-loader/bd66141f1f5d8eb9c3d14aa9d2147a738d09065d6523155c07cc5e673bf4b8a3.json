{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\woori\\\\Desktop\\\\Memo-Jung\\\\coursing\\\\client\\\\src\\\\pages\\\\Main.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchPosts } from \"../redux/actions/postActions\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Main = () => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  useEffect(() => {\n    axios.get('http://localhost:8000/api/main').then(response => {\n      setPosts(response.data); // 서버에서 받아온 데이터를 상태에 저장\n    }).catch(error => {\n      console.error('Error fetching posts:', error);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post_list\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"POSTS : \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this), postfunc(posts)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n};\n_s(Main, \"bG8V4duoIfO0BEPgauWMVT5Qvyw=\");\n_c = Main;\nfunction posts(props) {\n  const postlist = [];\n  for (let i = 0; i < props.length; i++) {\n    const post = props[i];\n    postlist.push( /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: post.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: post.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)]\n    }, post.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this));\n  }\n}\nexport default Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["React","useEffect","useState","useDispatch","useSelector","fetchPosts","axios","jsxDEV","_jsxDEV","Main","_s","posts","setPosts","get","then","response","data","catch","error","console","Fragment","children","className","fileName","_jsxFileName","lineNumber","columnNumber","postfunc","_c","props","postlist","i","length","post","push","title","content","id","$RefreshReg$"],"sources":["C:/Users/woori/Desktop/Memo-Jung/coursing/client/src/pages/Main.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { fetchPosts } from \"../redux/actions/postActions\";\r\nimport axios from \"axios\";\r\n\r\nconst Main = () => {\r\n    const [posts, setPosts] = useState([]);\r\n\r\n    useEffect(() => {\r\n        axios.get('http://localhost:8000/api/main')\r\n            .then(response => {\r\n                setPosts(response.data);  // 서버에서 받아온 데이터를 상태에 저장\r\n            })\r\n            .catch(error => {\r\n                console.error('Error fetching posts:', error);\r\n            });\r\n    }, []);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"post_list\">\r\n                <div>POSTS : </div>\r\n                {postfunc(posts)}\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n\r\n}\r\n\r\nfunction posts(props) {\r\n    const postlist = [];\r\n    for (let i = 0; i < props.length; i++) {\r\n        const post = props[i];\r\n        postlist.push(\r\n            <div key={post.id}>\r\n                <h3>{post.title}</h3>\r\n                <p>{post.content}</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Main;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,UAAU,QAAQ,8BAA8B;AACzD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACf,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAEtCD,SAAS,CAAC,MAAM;IACZK,KAAK,CAACO,GAAG,CAAC,gCAAgC,CAAC,CACtCC,IAAI,CAACC,QAAQ,IAAI;MACdH,QAAQ,CAACG,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAE;IAC9B,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAI;MACZC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IACjD,CAAC,CAAC;EACV,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIV,OAAA,CAACR,KAAK,CAACoB,QAAQ;IAAAC,QAAA,eACXb,OAAA;MAAKc,SAAS,EAAC,WAAW;MAAAD,QAAA,gBACtBb,OAAA;QAAAa,QAAA,EAAK;MAAQ;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,EAClBC,QAAQ,CAAChB,KAAK,CAAC;IAAA;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACf;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACM,CAAC;AAGzB,CAAC;AAAAhB,EAAA,CAtBKD,IAAI;AAAAmB,EAAA,GAAJnB,IAAI;AAwBV,SAASE,KAAKA,CAACkB,KAAK,EAAE;EAClB,MAAMC,QAAQ,GAAG,EAAE;EACnB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,KAAK,CAACG,MAAM,EAAED,CAAC,EAAE,EAAE;IACnC,MAAME,IAAI,GAAGJ,KAAK,CAACE,CAAC,CAAC;IACrBD,QAAQ,CAACI,IAAI,eACT1B,OAAA;MAAAa,QAAA,gBACIb,OAAA;QAAAa,QAAA,EAAKY,IAAI,CAACE;MAAK;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACrBlB,OAAA;QAAAa,QAAA,EAAIY,IAAI,CAACG;MAAO;QAAAb,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA,GAFfO,IAAI,CAACI,EAAE;MAAAd,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGZ,CACT,CAAC;EACL;AACJ;AAEA,eAAejB,IAAI;AAAC,IAAAmB,EAAA;AAAAU,YAAA,CAAAV,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}