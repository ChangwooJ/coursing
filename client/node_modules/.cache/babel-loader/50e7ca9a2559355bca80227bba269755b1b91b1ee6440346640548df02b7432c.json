{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\woori\\\\Desktop\\\\Memo-Jung\\\\coursing\\\\client\\\\src\\\\component\\\\postList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useContext } from \"react\";\nimport { Swiper, SwiperSlide } from 'swiper/react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContents, fetchPosts } from \"../redux/actions/postActions\";\nimport { AuthContext } from '../context/AuthContext';\nimport Maps from \"../component/maps\";\nimport PlanBanner from \"./banner\";\nimport Header from \"./header\";\nimport { AddPlan } from \"./handlePlan\";\nimport '../css/postList.css';\nimport 'swiper/css';\nimport 'swiper/css/navigation';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostList = ({\n  positions\n}) => {\n  _s();\n  const dispatch = useDispatch();\n  const posts = useSelector(state => state.posts.posts);\n  const contents = useSelector(state => state.contents.contents);\n  const {\n    isAuthenticated,\n    loading\n  } = useContext(AuthContext);\n  useEffect(() => {\n    if (!loading) {\n      dispatch(fetchPosts());\n      dispatch(fetchContents());\n    }\n  }, [dispatch, loading]);\n  const handleAddPlan = async ({\n    content\n  }) => {\n    try {\n      await AddPlan({\n        content\n      });\n    } catch (error) {\n      alert('Failed to add plan.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      isAuthenticated: isAuthenticated\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(PlanBanner, {\n      positions: positions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main_wrap\",\n      children: posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post_wrap\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: post.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: post.user_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"swiper-button-prev swiper_bt\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Swiper, {\n          spaceBetween: 20,\n          slidesPerView: 1,\n          navigation: {\n            prevEl: \".swiper-button-prev\",\n            nextEl: \".swiper-button-next\"\n          },\n          pagination: {\n            type: \"bullets\"\n          },\n          children: contents.filter(content => content.post_id === post.post_id).reverse().map(content => /*#__PURE__*/_jsxDEV(SwiperSlide, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"silde_frame\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"post_content\",\n                children: content.content\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                src: content.img_src\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"map_wrap\",\n                children: /*#__PURE__*/_jsxDEV(Maps, {\n                  id: `${content.id}`,\n                  address: content.address\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 68,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"add_plan\",\n              onClick: () => handleAddPlan({\n                content\n              }),\n              children: \"\\uCD94\\uAC00\\uD558\\uAE30\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 41\n            }, this)]\n          }, content.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 37\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"swiper-button-next swiper_bt\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 25\n        }, this)]\n      }, post.post_id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n_s(PostList, \"DcsX8pXFMV4TwWoOGPDFgrRIbnI=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n_c = PostList;\nexport default PostList;\nvar _c;\n$RefreshReg$(_c, \"PostList\");","map":{"version":3,"names":["React","useEffect","useContext","Swiper","SwiperSlide","useDispatch","useSelector","fetchContents","fetchPosts","AuthContext","Maps","PlanBanner","Header","AddPlan","jsxDEV","_jsxDEV","PostList","positions","_s","dispatch","posts","state","contents","isAuthenticated","loading","handleAddPlan","content","error","alert","Fragment","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","post","title","user_name","spaceBetween","slidesPerView","navigation","prevEl","nextEl","pagination","type","filter","post_id","reverse","src","img_src","id","address","onClick","_c","$RefreshReg$"],"sources":["C:/Users/woori/Desktop/Memo-Jung/coursing/client/src/component/postList.js"],"sourcesContent":["import React, { useEffect, useContext } from \"react\";\r\nimport { Swiper, SwiperSlide } from 'swiper/react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { fetchContents, fetchPosts } from \"../redux/actions/postActions\";\r\nimport { AuthContext } from '../context/AuthContext';\r\nimport Maps from \"../component/maps\";\r\nimport PlanBanner from \"./banner\";\r\nimport Header from \"./header\";\r\nimport { AddPlan } from \"./handlePlan\";\r\nimport '../css/postList.css';\r\nimport 'swiper/css';\r\nimport 'swiper/css/navigation';\r\n\r\nconst PostList = ({ positions }) => {\r\n    const dispatch = useDispatch();\r\n    const posts = useSelector(state => state.posts.posts);\r\n    const contents = useSelector(state => state.contents.contents);\r\n    const { isAuthenticated, loading } = useContext(AuthContext);\r\n\r\n    useEffect(() => {\r\n        if (!loading) {\r\n            dispatch(fetchPosts());\r\n            dispatch(fetchContents());\r\n        }\r\n    }, [dispatch, loading]);\r\n\r\n    const handleAddPlan = async ({content}) => {\r\n        try {\r\n            await AddPlan({content});\r\n        } catch (error) {\r\n            alert('Failed to add plan.');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Header isAuthenticated={isAuthenticated}/>\r\n            <PlanBanner positions={positions} />\r\n            <div className=\"main_wrap\">\r\n                {posts.map((post) => (\r\n                    <div key={post.post_id} className=\"post_wrap\">\r\n                        <h3>{post.title}</h3>\r\n                        <p>{post.user_name}</p>\r\n                        <div className=\"swiper-button-prev swiper_bt\"></div>\r\n                        <Swiper\r\n                            spaceBetween={20}\r\n                            slidesPerView={1}\r\n                            navigation={{\r\n                                prevEl: \".swiper-button-prev\",\r\n                                nextEl: \".swiper-button-next\"\r\n                            }}\r\n                            pagination={{\r\n                                type: \"bullets\"\r\n                            }}\r\n                        >\r\n                            {contents.filter(content => content.post_id === post.post_id)\r\n                                .reverse()\r\n                                .map(content => (\r\n                                    <SwiperSlide key={content.id}>\r\n                                        <div className=\"silde_frame\">\r\n                                            <div className=\"post_content\">\r\n                                                {content.content}\r\n                                            </div>\r\n                                            <img\r\n                                                src={content.img_src}\r\n                                            />\r\n                                            <div className=\"map_wrap\">\r\n                                                <Maps id={`${content.id}`} address={content.address} />\r\n                                            </div>\r\n                                        </div>\r\n                                        <button className=\"add_plan\" onClick={()=> handleAddPlan({content})}>추가하기</button>\r\n                                    </SwiperSlide>\r\n                                ))\r\n                            }\r\n                        </Swiper>\r\n                        <div className=\"swiper-button-next swiper_bt\"></div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n\r\n}\r\n\r\nexport default PostList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}