{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\woori\\\\Desktop\\\\Memo-Jung\\\\coursing\\\\client\\\\src\\\\component\\\\Chat\\\\roomList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchUsers } from \"../../redux/actions/userActions\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst RoomList = ({\n  room,\n  user_id\n}) => {\n  _s();\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const users = useSelector(state => state.users.users);\n  const get_target_id = () => {\n    if (room.user_id === user_id) {\n      return room.target_user_id;\n    } else if (room.target_user_id === user_id) {\n      return room.user_id;\n    }\n    return null; // 두 값이 모두 같지 않은 경우\n  };\n  const target_id = get_target_id();\n  const target_info = users.find(user => user.user_id === target_id);\n  const room_name = room.room_name;\n  const [chatLogs, setChatLogs] = useState('');\n  useEffect(() => {\n    dispatch(fetchUsers());\n  }, [dispatch]);\n  useEffect(() => {\n    const findRoom = async () => {\n      try {\n        const response = await axios.get('http://localhost:8000/api/chat_room/get_message', {\n          params: {\n            room_name\n          }\n        });\n        setChatLogs(response.data);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    if (room_name) {\n      findRoom();\n    }\n  }, [room_name]);\n  const lastChatLog = chatLogs.length > 0 ? chatLogs[chatLogs.length - 1] : null;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: target_info && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"room_wrap\",\n      onClick: () => navigate(`/chat/${target_id}`),\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: target_info.profile_img,\n        className: \"target_img\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }, this), lastChatLog && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"room_info\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"target_name\",\n          children: target_info.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat_info\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: lastChatLog.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"room_time\",\n            children: lastChatLog.time\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }, this)\n  }, void 0, false);\n};\n_s(RoomList, \"V3TWXYBimWQyRoXcFXZEdNBJAiE=\", false, function () {\n  return [useNavigate, useDispatch, useSelector];\n});\n_c = RoomList;\nexport default RoomList;\nvar _c;\n$RefreshReg$(_c, \"RoomList\");","map":{"version":3,"names":["React","useEffect","useState","useDispatch","useSelector","fetchUsers","axios","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","RoomList","room","user_id","_s","navigate","dispatch","users","state","get_target_id","target_user_id","target_id","target_info","find","user","room_name","chatLogs","setChatLogs","findRoom","response","get","params","data","err","console","log","lastChatLog","length","children","className","onClick","src","profile_img","fileName","_jsxFileName","lineNumber","columnNumber","name","message","time","_c","$RefreshReg$"],"sources":["C:/Users/woori/Desktop/Memo-Jung/coursing/client/src/component/Chat/roomList.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { fetchUsers } from \"../../redux/actions/userActions\";\r\nimport axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst RoomList = ({ room, user_id }) => {\r\n    const navigate = useNavigate();\r\n    const dispatch = useDispatch();\r\n    const users = useSelector(state => state.users.users);\r\n    const get_target_id = () => {\r\n        if (room.user_id === user_id) {\r\n            return room.target_user_id;\r\n        } else if (room.target_user_id === user_id) {\r\n            return room.user_id;\r\n        }\r\n        return null; // 두 값이 모두 같지 않은 경우\r\n    };\r\n    const target_id = get_target_id();\r\n    const target_info = users.find(user => user.user_id === target_id);\r\n    const room_name = room.room_name;\r\n    const [chatLogs, setChatLogs] = useState('');\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchUsers());\r\n    }, [dispatch]);\r\n\r\n    useEffect(() => {\r\n        const findRoom = async () => {\r\n            try {\r\n                const response = await axios.get('http://localhost:8000/api/chat_room/get_message', {\r\n                    params: { room_name }\r\n                });\r\n\r\n                setChatLogs(response.data);\r\n            } catch (err) {\r\n                console.log(err);\r\n            }\r\n        };\r\n\r\n        if (room_name) {\r\n            findRoom();\r\n        }\r\n    }, [room_name]);\r\n\r\n    const lastChatLog = chatLogs.length > 0 ? chatLogs[chatLogs.length - 1] : null;\r\n\r\n    return (\r\n        <>\r\n            {target_info && (\r\n                <div className=\"room_wrap\" onClick={() => navigate(`/chat/${target_id}`)}>\r\n                    <img src={target_info.profile_img} className=\"target_img\" />\r\n                    {lastChatLog && (\r\n                        <div className=\"room_info\">\r\n                            <p className=\"target_name\">{target_info.name}</p>\r\n                            <div className=\"chat_info\">\r\n                                <p>{lastChatLog.message}</p>\r\n                                <span className=\"room_time\">{lastChatLog.time}</span>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n        )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default RoomList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}