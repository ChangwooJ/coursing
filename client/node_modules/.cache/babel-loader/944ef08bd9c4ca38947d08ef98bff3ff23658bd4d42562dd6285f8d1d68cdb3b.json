{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\woori\\\\Desktop\\\\Memo-Jung\\\\coursing\\\\client\\\\src\\\\pages\\\\Main.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContents, fetchPosts } from \"../redux/actions/postActions\";\nimport Maps from \"../component/maps\";\nimport 'swiper/css';\nimport '../css/Main.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Main = () => {\n  _s();\n  const dispatch = useDispatch();\n  const posts = useSelector(state => state.posts.posts);\n  const contents = useSelector(state => state.contents.contents);\n  const [curIdx, setCurIdx] = useState(0); //현재 슬라이드의 인덱스\n\n  useEffect(() => {\n    dispatch(fetchPosts());\n    dispatch(fetchContents());\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post_list\",\n      children: posts.map(post =>\n      /*#__PURE__*/\n      //게시글의 정보를 가져와 차례로 로드함\n      _jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: post.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: post.user_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"swiper-prev swiper_bt\",\n          children: \"<\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 25\n        }, this), contents.filter(content => content.post_id === post.post_id) //게시글에 맞는 내용을 필터링\n        .reverse().map(content => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: content.img_src,\n            style: {\n              width: '20%',\n              height: '40vh'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 41\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              width: '30%',\n              height: '400px'\n            },\n            children: /*#__PURE__*/_jsxDEV(Maps, {\n              lat: content.lat,\n              lon: content.lon\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 45\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 41\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: content.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 41\n          }, this)]\n        }, content.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 37\n        }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"swiper-next swiper_bt\",\n          children: \">\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 25\n        }, this)]\n      }, post.post_id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n};\n_s(Main, \"T8hBR+1h+OWaOJaeIvoPZAYQAEg=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n_c = Main;\nexport default Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["React","useEffect","useState","useDispatch","useSelector","fetchContents","fetchPosts","Maps","jsxDEV","_jsxDEV","Main","_s","dispatch","posts","state","contents","curIdx","setCurIdx","Fragment","children","className","map","post","title","fileName","_jsxFileName","lineNumber","columnNumber","user_name","filter","content","post_id","reverse","src","img_src","style","width","height","lat","lon","id","_c","$RefreshReg$"],"sources":["C:/Users/woori/Desktop/Memo-Jung/coursing/client/src/pages/Main.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { fetchContents, fetchPosts } from \"../redux/actions/postActions\";\r\nimport Maps from \"../component/maps\";\r\nimport 'swiper/css';\r\nimport '../css/Main.css';\r\n\r\nconst Main = () => {\r\n    const dispatch = useDispatch();\r\n    const posts = useSelector(state => state.posts.posts);\r\n    const contents = useSelector(state => state.contents.contents);\r\n    const [curIdx, setCurIdx] = useState(0);    //현재 슬라이드의 인덱스\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchPosts());\r\n        dispatch(fetchContents());\r\n    }, [dispatch]);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"post_list\">\r\n                {posts.map((post) => (  //게시글의 정보를 가져와 차례로 로드함\r\n                    <div key={post.post_id}>\r\n                        <h3>{post.title}</h3>\r\n                        <p>{post.user_name}</p>\r\n                        <button className=\"swiper-prev swiper_bt\">{\"<\"}</button>\r\n                        {contents.filter(content => content.post_id === post.post_id)   //게시글에 맞는 내용을 필터링\r\n                                .reverse()\r\n                                .map(content => (\r\n                                    <div key={content.id}>\r\n                                        <img\r\n                                            src={content.img_src}\r\n                                            style={{ width: '20%', height: '40vh' }}\r\n                                        />\r\n                                        <div style={{ width: '30%', height: '400px' }}>\r\n                                            <Maps lat={content.lat} lon={content.lon} />\r\n                                        </div>\r\n                                        <p>{content.content}</p>\r\n                                    </div>\r\n                                ))\r\n                            }\r\n                        <button className=\"swiper-next swiper_bt\">{\">\"}</button>\r\n\r\n                    </div>\r\n                ))}\r\n\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n\r\n}\r\n\r\nexport default Main;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}